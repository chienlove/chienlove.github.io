name: Advanced Plist Manager

on:
  schedule:
    - cron: '*/30 * * * *' # Chạy mỗi 30 phút
  workflow_dispatch:
    inputs:
      force:
        description: 'Force update all plists'
        required: false
        default: 'false'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

jobs:
  plist-updater:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Auto-generate package-lock.json (if missing)
        run: |
          if [ ! -f package-lock.json ]; then
            echo "Generating package-lock.json..."
            npm init -y --scope=temp-pkg 2>/dev/null || true
            npm install axios@1.6.7 plist@3.1.0 crypto-js@4.1.1 dotenv@16.3.1 --no-audit --no-fund --package-lock-only
            mv package-lock.json ../
            cd ..
            rm -rf temp-pkg/
          else
            echo "package-lock.json already exists"
          fi

      - name: Install dependencies
        run: |
          sudo chown -R $USER:$USER ~/.npm
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund

      - name: Run Plist Updater
        id: update
        run: |
          FORCE_UPDATE=${{ inputs.force == 'true' && '--force' || '' }}
          node ./scripts/plist-updater.js $FORCE_UPDATE | tee output.log
          echo "summary=$(grep -oP 'SUMMARY: .+' output.log | cut -d' ' -f2-)" >> $GITHUB_OUTPUT
          echo "changed=$(grep -oP 'CHANGED: \K\d+' output.log)" >> $GITHUB_OUTPUT
          echo "errors=$(grep -oP 'ERRORS: \K\d+' output.log)" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.update.outputs.changed != '0'
        run: |
          git config --global user.name "GitHub Plist Bot"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add .
          git diff --cached --quiet || git commit -m "🔄 Auto-update plist files [skip ci]"
          git push

      - name: Trigger Netlify Build
        if: steps.update.outputs.changed != '0'
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './'
          production-branch: 'master'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Send Telegram notification
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            *Plist Update Report*
            ▫️ *Status*: ${{ job.status }}
            ▫️ *Changes*: ${{ steps.update.outputs.changed }} files
            ▫️ *Errors*: ${{ steps.update.outputs.errors }}
            ▫️ *Summary*: ${{ steps.update.outputs.summary }}
            
            📊 [View Job](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          parse_mode: markdown

      - name: Upload logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: plist-updater-logs
          path: |
            output.log
            npm-debug.log
