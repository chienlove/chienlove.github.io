name: Ultimate Plist Updater

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force update all plists'
        required: false
        default: 'false'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

jobs:
  plist-updater:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Create package.json if missing
        run: |
          if [ ! -f package.json ]; then
            echo "{
              \"name\": \"plist-updater\",
              \"version\": \"1.0.0\",
              \"dependencies\": {
                \"axios\": \"^1.6.7\",
                \"plist\": \"^3.1.0\",
                \"crypto-js\": \"^4.1.1\",
                \"dotenv\": \"^16.3.1\"
              }
            }" > package.json
          fi

      - name: Generate reliable package-lock.json
        run: |
          # Đảm bảo quyền truy cập
          sudo chown -R $USER:$USER ~/.npm
          sudo chown -R $USER:$USER .
          
          # Tạo lock file cứng
          npm install --package-lock-only --no-audit --no-fund --loglevel=error
          npm ci --no-audit --no-fund || {
            echo "Fallback to manual install..."
            rm -rf node_modules/
            npm install --no-audit --no-fund
          }

      - name: Verify dependencies
        run: |
          ls -la
          echo "===== package-lock.json content ====="
          head -n 20 package-lock.json || echo "No package-lock.json found"
          echo "===== node_modules ====="
          ls node_modules/ || echo "No node_modules"

      - name: Run Plist Updater
        id: update
        run: |
          FORCE_UPDATE=${{ inputs.force == 'true' && '--force' || '' }}
          node ./scripts/plist-updater.js $FORCE_UPDATE | tee output.log
          echo "summary=$(grep -oP 'SUMMARY: .+' output.log | cut -d' ' -f2-)" >> $GITHUB_OUTPUT
          echo "changed=$(grep -oP 'CHANGED: \K\d+' output.log)" >> $GITHUB_OUTPUT
          echo "errors=$(grep -oP 'ERRORS: \K\d+' output.log)" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.update.outputs.changed != '0'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff --cached --quiet || git commit -m "🔁 Auto-update plist files [skip ci]"
          git push

      - name: Trigger Netlify Build
        if: steps.update.outputs.changed != '0'
        run: |
          curl -X POST -d {} $NETLIFY_BUILD_HOOK

      - name: Send Telegram notification
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            *🛠️ Plist Update Report*
            ▫️ *Status*: ${{ job.status }}
            ▫️ *Changes*: ${{ steps.update.outputs.changed }} files
            ▫️ *Errors*: ${{ steps.update.outputs.errors }}
            
            📦 *Deps Status*:
            - package-lock.json: $(if [ -f package-lock.json ]; then echo "✅ Present"; else echo "❌ Missing"; fi)
            - node_modules: $(if [ -d node_modules ]; then echo "✅ Installed"; else echo "❌ Missing"; fi)
            
            🔍 [View Job](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          parse_mode: markdown

      - name: Upload debug info
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-info
          path: |
            output.log
            package.json
            package-lock.json
            npm-debug.log
