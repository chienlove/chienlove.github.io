name: Sign IPA with Zsign

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag containing IPA"
        required: true
      identifier:
        description: "(Optional) New Bundle Identifier"
        required: false

jobs:
  sign:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: read

    env:
      GH_TOKEN: ${{ github.token }}
      REPO: ${{ github.repository }}
      SUPABASE_URL: https://your-supabase-url.supabase.co
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch certificate from Supabase
        run: |
          response=$(curl -s -X GET \
            -H "apikey: $SUPABASE_KEY" \
            -H "Authorization: Bearer $SUPABASE_KEY" \
            "$SUPABASE_URL/rest/v1/certificates?select=*")

          echo "$response" | jq -r '.[0].p12_url' > p12_url.txt
          echo "$response" | jq -r '.[0].provision_url' > provision_url.txt
          echo "$response" | jq -r '.[0].password' > password.txt

          echo "CERT_P12_URL=$(cat p12_url.txt)" >> $GITHUB_ENV
          echo "PROVISION_URL=$(cat provision_url.txt)" >> $GITHUB_ENV
          echo "CERT_PASSWORD=$(cat password.txt)" >> $GITHUB_ENV

      - name: Download assets
        run: |
          curl -L "$CERT_P12_URL" -o cert.p12
          curl -L "$PROVISION_URL" -o embedded.mobileprovision

      - name: Extract Team ID
        run: |
          security cms -D -i embedded.mobileprovision > provision.plist
          TEAM_ID=$(/usr/libexec/PlistBuddy -c 'Print TeamIdentifier:0' provision.plist)
          echo "TEAM_ID=$TEAM_ID" >> $GITHUB_ENV
          echo "Team ID: $TEAM_ID"

      - name: Set inputs
        run: |
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          echo "IDENTIFIER=${{ github.event.inputs.identifier }}" >> $GITHUB_ENV

      - name: Download release IPAs
        run: |
          gh release download "$TAG" --pattern "*.ipa"
          IPA_COUNT=$(ls *.ipa 2>/dev/null | wc -l)
          if [ "$IPA_COUNT" -eq 0 ]; then
            echo "::error::No IPA files found"
            exit 1
          fi
          echo "Found $IPA_COUNT IPA files"

      - name: Install Zsign
        run: |
          brew install pkg-config openssl@1.1 minizip
          git clone --depth 1 https://github.com/zhlynn/zsign.git
          cd zsign
          make -C build/macos
          sudo cp bin/zsign /usr/local/bin/
          zsign -v

      - name: Prepare entitlements
        run: |
          security cms -D -i embedded.mobileprovision > provision.plist
          plutil -extract Entitlements xml1 -o entitlements.plist provision.plist

          if [ -n "$IDENTIFIER" ]; then
            plutil -replace 'application-identifier' -string "$TEAM_ID.$IDENTIFIER" entitlements.plist
            plutil -replace 'keychain-access-groups.0' -string "$TEAM_ID.*" entitlements.plist
          fi

      - name: Sign IPAs
        run: |
          mkdir -p signed
          for IPA in *.ipa; do
            OUTPUT="signed/$(basename "$IPA" .ipa)-signed.ipa"
            
            echo "Signing $IPA..."
            zsign -f \
              -k cert.p12 -p "$CERT_PASSWORD" \
              -m embedded.mobileprovision \
              ${IDENTIFIER:+-b "$IDENTIFIER"} \
              -e entitlements.plist \
              -z 9 \
              -o "$OUTPUT" "$IPA"

            # Verify
            unzip -q "$OUTPUT" -d temp
            if [ ! -f "$(find temp -name embedded.mobileprovision | head -1)" ]; then
              echo "::error::Provisioning profile missing in $OUTPUT"
              exit 1
            fi
            rm -rf temp
          done

      - name: Upload signed IPAs
        run: |
          for IPA in signed/*.ipa; do
            gh release upload "$TAG" "$IPA"
            echo "Uploaded: $(basename "$IPA")"
          done

      - name: Create download links
        run: |
          echo "### Download Links" >> $GITHUB_STEP_SUMMARY
          for IPA in signed/*.ipa; do
            echo "- [$(basename "$IPA")](https://github.com/$REPO/releases/download/$TAG/$(basename "$IPA"))" >> $GITHUB_STEP_SUMMARY
          done