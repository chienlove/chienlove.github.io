{"version":3,"names":["getActiveFormats","updateFormats","INSERTION_INPUT_TYPES_TO_IGNORE","Set","EMPTY_ACTIVE_FORMATS","PLACEHOLDER_ATTR_NAME","fixPlaceholderSelection","defaultView","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","hasAttribute","collapseToStart","props","element","ownerDocument","isComposing","onInput","event","inputType","record","applyRecord","createRecord","handleChange","current","indexOf","has","currentValue","start","activeFormats","oldActiveFormats","change","value","end","formats","handleSelectionChange","onSelectionChange","contentEditable","activeElement","removeEventListener","text","oldRecord","length","newValue","_newActiveFormats","undefined","newActiveFormats","domOnly","onCompositionStart","querySelector","remove","onCompositionEnd","addEventListener","onFocus","isSelected","parentElement","closest","index","window","queueMicrotask"],"sources":["@wordpress/rich-text/src/component/event-listeners/input-and-selection.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../../get-active-formats';\nimport { updateFormats } from '../../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nconst PLACEHOLDER_ATTR_NAME = 'data-rich-text-placeholder';\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.hasAttribute( PLACEHOLDER_ATTR_NAME )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport default ( props ) => ( element ) => {\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\n\tlet isComposing = false;\n\n\tfunction onInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed. As of December 2019, Safari doesn't support\n\t\t// nativeEvent.isComposing.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tconst { record, applyRecord, createRecord, handleChange } =\n\t\t\tprops.current;\n\n\t\t// The browser formatted something or tried to insert HTML. Overwrite\n\t\t// it. It will be handled later by the format library if needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tapplyRecord( record.current );\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, activeFormats: oldActiveFormats = [] } = record.current;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue: currentValue,\n\t\t\tstart,\n\t\t\tend: currentValue.start,\n\t\t\tformats: oldActiveFormats,\n\t\t} );\n\n\t\thandleChange( change );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * event.\n\t */\n\tfunction handleSelectionChange() {\n\t\tconst { record, applyRecord, createRecord, onSelectionChange } =\n\t\t\tprops.current;\n\n\t\t// Check if the implementor disabled editing. `contentEditable` does\n\t\t// disable input, but not text selection, so we must ignore selection\n\t\t// changes.\n\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the active element is the rich text element.\n\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t// If it is not, we can stop listening for selection changes. We\n\t\t\t// resume listening when the element is focused.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = createRecord();\n\t\tconst oldRecord = record.current;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== oldRecord.text ) {\n\t\t\tonInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = {\n\t\t\t...oldRecord,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t// give the active formats according to the browser.\n\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t_newActiveFormats: undefined,\n\t\t};\n\n\t\tconst newActiveFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue, { domOnly: true } );\n\t\tonSelectionChange( start, end );\n\t}\n\n\tfunction onCompositionStart() {\n\t\tisComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might destroy internal browser\n\t\t// editing state.\n\t\townerDocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t\t// Remove the placeholder. Since the rich text value doesn't update\n\t\t// during composition, the placeholder doesn't get removed. There's no\n\t\t// need to re-add it, when the value is updated on compositionend it\n\t\t// will be re-added when the value is empty.\n\t\telement.querySelector( `[${ PLACEHOLDER_ATTR_NAME }]` )?.remove();\n\t}\n\n\tfunction onCompositionEnd() {\n\t\tisComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tonInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction onFocus() {\n\t\tconst { record, isSelected, onSelectionChange, applyRecord } =\n\t\t\tprops.current;\n\n\t\t// When the whole editor is editable, let writing flow handle\n\t\t// selection.\n\t\tif ( element.parentElement.closest( '[contenteditable=\"true\"]' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t// event.\n\t\t\tconst index = undefined;\n\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t};\n\t\t} else {\n\t\t\tapplyRecord( record.current, { domOnly: true } );\n\t\t}\n\n\t\tonSelectionChange( record.current.start, record.current.end );\n\n\t\t// There is no selection change event when the element is focused, so\n\t\t// we need to manually trigger it. The selection is also not available\n\t\t// yet in this call stack.\n\t\twindow.queueMicrotask( handleSelectionChange );\n\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\telement.addEventListener( 'input', onInput );\n\telement.addEventListener( 'compositionstart', onCompositionStart );\n\telement.addEventListener( 'compositionend', onCompositionEnd );\n\telement.addEventListener( 'focus', onFocus );\n\n\treturn () => {\n\t\telement.removeEventListener( 'input', onInput );\n\t\telement.removeEventListener( 'compositionstart', onCompositionStart );\n\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\telement.removeEventListener( 'focus', onFocus );\n\t};\n};\n"],"mappings":"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","ignoreList":[]}