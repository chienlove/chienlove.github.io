{"version":3,"names":["_keycodes","require","_isCollapsed","EMPTY_ACTIVE_FORMATS","_default","props","element","onKeyDown","event","keyCode","shiftKey","altKey","metaKey","ctrlKey","LEFT","RIGHT","record","applyRecord","forceRender","current","text","formats","start","end","activeFormats","currentActiveFormats","collapsed","isCollapsed","ownerDocument","defaultView","direction","getComputedStyle","reverseKey","isReverse","length","formatsBefore","formatsAfter","destination","isIncreasing","every","format","index","newActiveFormatsLength","_newActiveFormats","preventDefault","origin","source","newActiveFormats","slice","newValue","addEventListener","removeEventListener","exports","default"],"sources":["@wordpress/rich-text/src/component/event-listeners/format-boundaries.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport default ( props ) => ( element ) => {\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { record, applyRecord, forceRender } = props.current;\n\t\tconst {\n\t\t\ttext,\n\t\t\tformats,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t} = record.current;\n\t\tconst collapsed = isCollapsed( record.current );\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t( format, index ) => format === destination[ index ]\n\t\t);\n\n\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\tif ( ! isIncreasing ) {\n\t\t\tnewActiveFormatsLength--;\n\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\tnewActiveFormatsLength++;\n\t\t}\n\n\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\trecord.current._newActiveFormats = destination;\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\tconst source = isIncreasing ? destination : origin;\n\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\tconst newValue = {\n\t\t\t...record.current,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue );\n\t\tforceRender();\n\t}\n\n\telement.addEventListener( 'keydown', onKeyDown );\n\treturn () => {\n\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t};\n};\n"],"mappings":"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","ignoreList":[]}