{"version":3,"names":["_data","require","_store","_createElement","_concat","_specialCharacters","_toHtmlString","_getTextContent","createEmptyValue","formats","replacements","text","toFormat","tagName","attributes","formatType","class","select","richTextStore","getFormatTypeForClassName","replace","className","trim","getFormatTypeForBareElement","type","__experimentalCreatePrepareEditableTree","__experimentalCreateOnChangeEditableValue","name","registeredAttributes","unregisteredAttributes","_attributes","key","contentEditable","contenteditable","RichTextData","value","empty","fromPlainText","create","fromHTMLString","html","fromHTMLElement","htmlElement","options","preserveWhiteSpace","element","collapseWhiteSpace","richTextData","Object","defineProperty","innerHTML","constructor","init","toPlainText","getTextContent","toHTMLString","originalHTML","valueOf","toString","toJSON","length","exports","getOwnPropertyNames","String","prototype","hasOwnProperty","args","range","__unstableIsEditableTree","isEditableTree","Array","createElement","document","createFromElement","accumulateSelection","accumulator","node","parentNode","startContainer","startOffset","endContainer","endOffset","currentLength","start","undefined","nodeType","TEXT_NODE","childNodes","end","filterRange","filter","nodeValue","slice","isRoot","clone","cloneNode","normalize","from","forEach","i","nodes","newNodeValue","test","indexOf","startsWith","endsWith","ELEMENT_NODE","CARRIAGE_RETURN","removeReservedCharacters","string","RegExp","ZWNBSP","OBJECT_REPLACEMENT_CHARACTER","hasChildNodes","index","nodeName","toLowerCase","getAttribute","encodeURIComponent","mergePair","format","getAttributes","mergeFormats","newFormats","hasAttributes","safeName"],"sources":["@wordpress/rich-text/src/create.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\nimport { toHTMLString } from './to-html-string';\nimport { getTextContent } from './get-text-content';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction toFormat( { tagName, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType =\n\t\t\tselect( richTextStore ).getFormatTypeForBareElement( tagName );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type: tagName, attributes } : { type: tagName };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { formatType, type: formatType.name, tagName };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\tconst _attributes = { ...attributes };\n\n\tfor ( const key in formatType.attributes ) {\n\t\tconst name = formatType.attributes[ key ];\n\n\t\tregisteredAttributes[ key ] = _attributes[ name ];\n\n\t\t// delete the attribute and what's left is considered\n\t\t// to be unregistered.\n\t\tdelete _attributes[ name ];\n\n\t\tif ( typeof registeredAttributes[ key ] === 'undefined' ) {\n\t\t\tdelete registeredAttributes[ key ];\n\t\t}\n\t}\n\n\tfor ( const name in _attributes ) {\n\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t}\n\n\tif ( formatType.contentEditable === false ) {\n\t\tdelete unregisteredAttributes.contenteditable;\n\t}\n\n\treturn {\n\t\tformatType,\n\t\ttype: formatType.name,\n\t\ttagName,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * The RichTextData class is used to instantiate a wrapper around rich text\n * values, with methods that can be used to transform or manipulate the data.\n *\n * - Create an empty instance: `new RichTextData()`.\n * - Create one from an HTML string: `RichTextData.fromHTMLString(\n *   '<em>hello</em>' )`.\n * - Create one from a wrapper HTMLElement: `RichTextData.fromHTMLElement(\n *   document.querySelector( 'p' ) )`.\n * - Create one from plain text: `RichTextData.fromPlainText( '1\\n2' )`.\n * - Create one from a rich text value: `new RichTextData( { text: '...',\n *   formats: [ ... ] } )`.\n *\n * @todo Add methods to manipulate the data, such as applyFormat, slice etc.\n */\nexport class RichTextData {\n\t#value;\n\n\tstatic empty() {\n\t\treturn new RichTextData();\n\t}\n\tstatic fromPlainText( text ) {\n\t\treturn new RichTextData( create( { text } ) );\n\t}\n\tstatic fromHTMLString( html ) {\n\t\treturn new RichTextData( create( { html } ) );\n\t}\n\tstatic fromHTMLElement( htmlElement, options = {} ) {\n\t\tconst { preserveWhiteSpace = false } = options;\n\t\tconst element = preserveWhiteSpace\n\t\t\t? htmlElement\n\t\t\t: collapseWhiteSpace( htmlElement );\n\t\tconst richTextData = new RichTextData( create( { element } ) );\n\t\tObject.defineProperty( richTextData, 'originalHTML', {\n\t\t\tvalue: htmlElement.innerHTML,\n\t\t} );\n\t\treturn richTextData;\n\t}\n\tconstructor( init = createEmptyValue() ) {\n\t\tthis.#value = init;\n\t}\n\ttoPlainText() {\n\t\treturn getTextContent( this.#value );\n\t}\n\t// We could expose `toHTMLElement` at some point as well, but we'd only use\n\t// it internally.\n\ttoHTMLString( { preserveWhiteSpace } = {} ) {\n\t\treturn (\n\t\t\tthis.originalHTML ||\n\t\t\ttoHTMLString( { value: this.#value, preserveWhiteSpace } )\n\t\t);\n\t}\n\tvalueOf() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoString() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoJSON() {\n\t\treturn this.toHTMLString();\n\t}\n\tget length() {\n\t\treturn this.text.length;\n\t}\n\tget formats() {\n\t\treturn this.#value.formats;\n\t}\n\tget replacements() {\n\t\treturn this.#value.replacements;\n\t}\n\tget text() {\n\t\treturn this.#value.text;\n\t}\n}\n\nfor ( const name of Object.getOwnPropertyNames( String.prototype ) ) {\n\tif ( RichTextData.prototype.hasOwnProperty( name ) ) {\n\t\tcontinue;\n\t}\n\n\tObject.defineProperty( RichTextData.prototype, name, {\n\t\tvalue( ...args ) {\n\t\t\t// Should we convert back to RichTextData?\n\t\t\treturn this.toHTMLString()[ name ]( ...args );\n\t\t},\n\t} );\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. The optional\n * functions can be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                          Optional named arguments.\n * @param {Element} [$1.element]                  Element to create value from.\n * @param {string}  [$1.text]                     Text to create value from.\n * @param {string}  [$1.html]                     HTML to create value from.\n * @param {Range}   [$1.range]                    Range to create value from.\n * @param {boolean} [$1.__unstableIsEditableTree]\n * @return {RichTextValue} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\t__unstableIsEditableTree: isEditableTree,\n} = {} ) {\n\tif ( html instanceof RichTextData ) {\n\t\treturn {\n\t\t\ttext: html.text,\n\t\t\tformats: html.formats,\n\t\t\treplacements: html.replacements,\n\t\t};\n\t}\n\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\t// It does not matter which document this is, we're just using it to\n\t\t// parse.\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\treturn createFromElement( {\n\t\telement,\n\t\trange,\n\t\tisEditableTree,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {Object|void} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * We need to strip it from the content because we use white-space: pre-wrap for\n * displaying editable rich text. Without using white-space: pre-wrap, the\n * browser will litter the content with non breaking spaces, among other issues.\n * See packages/rich-text/src/component/use-default-style.js.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/CSS/white-space-collapse#collapsing_of_white_space\n *\n * @param {HTMLElement} element\n * @param {boolean}     isRoot\n *\n * @return {HTMLElement} New element with collapsed whitespace.\n */\nfunction collapseWhiteSpace( element, isRoot = true ) {\n\tconst clone = element.cloneNode( true );\n\tclone.normalize();\n\tArray.from( clone.childNodes ).forEach( ( node, i, nodes ) => {\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tlet newNodeValue = node.nodeValue;\n\n\t\t\tif ( /[\\n\\t\\r\\f]/.test( newNodeValue ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( /[\\n\\t\\r\\f]+/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( newNodeValue.indexOf( '  ' ) !== -1 ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( / {2,}/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( i === 0 && newNodeValue.startsWith( ' ' ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 1 );\n\t\t\t} else if (\n\t\t\t\tisRoot &&\n\t\t\t\ti === nodes.length - 1 &&\n\t\t\t\tnewNodeValue.endsWith( ' ' )\n\t\t\t) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 0, -1 );\n\t\t\t}\n\n\t\t\tnode.nodeValue = newNodeValue;\n\t\t} else if ( node.nodeType === node.ELEMENT_NODE ) {\n\t\t\tcollapseWhiteSpace( node, false );\n\t\t}\n\t} );\n\treturn clone;\n}\n\n/**\n * We need to normalise line breaks to `\\n` so they are consistent across\n * platforms and serialised properly. Not removing \\r would cause it to\n * linger and result in double line breaks when whitespace is preserved.\n */\nconst CARRIAGE_RETURN = '\\r';\n\n/**\n * Removes reserved characters used by rich-text (zero width non breaking spaces\n * added by `toTree` and object replacement characters).\n *\n * @param {string} string\n */\nexport function removeReservedCharacters( string ) {\n\t// with the global flag, note that we should create a new regex each time OR\n\t// reset lastIndex state.\n\treturn string.replace(\n\t\tnew RegExp(\n\t\t\t`[${ ZWNBSP }${ OBJECT_REPLACEMENT_CHARACTER }${ CARRIAGE_RETURN }]`,\n\t\t\t'gu'\n\t\t),\n\t\t''\n\t);\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}  $1                  Named argements.\n * @param {Element} [$1.element]        Element to create value from.\n * @param {Range}   [$1.range]          Range to create value from.\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromElement( { element, range, isEditableTree } ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst tagName = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tconst text = removeReservedCharacters( node.nodeValue );\n\t\t\trange = filterRange( node, range, removeReservedCharacters );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\ttagName === 'br' &&\n\t\t\t! node.getAttribute( 'data-rich-text-line-break' )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'script' ) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: tagName,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-script':\n\t\t\t\t\t\t\t\tnode.getAttribute( 'data-rich-text-script' ) ||\n\t\t\t\t\t\t\t\tencodeURIComponent( node.innerHTML ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst format = toFormat( {\n\t\t\ttagName,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\n\t\t// When a format type is declared as not editable, replace it with an\n\t\t// object replacement character and preserve the inner HTML.\n\t\tif ( format?.formatType?.contentEditable === false ) {\n\t\t\tdelete format.formatType;\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...format,\n\t\t\t\t\t\tinnerHTML: node.innerHTML,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( format ) {\n\t\t\tdelete format.formatType;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\t// Ignore any placeholders, but keep their content since the browser\n\t\t// might insert text inside them when the editable element is flex.\n\t\tif ( ! format || node.getAttribute( 'data-rich-text-placeholder' ) ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}  $1         Named argements.\n * @param {Element} $1.element Element to get attributes from.\n *\n * @return {Object|void} Attribute object or `undefined` if the element has no\n *                       attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst safeName = /^on/i.test( name )\n\t\t\t? 'data-disable-rich-text-' + name\n\t\t\t: name;\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ safeName ] = value;\n\t}\n\n\treturn accumulator;\n}\n"],"mappings":"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","ignoreList":[]}