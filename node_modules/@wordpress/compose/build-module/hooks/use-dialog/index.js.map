{"version":3,"names":["useRef","useEffect","useCallback","ESCAPE","useConstrainedTabbing","useFocusOnMount","useFocusReturn","useFocusOutside","useMergeRefs","useDialog","options","currentOptions","constrainTabbing","focusOnMount","current","Object","values","constrainedTabbingRef","focusOnMountRef","focusReturnRef","focusOutsideProps","event","__unstableOnClose","onClose","closeOnEscapeRef","node","addEventListener","keyCode","defaultPrevented","preventDefault","tabIndex"],"sources":["@wordpress/compose/src/hooks/use-dialog/index.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { RefCallback, SyntheticEvent } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useCallback } from '@wordpress/element';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport useConstrainedTabbing from '../use-constrained-tabbing';\nimport useFocusOnMount from '../use-focus-on-mount';\nimport useFocusReturn from '../use-focus-return';\nimport useFocusOutside from '../use-focus-outside';\nimport useMergeRefs from '../use-merge-refs';\n\ntype DialogOptions = {\n\t/**\n\t * Determines whether focus should be automatically moved to the popover\n\t * when it mounts. `false` causes no focus shift, `true` causes the popover\n\t * itself to gain focus, and `firstElement` focuses the first focusable\n\t * element within the popover.\n\t *\n\t * @default 'firstElement'\n\t */\n\tfocusOnMount?: Parameters< typeof useFocusOnMount >[ 0 ];\n\t/**\n\t * Determines whether tabbing is constrained to within the popover,\n\t * preventing keyboard focus from leaving the popover content without\n\t * explicit focus elsewhere, or whether the popover remains part of the\n\t * wider tab order.\n\t * If no value is passed, it will be derived from `focusOnMount`.\n\t *\n\t * @see focusOnMount\n\t * @default `focusOnMount` !== false\n\t */\n\tconstrainTabbing?: boolean;\n\tonClose?: () => void;\n\t/**\n\t * Use the `onClose` prop instead.\n\t *\n\t * @deprecated\n\t */\n\t__unstableOnClose?: (\n\t\ttype: string | undefined,\n\t\tevent: SyntheticEvent\n\t) => void;\n};\n\ntype useDialogReturn = [\n\tRefCallback< HTMLElement >,\n\tReturnType< typeof useFocusOutside > & Pick< HTMLElement, 'tabIndex' >,\n];\n\n/**\n * Returns a ref and props to apply to a dialog wrapper to enable the following behaviors:\n *  - constrained tabbing.\n *  - focus on mount.\n *  - return focus on unmount.\n *  - focus outside.\n *\n * @param options Dialog Options.\n */\nfunction useDialog( options: DialogOptions ): useDialogReturn {\n\tconst currentOptions = useRef< DialogOptions | undefined >();\n\tconst { constrainTabbing = options.focusOnMount !== false } = options;\n\tuseEffect( () => {\n\t\tcurrentOptions.current = options;\n\t}, Object.values( options ) );\n\tconst constrainedTabbingRef = useConstrainedTabbing();\n\tconst focusOnMountRef = useFocusOnMount( options.focusOnMount );\n\tconst focusReturnRef = useFocusReturn();\n\tconst focusOutsideProps = useFocusOutside( ( event ) => {\n\t\t// This unstable prop  is here only to manage backward compatibility\n\t\t// for the Popover component otherwise, the onClose should be enough.\n\t\tif ( currentOptions.current?.__unstableOnClose ) {\n\t\t\tcurrentOptions.current.__unstableOnClose( 'focus-outside', event );\n\t\t} else if ( currentOptions.current?.onClose ) {\n\t\t\tcurrentOptions.current.onClose();\n\t\t}\n\t} );\n\tconst closeOnEscapeRef = useCallback( ( node: HTMLElement ) => {\n\t\tif ( ! node ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnode.addEventListener( 'keydown', ( event: KeyboardEvent ) => {\n\t\t\t// Close on escape.\n\t\t\tif (\n\t\t\t\tevent.keyCode === ESCAPE &&\n\t\t\t\t! event.defaultPrevented &&\n\t\t\t\tcurrentOptions.current?.onClose\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcurrentOptions.current.onClose();\n\t\t\t}\n\t\t} );\n\t}, [] );\n\n\treturn [\n\t\tuseMergeRefs( [\n\t\t\tconstrainTabbing ? constrainedTabbingRef : null,\n\t\t\toptions.focusOnMount !== false ? focusReturnRef : null,\n\t\t\toptions.focusOnMount !== false ? focusOnMountRef : null,\n\t\t\tcloseOnEscapeRef,\n\t\t] ),\n\t\t{\n\t\t\t...focusOutsideProps,\n\t\t\ttabIndex: -1,\n\t\t},\n\t];\n}\n\nexport default useDialog;\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,oBAAoB;AACnE,SAASC,MAAM,QAAQ,qBAAqB;;AAE5C;AACA;AACA;AACA,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,YAAY,MAAM,mBAAmB;AAwC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAAEC,OAAsB,EAAoB;EAC7D,MAAMC,cAAc,GAAGX,MAAM,CAA8B,CAAC;EAC5D,MAAM;IAAEY,gBAAgB,GAAGF,OAAO,CAACG,YAAY,KAAK;EAAM,CAAC,GAAGH,OAAO;EACrET,SAAS,CAAE,MAAM;IAChBU,cAAc,CAACG,OAAO,GAAGJ,OAAO;EACjC,CAAC,EAAEK,MAAM,CAACC,MAAM,CAAEN,OAAQ,CAAE,CAAC;EAC7B,MAAMO,qBAAqB,GAAGb,qBAAqB,CAAC,CAAC;EACrD,MAAMc,eAAe,GAAGb,eAAe,CAAEK,OAAO,CAACG,YAAa,CAAC;EAC/D,MAAMM,cAAc,GAAGb,cAAc,CAAC,CAAC;EACvC,MAAMc,iBAAiB,GAAGb,eAAe,CAAIc,KAAK,IAAM;IACvD;IACA;IACA,IAAKV,cAAc,CAACG,OAAO,EAAEQ,iBAAiB,EAAG;MAChDX,cAAc,CAACG,OAAO,CAACQ,iBAAiB,CAAE,eAAe,EAAED,KAAM,CAAC;IACnE,CAAC,MAAM,IAAKV,cAAc,CAACG,OAAO,EAAES,OAAO,EAAG;MAC7CZ,cAAc,CAACG,OAAO,CAACS,OAAO,CAAC,CAAC;IACjC;EACD,CAAE,CAAC;EACH,MAAMC,gBAAgB,GAAGtB,WAAW,CAAIuB,IAAiB,IAAM;IAC9D,IAAK,CAAEA,IAAI,EAAG;MACb;IACD;IAEAA,IAAI,CAACC,gBAAgB,CAAE,SAAS,EAAIL,KAAoB,IAAM;MAC7D;MACA,IACCA,KAAK,CAACM,OAAO,KAAKxB,MAAM,IACxB,CAAEkB,KAAK,CAACO,gBAAgB,IACxBjB,cAAc,CAACG,OAAO,EAAES,OAAO,EAC9B;QACDF,KAAK,CAACQ,cAAc,CAAC,CAAC;QACtBlB,cAAc,CAACG,OAAO,CAACS,OAAO,CAAC,CAAC;MACjC;IACD,CAAE,CAAC;EACJ,CAAC,EAAE,EAAG,CAAC;EAEP,OAAO,CACNf,YAAY,CAAE,CACbI,gBAAgB,GAAGK,qBAAqB,GAAG,IAAI,EAC/CP,OAAO,CAACG,YAAY,KAAK,KAAK,GAAGM,cAAc,GAAG,IAAI,EACtDT,OAAO,CAACG,YAAY,KAAK,KAAK,GAAGK,eAAe,GAAG,IAAI,EACvDM,gBAAgB,CACf,CAAC,EACH;IACC,GAAGJ,iBAAiB;IACpBU,QAAQ,EAAE,CAAC;EACZ,CAAC,CACD;AACF;AAEA,eAAerB,SAAS","ignoreList":[]}