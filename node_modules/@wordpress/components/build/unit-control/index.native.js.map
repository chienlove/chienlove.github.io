{"version":3,"sources":["@wordpress/components/src/unit-control/index.native.js"],"names":["UnitControl","currentInput","label","value","onChange","onUnitChange","initialPosition","min","max","separatorType","units","CSS_UNITS","unit","getStylesFromColorScheme","props","pickerRef","anchorNodeRef","onPickerPresent","current","presentPicker","currentInputValue","initialControlValue","isFinite","unitButtonTextStyle","styles","unitButtonText","unitButtonTextDark","accessibilityLabel","accessibilityHint","Platform","OS","renderUnitButton","unitButton","length","getAnchor","undefined","getDecimal","step","stepToString","splitStep","toString","split","renderUnitPicker","unitMenu","activeUnit","find","option","decimalNum"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tText,\n\tView,\n\tTouchableWithoutFeedback,\n\tPlatform,\n\tfindNodeHandle,\n} from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport RangeCell from '../mobile/bottom-sheet/range-cell';\nimport StepperCell from '../mobile/bottom-sheet/stepper-cell';\nimport Picker from '../mobile/picker';\nimport styles from './style.scss';\nimport { CSS_UNITS, hasUnits, getAccessibleLabelForUnit } from './utils';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useCallback, useMemo, memo } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { __, sprintf } from '@wordpress/i18n';\n\nfunction UnitControl( {\n\tcurrentInput,\n\tlabel,\n\tvalue,\n\tonChange,\n\tonUnitChange,\n\tinitialPosition,\n\tmin,\n\tmax,\n\tseparatorType,\n\tunits = CSS_UNITS,\n\tunit,\n\tgetStylesFromColorScheme,\n\t...props\n} ) {\n\tconst pickerRef = useRef();\n\tconst anchorNodeRef = useRef();\n\n\tconst onPickerPresent = useCallback( () => {\n\t\tif ( pickerRef?.current ) {\n\t\t\tpickerRef.current.presentPicker();\n\t\t}\n\t\t// Disable reason: this should be fixed by the native team.\n\t\t// It would be great if this could be done in the context of\n\t\t// https://github.com/WordPress/gutenberg/pull/39218\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ pickerRef?.current ] );\n\n\tconst currentInputValue = currentInput === null ? value : currentInput;\n\tconst initialControlValue = isFinite( currentInputValue )\n\t\t? currentInputValue\n\t\t: initialPosition;\n\n\tconst unitButtonTextStyle = getStylesFromColorScheme(\n\t\tstyles.unitButtonText,\n\t\tstyles.unitButtonTextDark\n\t);\n\n\t/* translators: accessibility text. Inform about current unit value. %s: Current unit value. */\n\tconst accessibilityLabel = sprintf( __( 'Current unit is %s' ), unit );\n\n\tconst accessibilityHint =\n\t\tPlatform.OS === 'ios'\n\t\t\t? __( 'Double tap to open Action Sheet with available options' )\n\t\t\t: __( 'Double tap to open Bottom Sheet with available options' );\n\n\tconst renderUnitButton = useMemo( () => {\n\t\tconst unitButton = (\n\t\t\t<View style={ styles.unitButton }>\n\t\t\t\t<Text style={ unitButtonTextStyle }>{ unit }</Text>\n\t\t\t</View>\n\t\t);\n\n\t\tif ( hasUnits( units ) && units?.length > 1 ) {\n\t\t\treturn (\n\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\tonPress={ onPickerPresent }\n\t\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\t\taccessibilityRole=\"button\"\n\t\t\t\t\taccessibilityHint={ accessibilityHint }\n\t\t\t\t>\n\t\t\t\t\t{ unitButton }\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t);\n\t\t}\n\n\t\treturn unitButton;\n\t}, [\n\t\tonPickerPresent,\n\t\taccessibilityLabel,\n\t\taccessibilityHint,\n\t\tunitButtonTextStyle,\n\t\tunit,\n\t\tunits,\n\t] );\n\n\tconst getAnchor = useCallback(\n\t\t() =>\n\t\t\tanchorNodeRef?.current\n\t\t\t\t? findNodeHandle( anchorNodeRef?.current )\n\t\t\t\t: undefined,\n\t\t// Disable reason: this should be fixed by the native team.\n\t\t// It would be great if this could be done in the context of\n\t\t// https://github.com/WordPress/gutenberg/pull/39218\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[ anchorNodeRef?.current ]\n\t);\n\n\tconst getDecimal = ( step ) => {\n\t\t// Return the decimal offset based on the step size.\n\t\t// if step size is 0.1 we expect the offset to be 1.\n\t\t// for example 12 + 0.1 we would expect the see 12.1 (not 12.10 or 12 );\n\t\t// steps are defined in the CSS_UNITS and they vary from unit to unit.\n\t\tconst stepToString = step;\n\t\tconst splitStep = stepToString.toString().split( '.' );\n\t\treturn splitStep[ 1 ] ? splitStep[ 1 ].length : 0;\n\t};\n\n\tconst renderUnitPicker = useCallback( () => {\n\t\t// Keeping for legacy reasons, although `false` should not be a valid\n\t\t// value for the `units` prop anymore.\n\t\tif ( units === false ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.unitMenu } ref={ anchorNodeRef }>\n\t\t\t\t{ renderUnitButton }\n\t\t\t\t{ hasUnits( units ) && units?.length > 1 ? (\n\t\t\t\t\t<Picker\n\t\t\t\t\t\tref={ pickerRef }\n\t\t\t\t\t\toptions={ units }\n\t\t\t\t\t\tonChange={ onUnitChange }\n\t\t\t\t\t\thideCancelButton\n\t\t\t\t\t\tleftAlign\n\t\t\t\t\t\tgetAnchor={ getAnchor }\n\t\t\t\t\t/>\n\t\t\t\t) : null }\n\t\t\t</View>\n\t\t);\n\t}, [ pickerRef, units, onUnitChange, getAnchor, renderUnitButton ] );\n\n\tlet step = props.step;\n\n\t/*\n\t * If no step prop has been passed, lookup the active unit and\n\t * try to get step from `units`, or default to a value of `1`\n\t */\n\tif ( ! step && units ) {\n\t\tconst activeUnit = units.find( ( option ) => option.value === unit );\n\t\tstep = activeUnit?.step ?? 1;\n\t}\n\n\tconst decimalNum = getDecimal( step );\n\n\treturn (\n\t\t<>\n\t\t\t{ unit !== '%' ? (\n\t\t\t\t<StepperCell\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tmax={ max }\n\t\t\t\t\tmin={ min }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tseparatorType={ separatorType }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tstep={ step }\n\t\t\t\t\tdefaultValue={ initialControlValue }\n\t\t\t\t\tshouldDisplayTextInput\n\t\t\t\t\tdecimalNum={ decimalNum }\n\t\t\t\t\topenUnitPicker={ onPickerPresent }\n\t\t\t\t\tunitLabel={ getAccessibleLabelForUnit( unit ) }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t{ renderUnitPicker() }\n\t\t\t\t</StepperCell>\n\t\t\t) : (\n\t\t\t\t<RangeCell\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tminimumValue={ min }\n\t\t\t\t\tmaximumValue={ max }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tstep={ step }\n\t\t\t\t\tunit={ unit }\n\t\t\t\t\tdefaultValue={ initialControlValue }\n\t\t\t\t\tseparatorType={ separatorType }\n\t\t\t\t\tdecimalNum={ decimalNum }\n\t\t\t\t\topenUnitPicker={ onPickerPresent }\n\t\t\t\t\tunitLabel={ getAccessibleLabelForUnit( unit ) }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t{ renderUnitPicker() }\n\t\t\t\t</RangeCell>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport { useCustomUnits } from './utils';\nexport default memo( withPreferredColorScheme( UnitControl ) );\n"]}