{"version":3,"sources":["@wordpress/components/src/input-control/reducer/reducer.ts"],"names":["mergeInitialState","initialState","initialInputControlState","value","initialValue","inputControlStateReducer","composedStateReducers","state","action","nextState","type","actions","CONTROL","payload","isDirty","_event","undefined","PRESS_UP","PRESS_DOWN","DRAG_START","isDragging","DRAG_END","CHANGE","error","isPressEnterToChange","COMMIT","RESET","INVALIDATE","event","useInputControlStateReducer","stateReducer","initialStateReducer","onChangeHandler","dispatch","createChangeEvent","nextValue","createKeyEvent","createDragEvent","change","invalidate","reset","commit","dragStart","drag","DRAG","dragEnd","pressUp","pressDown","pressEnter","PRESS_ENTER","currentState","refProps","current"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport type { SyntheticEvent, ChangeEvent, PointerEvent } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useReducer, useLayoutEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tInputState,\n\tStateReducer,\n\tinitialInputControlState,\n\tinitialStateReducer,\n} from './state';\nimport * as actions from './actions';\nimport type { InputChangeCallback } from '../types';\n\n/**\n * Prepares initialState for the reducer.\n *\n * @param initialState The initial state.\n * @return Prepared initialState for the reducer\n */\nfunction mergeInitialState(\n\tinitialState: Partial< InputState > = initialInputControlState\n): InputState {\n\tconst { value } = initialState;\n\n\treturn {\n\t\t...initialInputControlState,\n\t\t...initialState,\n\t\tinitialValue: value,\n\t} as InputState;\n}\n\n/**\n * Creates the base reducer which may be coupled to a specializing reducer.\n * As its final step, for all actions other than CONTROL, the base reducer\n * passes the state and action on through the specializing reducer. The\n * exception for CONTROL actions is because they represent controlled updates\n * from props and no case has yet presented for their specialization.\n *\n * @param composedStateReducers A reducer to specialize state changes.\n * @return The reducer.\n */\nfunction inputControlStateReducer(\n\tcomposedStateReducers: StateReducer\n): StateReducer< actions.ControlAction > {\n\treturn ( state, action ) => {\n\t\tconst nextState = { ...state };\n\n\t\tswitch ( action.type ) {\n\t\t\t/*\n\t\t\t * Controlled updates\n\t\t\t */\n\t\t\tcase actions.CONTROL:\n\t\t\t\tnextState.value = action.payload.value;\n\t\t\t\tnextState.isDirty = false;\n\t\t\t\tnextState._event = undefined;\n\t\t\t\t// Returns immediately to avoid invoking additional reducers.\n\t\t\t\treturn nextState;\n\n\t\t\t/**\n\t\t\t * Keyboard events\n\t\t\t */\n\t\t\tcase actions.PRESS_UP:\n\t\t\t\tnextState.isDirty = false;\n\t\t\t\tbreak;\n\n\t\t\tcase actions.PRESS_DOWN:\n\t\t\t\tnextState.isDirty = false;\n\t\t\t\tbreak;\n\n\t\t\t/**\n\t\t\t * Drag events\n\t\t\t */\n\t\t\tcase actions.DRAG_START:\n\t\t\t\tnextState.isDragging = true;\n\t\t\t\tbreak;\n\n\t\t\tcase actions.DRAG_END:\n\t\t\t\tnextState.isDragging = false;\n\t\t\t\tbreak;\n\n\t\t\t/**\n\t\t\t * Input events\n\t\t\t */\n\t\t\tcase actions.CHANGE:\n\t\t\t\tnextState.error = null;\n\t\t\t\tnextState.value = action.payload.value;\n\n\t\t\t\tif ( state.isPressEnterToChange ) {\n\t\t\t\t\tnextState.isDirty = true;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase actions.COMMIT:\n\t\t\t\tnextState.value = action.payload.value;\n\t\t\t\tnextState.isDirty = false;\n\t\t\t\tbreak;\n\n\t\t\tcase actions.RESET:\n\t\t\t\tnextState.error = null;\n\t\t\t\tnextState.isDirty = false;\n\t\t\t\tnextState.value = action.payload.value || state.initialValue;\n\t\t\t\tbreak;\n\n\t\t\t/**\n\t\t\t * Validation\n\t\t\t */\n\t\t\tcase actions.INVALIDATE:\n\t\t\t\tnextState.error = action.payload.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tnextState._event = action.payload.event;\n\n\t\t/**\n\t\t * Send the nextState + action to the composedReducers via\n\t\t * this \"bridge\" mechanism. This allows external stateReducers\n\t\t * to hook into actions, and modify state if needed.\n\t\t */\n\t\treturn composedStateReducers( nextState, action );\n\t};\n}\n\n/**\n * A custom hook that connects and external stateReducer with an internal\n * reducer. This hook manages the internal state of InputControl.\n * However, by connecting an external stateReducer function, other\n * components can react to actions as well as modify state before it is\n * applied.\n *\n * This technique uses the \"stateReducer\" design pattern:\n * https://kentcdodds.com/blog/the-state-reducer-pattern/\n *\n * @param stateReducer    An external state reducer.\n * @param initialState    The initial state for the reducer.\n * @param onChangeHandler A handler for the onChange event.\n * @return State, dispatch, and a collection of actions.\n */\nexport function useInputControlStateReducer(\n\tstateReducer: StateReducer = initialStateReducer,\n\tinitialState: Partial< InputState > = initialInputControlState,\n\tonChangeHandler: InputChangeCallback\n) {\n\tconst [ state, dispatch ] = useReducer(\n\t\tinputControlStateReducer( stateReducer ),\n\t\tmergeInitialState( initialState )\n\t);\n\n\tconst createChangeEvent =\n\t\t( type: actions.ChangeEventAction[ 'type' ] ) =>\n\t\t(\n\t\t\tnextValue: actions.ChangeEventAction[ 'payload' ][ 'value' ],\n\t\t\tevent: actions.ChangeEventAction[ 'payload' ][ 'event' ]\n\t\t) => {\n\t\t\tdispatch( {\n\t\t\t\ttype,\n\t\t\t\tpayload: { value: nextValue, event },\n\t\t\t} as actions.InputAction );\n\t\t};\n\n\tconst createKeyEvent =\n\t\t( type: actions.KeyEventAction[ 'type' ] ) =>\n\t\t( event: actions.KeyEventAction[ 'payload' ][ 'event' ] ) => {\n\t\t\tdispatch( { type, payload: { event } } );\n\t\t};\n\n\tconst createDragEvent =\n\t\t( type: actions.DragEventAction[ 'type' ] ) =>\n\t\t( payload: actions.DragEventAction[ 'payload' ] ) => {\n\t\t\tdispatch( { type, payload } );\n\t\t};\n\n\t/**\n\t * Actions for the reducer\n\t */\n\tconst change = createChangeEvent( actions.CHANGE );\n\tconst invalidate = ( error: unknown, event: SyntheticEvent ) =>\n\t\tdispatch( { type: actions.INVALIDATE, payload: { error, event } } );\n\tconst reset = createChangeEvent( actions.RESET );\n\tconst commit = createChangeEvent( actions.COMMIT );\n\n\tconst dragStart = createDragEvent( actions.DRAG_START );\n\tconst drag = createDragEvent( actions.DRAG );\n\tconst dragEnd = createDragEvent( actions.DRAG_END );\n\n\tconst pressUp = createKeyEvent( actions.PRESS_UP );\n\tconst pressDown = createKeyEvent( actions.PRESS_DOWN );\n\tconst pressEnter = createKeyEvent( actions.PRESS_ENTER );\n\n\tconst currentState = useRef( state );\n\tconst refProps = useRef( { value: initialState.value, onChangeHandler } );\n\n\t// Freshens refs to props and state so that subsequent effects have access\n\t// to their latest values without their changes causing effect runs.\n\tuseLayoutEffect( () => {\n\t\tcurrentState.current = state;\n\t\trefProps.current = { value: initialState.value, onChangeHandler };\n\t} );\n\n\t// Propagates the latest state through onChange.\n\tuseLayoutEffect( () => {\n\t\tif (\n\t\t\tcurrentState.current._event !== undefined &&\n\t\t\tstate.value !== refProps.current.value &&\n\t\t\t! state.isDirty\n\t\t) {\n\t\t\trefProps.current.onChangeHandler( state.value ?? '', {\n\t\t\t\tevent: currentState.current._event as\n\t\t\t\t\t| ChangeEvent< HTMLInputElement >\n\t\t\t\t\t| PointerEvent< HTMLInputElement >,\n\t\t\t} );\n\t\t}\n\t}, [ state.value, state.isDirty ] );\n\n\t// Updates the state from props.\n\tuseLayoutEffect( () => {\n\t\tif (\n\t\t\tinitialState.value !== currentState.current.value &&\n\t\t\t! currentState.current.isDirty\n\t\t) {\n\t\t\tdispatch( {\n\t\t\t\ttype: actions.CONTROL,\n\t\t\t\tpayload: { value: initialState.value ?? '' },\n\t\t\t} );\n\t\t}\n\t}, [ initialState.value ] );\n\n\treturn {\n\t\tchange,\n\t\tcommit,\n\t\tdispatch,\n\t\tdrag,\n\t\tdragEnd,\n\t\tdragStart,\n\t\tinvalidate,\n\t\tpressDown,\n\t\tpressEnter,\n\t\tpressUp,\n\t\treset,\n\t\tstate,\n\t} as const;\n}\n"]}