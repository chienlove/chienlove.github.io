"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _dropdownMenu = _interopRequireDefault(require("../../dropdown-menu"));

var _toolbarContext = _interopRequireDefault(require("../toolbar-context"));

var _toolbarItem = _interopRequireDefault(require("../toolbar-item"));

// @ts-nocheck

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function ToolbarGroupCollapsed(_ref) {
  let {
    controls = [],
    toggleProps,
    ...props
  } = _ref;
  // It'll contain state if `ToolbarGroup` is being used within
  // `<Toolbar label="label" />`
  const accessibleToolbarState = (0, _element.useContext)(_toolbarContext.default);

  const renderDropdownMenu = internalToggleProps => (0, _element.createElement)(_dropdownMenu.default, (0, _extends2.default)({
    controls: controls,
    toggleProps: { ...internalToggleProps,
      'data-toolbar-item': true
    }
  }, props));

  if (accessibleToolbarState) {
    return (0, _element.createElement)(_toolbarItem.default, toggleProps, renderDropdownMenu);
  }

  return renderDropdownMenu(toggleProps);
}

var _default = ToolbarGroupCollapsed;
exports.default = _default;
//# sourceMappingURL=toolbar-group-collapsed.js.map