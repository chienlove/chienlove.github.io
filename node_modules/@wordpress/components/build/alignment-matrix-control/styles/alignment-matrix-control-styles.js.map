{"version":3,"sources":["@wordpress/components/src/alignment-matrix-control/styles/alignment-matrix-control-styles.ts"],"names":["rootBase","rootSize","size","css","Root","Row","pointActive","isActive","boxShadow","COLORS","gray","pointColor","pointColorHover","ui","theme","pointBase","props","Point","Cell"],"mappings":";;;;;;;;;;;AAIA;;AAKA;;;;;;;;;;;;;;AAMO,MAAMA,QAAQ,GAAG,MAAM;AAC7B;AAQA,CATM;;;;AAWP,MAAMC,QAAQ,GAAG,SAAqB;AAAA,MAAnB;AAAEC,IAAAA,IAAI,GAAG;AAAT,GAAmB;AACrC,0BAAOC,UAAP,0CACyCD,IADzC,uBAEWA,IAFX;AAIA,CALD;;AAOO,MAAME,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,GAGbJ,QAHa,8EASbC,QATa,y0GAAV;;AAYA,MAAMI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAT;;;AAMP,MAAMC,WAAW,GAAG,SAEwC;AAAA,MAFtC;AACrBC,IAAAA;AADqB,GAEsC;AAC3D,QAAMC,SAAS,GAAGD,QAAQ,GAAI,aAAaE,cAAOC,IAAP,CAAa,GAAb,CAAoB,EAArC,GAAyC,IAAnE;AACA,QAAMC,UAAU,GAAGJ,QAAQ,GAAGE,cAAOC,IAAP,CAAa,GAAb,CAAH,GAAwBD,cAAOC,IAAP,CAAa,GAAb,CAAnD;AACA,QAAME,eAAe,GAAGL,QAAQ,GAAGE,cAAOC,IAAP,CAAa,GAAb,CAAH,GAAwBD,cAAOI,EAAP,CAAUC,KAAlE;AAEA,0BAAOX,UAAP,iBACgBK,SADhB,aAEWG,UAFX,uBAKYC,eALZ;AAQA,CAfD;;AAiBO,MAAMG,SAAS,GACrBC,KADwB,IAEpB;AACJ,0BAAOb,UAAP,yGAOI,yBAAc,YAAd,CAPJ,OAQIG,WAAW,CAAEU,KAAF,CARf;AAUA,CAbM;;;AAeA,MAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGdF,SAHc,y0GAAX;;AAMA,MAAMG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAV","sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, reduceMotion } from '../../utils';\nimport type {\n\tAlignmentMatrixControlProps,\n\tAlignmentMatrixControlCellProps,\n} from '../types';\n\nexport const rootBase = () => {\n\treturn css`\n\t\tborder-radius: 2px;\n\t\tbox-sizing: border-box;\n\t\tdirection: ltr;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat( 3, 1fr );\n\t\toutline: none;\n\t`;\n};\n\nconst rootSize = ( { size = 92 } ) => {\n\treturn css`\n\t\tgrid-template-rows: repeat( 3, calc( ${ size }px / 3 ) );\n\t\twidth: ${ size }px;\n\t`;\n};\n\nexport const Root = styled.div< {\n\tsize: AlignmentMatrixControlProps[ 'width' ];\n} >`\n\t${ rootBase };\n\n\tborder: 1px solid transparent;\n\tcursor: pointer;\n\tgrid-template-columns: auto;\n\n\t${ rootSize };\n`;\n\nexport const Row = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: grid;\n\tgrid-template-columns: repeat( 3, 1fr );\n`;\n\nconst pointActive = ( {\n\tisActive,\n}: Pick< AlignmentMatrixControlCellProps, 'isActive' > ) => {\n\tconst boxShadow = isActive ? `0 0 0 2px ${ COLORS.gray[ 900 ] }` : null;\n\tconst pointColor = isActive ? COLORS.gray[ 900 ] : COLORS.gray[ 400 ];\n\tconst pointColorHover = isActive ? COLORS.gray[ 900 ] : COLORS.ui.theme;\n\n\treturn css`\n\t\tbox-shadow: ${ boxShadow };\n\t\tcolor: ${ pointColor };\n\n\t\t*:hover > & {\n\t\t\tcolor: ${ pointColorHover };\n\t\t}\n\t`;\n};\n\nexport const pointBase = (\n\tprops: Pick< AlignmentMatrixControlCellProps, 'isActive' >\n) => {\n\treturn css`\n\t\tbackground: currentColor;\n\t\tbox-sizing: border-box;\n\t\tdisplay: grid;\n\t\tmargin: auto;\n\t\ttransition: all 120ms linear;\n\n\t\t${ reduceMotion( 'transition' ) }\n\t\t${ pointActive( props ) }\n\t`;\n};\n\nexport const Point = styled.span`\n\theight: 6px;\n\twidth: 6px;\n\t${ pointBase }\n`;\n\nexport const Cell = styled.span`\n\tappearance: none;\n\tborder: none;\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tdisplay: flex;\n\tposition: relative;\n\toutline: none;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0;\n`;\n"]}