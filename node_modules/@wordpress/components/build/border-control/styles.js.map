{"version":3,"sources":["@wordpress/components/src/border-control/styles.ts"],"names":["labelStyles","focusBoxShadow","css","CONFIG","borderWidth","COLORS","ui","borderFocus","borderControl","boxSizingReset","innerWrapper","UnitControlWrapper","UnitSelect","wrapperWidth","wrapperHeight","size","borderControlDropdown","borderRadius","border","colorIndicatorBorder","color","style","fallbackColor","gray","undefined","colorIndicatorWrapper","swatchSize","swatchGap","borderControlPopoverControls","StyledLabel","borderControlPopoverContent","borderColorIndicator","resetButton","borderControlStylePicker","borderStyleButton","borderSlider","marginRight"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG, boxSizingReset, rtl } from '../utils';\nimport { space } from '../ui/utils/space';\nimport { StyledLabel } from '../base-control/styles/base-control-styles';\nimport {\n\tValueInput as UnitControlWrapper,\n\tUnitSelect,\n} from '../unit-control/styles/unit-control-styles';\n\nimport type { Border } from './types';\n\nconst labelStyles = css`\n\tfont-weight: 500;\n`;\n\nconst focusBoxShadow = css`\n\tbox-shadow: inset 0 0 0 ${ CONFIG.borderWidth } ${ COLORS.ui.borderFocus };\n`;\n\nexport const borderControl = css`\n\tborder: 0;\n\tpadding: 0;\n\tmargin: 0;\n\t${ boxSizingReset }\n`;\n\nexport const innerWrapper = () => css`\n\t${ UnitControlWrapper } {\n\t\tflex: 1 1 40%;\n\t}\n\t&& ${ UnitSelect } {\n\t\t/* Prevent unit select forcing min height larger than its UnitControl */\n\t\tmin-height: 0;\n\t}\n`;\n\n/*\n * This style is only applied to the UnitControl wrapper when the border width\n * field should be a set width. Omitting this allows the UnitControl &\n * RangeControl to share the available width in a 40/60 split respectively.\n */\nexport const wrapperWidth = css`\n\t${ UnitControlWrapper } {\n\t\t/* Force the UnitControl's set width. */\n\t\tflex: 0 0 auto;\n\t}\n`;\n\nexport const wrapperHeight = ( size?: 'default' | '__unstable-large' ) => {\n\treturn css`\n\t\theight: ${ size === '__unstable-large' ? '40px' : '30px' };\n\t`;\n};\n\nexport const borderControlDropdown = (\n\tsize?: 'default' | '__unstable-large'\n) => css`\n\tbackground: #fff;\n\n\t&& > button {\n\t\t/*\n\t\t * Override button component styles to fit within BorderControl\n\t\t * regardless of size.\n\t\t */\n\t\theight: ${ size === '__unstable-large' ? '40px' : '30px' };\n\t\twidth: ${ size === '__unstable-large' ? '40px' : '30px' };\n\t\tpadding: 0;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t${ rtl(\n\t\t\t{ borderRadius: `2px 0 0 2px` },\n\t\t\t{ borderRadius: `0 2px 2px 0` }\n\t\t)() }\n\t\tborder: ${ CONFIG.borderWidth } solid ${ COLORS.ui.border };\n\n\t\t&:focus,\n\t\t&:hover:not( :disabled ) {\n\t\t\t${ focusBoxShadow }\n\t\t\tborder-color: ${ COLORS.ui.borderFocus };\n\t\t\tz-index: 1;\n\t\t\tposition: relative;\n\t\t}\n\t}\n`;\n\nexport const colorIndicatorBorder = ( border?: Border ) => {\n\tconst { color, style } = border || {};\n\n\tconst fallbackColor =\n\t\t!! style && style !== 'none' ? COLORS.gray[ 300 ] : undefined;\n\n\treturn css`\n\t\tborder-style: ${ style === 'none' ? 'solid' : style };\n\t\tborder-color: ${ color || fallbackColor };\n\t`;\n};\n\nexport const colorIndicatorWrapper = (\n\tborder?: Border,\n\tsize?: 'default' | '__unstable-large'\n) => {\n\tconst { style } = border || {};\n\n\treturn css`\n\t\tborder-radius: 9999px;\n\t\tborder: 2px solid transparent;\n\t\t${ style ? colorIndicatorBorder( border ) : undefined }\n\t\twidth: ${ size === '__unstable-large' ? '24px' : '22px' };\n\t\theight: ${ size === '__unstable-large' ? '24px' : '22px' };\n\t\tpadding: ${ size === '__unstable-large' ? '2px' : '1px' };\n\n\t\t/*\n\t\t * ColorIndicator\n\t\t *\n\t\t * The transparent colors used here ensure visibility of the indicator\n\t\t * over the active state of the border control dropdown's toggle button.\n\t\t */\n\t\t& > span {\n\t\t\theight: ${ space( 4 ) };\n\t\t\twidth: ${ space( 4 ) };\n\t\t\tbackground: linear-gradient(\n\t\t\t\t-45deg,\n\t\t\t\ttransparent 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 52%,\n\t\t\t\ttransparent 52%\n\t\t\t);\n\t\t}\n\t`;\n};\n\n// Must equal $color-palette-circle-size from:\n// @wordpress/components/src/circular-option-picker/style.scss\nconst swatchSize = 28;\nconst swatchGap = 12;\n\nexport const borderControlPopoverControls = css`\n\twidth: ${ swatchSize * 6 + swatchGap * 5 }px;\n\n\t> div:first-of-type > ${ StyledLabel } {\n\t\tmargin-bottom: 0;\n\t\t${ labelStyles }\n\t}\n\n\t&& ${ StyledLabel } + button:not( .has-text ) {\n\t\tmin-width: 24px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const borderControlPopoverContent = css``;\nexport const borderColorIndicator = css``;\n\nexport const resetButton = css`\n\tjustify-content: center;\n\twidth: 100%;\n\n\t/* Override button component styling */\n\t&& {\n\t\tborder-top: ${ CONFIG.borderWidth } solid ${ COLORS.gray[ 200 ] };\n\t\tborder-top-left-radius: 0;\n\t\tborder-top-right-radius: 0;\n\t\theight: 46px;\n\t}\n`;\n\nexport const borderControlStylePicker = css`\n\t${ StyledLabel } {\n\t\t${ labelStyles }\n\t}\n`;\n\nexport const borderStyleButton = css`\n\t&&&&& {\n\t\tmin-width: 30px;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tpadding: 3px;\n\t}\n`;\n\nexport const borderSlider = () => css`\n\tflex: 1 1 60%;\n\t${ rtl( { marginRight: space( 3 ) } )() }\n`;\n"]}