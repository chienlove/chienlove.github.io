{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot-fill-provider.js"],"names":["useSlotRegistry","slots","fills","registerSlot","name","ref","fillProps","slot","current","get","set","unregisterSlot","delete","updateSlot","slotFills","map","fill","rerender","registerFill","unregisterFill","filter","fillRef","registry","SlotFillProvider","children"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/**\n * External dependencies\n */\nimport { ref as valRef } from 'valtio';\nimport { proxyMap } from 'valtio/utils';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useRef } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction useSlotRegistry() {\n\tconst slots = useRef( proxyMap() );\n\tconst fills = useRef( proxyMap() );\n\n\tconst registerSlot = useCallback( ( name, ref, fillProps ) => {\n\t\tconst slot = slots.current.get( name ) || {};\n\t\tslots.current.set(\n\t\t\tname,\n\t\t\tvalRef( {\n\t\t\t\t...slot,\n\t\t\t\tref: ref || slot.ref,\n\t\t\t\tfillProps: fillProps || slot.fillProps || {},\n\t\t\t} )\n\t\t);\n\t}, [] );\n\n\tconst unregisterSlot = useCallback( ( name, ref ) => {\n\t\t// Make sure we're not unregistering a slot registered by another element\n\t\t// See https://github.com/WordPress/gutenberg/pull/19242#issuecomment-590295412\n\t\tif ( slots.current.get( name )?.ref === ref ) {\n\t\t\tslots.current.delete( name );\n\t\t}\n\t}, [] );\n\n\tconst updateSlot = useCallback( ( name, fillProps ) => {\n\t\tconst slot = slots.current.get( name );\n\t\tif ( ! slot ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isShallowEqual( slot.fillProps, fillProps ) ) {\n\t\t\tslot.fillProps = fillProps;\n\t\t\tconst slotFills = fills.current.get( name );\n\t\t\tif ( slotFills ) {\n\t\t\t\t// Force update fills.\n\t\t\t\tslotFills.map( ( fill ) => fill.current.rerender() );\n\t\t\t}\n\t\t}\n\t}, [] );\n\n\tconst registerFill = useCallback( ( name, ref ) => {\n\t\tfills.current.set(\n\t\t\tname,\n\t\t\tvalRef( [ ...( fills.current.get( name ) || [] ), ref ] )\n\t\t);\n\t}, [] );\n\n\tconst unregisterFill = useCallback( ( name, ref ) => {\n\t\tif ( fills.current.get( name ) ) {\n\t\t\tfills.current.set(\n\t\t\t\tname,\n\t\t\t\tvalRef(\n\t\t\t\t\tfills.current\n\t\t\t\t\t\t.get( name )\n\t\t\t\t\t\t.filter( ( fillRef ) => fillRef !== ref )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}, [] );\n\n\t// Memoizing the return value so it can be directly passed to Provider value\n\tconst registry = useMemo(\n\t\t() => ( {\n\t\t\tslots: slots.current,\n\t\t\tfills: fills.current,\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t} ),\n\t\t[\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t]\n\t);\n\n\treturn registry;\n}\n\nexport default function SlotFillProvider( { children } ) {\n\tconst registry = useSlotRegistry();\n\treturn (\n\t\t<SlotFillContext.Provider value={ registry }>\n\t\t\t{ children }\n\t\t</SlotFillContext.Provider>\n\t);\n}\n"]}