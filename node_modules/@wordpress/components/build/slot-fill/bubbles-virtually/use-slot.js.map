{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/use-slot.js"],"names":["useSlot","name","updateSlot","registryUpdateSlot","unregisterSlot","registryUnregisterSlot","registerFill","registryRegisterFill","unregisterFill","registryUnregisterFill","registry","SlotFillContext","slots","sync","slot","get","fillProps","slotRef","fillRef"],"mappings":";;;;;;;;;AAIA;;AAKA;;AAKA;;AAdA;;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAGe,SAASA,OAAT,CAAkBC,IAAlB,EAAyB;AACvC,QAAM;AACLC,IAAAA,UAAU,EAAEC,kBADP;AAELC,IAAAA,cAAc,EAAEC,sBAFX;AAGLC,IAAAA,YAAY,EAAEC,oBAHT;AAILC,IAAAA,cAAc,EAAEC,sBAJX;AAKL,OAAGC;AALE,MAMF,yBAAYC,wBAAZ,CANJ;AAOA,QAAMC,KAAK,GAAG,yBAAaF,QAAQ,CAACE,KAAtB,EAA6B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA7B,CAAd,CARuC,CASvC;AACA;AACA;;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAWd,IAAX,CAAb;AAEA,QAAMC,UAAU,GAAG,0BAChBc,SAAF,IAAiB;AAChBb,IAAAA,kBAAkB,CAAEF,IAAF,EAAQe,SAAR,CAAlB;AACA,GAHiB,EAIlB,CAAEf,IAAF,EAAQE,kBAAR,CAJkB,CAAnB;AAOA,QAAMC,cAAc,GAAG,0BACpBa,OAAF,IAAe;AACdZ,IAAAA,sBAAsB,CAAEJ,IAAF,EAAQgB,OAAR,CAAtB;AACA,GAHqB,EAItB,CAAEhB,IAAF,EAAQI,sBAAR,CAJsB,CAAvB;AAOA,QAAMC,YAAY,GAAG,0BAClBY,OAAF,IAAe;AACdX,IAAAA,oBAAoB,CAAEN,IAAF,EAAQiB,OAAR,CAApB;AACA,GAHmB,EAIpB,CAAEjB,IAAF,EAAQM,oBAAR,CAJoB,CAArB;AAOA,QAAMC,cAAc,GAAG,0BACpBU,OAAF,IAAe;AACdT,IAAAA,sBAAsB,CAAER,IAAF,EAAQiB,OAAR,CAAtB;AACA,GAHqB,EAItB,CAAEjB,IAAF,EAAQQ,sBAAR,CAJsB,CAAvB;AAOA,SAAO,EACN,GAAGK,IADG;AAENZ,IAAAA,UAFM;AAGNE,IAAAA,cAHM;AAINE,IAAAA,YAJM;AAKNE,IAAAA;AALM,GAAP;AAOA","sourcesContent":["// @ts-nocheck\n/**\n * External dependencies\n */\nimport { useSnapshot } from 'valtio';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nexport default function useSlot( name ) {\n\tconst {\n\t\tupdateSlot: registryUpdateSlot,\n\t\tunregisterSlot: registryUnregisterSlot,\n\t\tregisterFill: registryRegisterFill,\n\t\tunregisterFill: registryUnregisterFill,\n\t\t...registry\n\t} = useContext( SlotFillContext );\n\tconst slots = useSnapshot( registry.slots, { sync: true } );\n\t// The important bit here is that this call ensures\n\t// the hook only causes a re-render if the slot\n\t// with the given name change, not any other slot.\n\tconst slot = slots.get( name );\n\n\tconst updateSlot = useCallback(\n\t\t( fillProps ) => {\n\t\t\tregistryUpdateSlot( name, fillProps );\n\t\t},\n\t\t[ name, registryUpdateSlot ]\n\t);\n\n\tconst unregisterSlot = useCallback(\n\t\t( slotRef ) => {\n\t\t\tregistryUnregisterSlot( name, slotRef );\n\t\t},\n\t\t[ name, registryUnregisterSlot ]\n\t);\n\n\tconst registerFill = useCallback(\n\t\t( fillRef ) => {\n\t\t\tregistryRegisterFill( name, fillRef );\n\t\t},\n\t\t[ name, registryRegisterFill ]\n\t);\n\n\tconst unregisterFill = useCallback(\n\t\t( fillRef ) => {\n\t\t\tregistryUnregisterFill( name, fillRef );\n\t\t},\n\t\t[ name, registryUnregisterFill ]\n\t);\n\n\treturn {\n\t\t...slot,\n\t\tupdateSlot,\n\t\tunregisterSlot,\n\t\tregisterFill,\n\t\tunregisterFill,\n\t};\n}\n"]}