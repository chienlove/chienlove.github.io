{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/cell.native.js"],"names":["isIOS","Platform","OS","BottomSheetCell","Component","constructor","props","arguments","state","isEditingValue","autoFocus","isScreenReaderEnabled","handleScreenReaderToggled","bind","isCurrent","componentDidUpdate","prevProps","prevState","_valueTextInput","focus","componentDidMount","a11yInfoChangeSubscription","AccessibilityInfo","addEventListener","then","setState","componentWillUnmount","remove","typeToKeyboardType","type","step","keyboardType","Math","abs","render","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","disabled","activeOpacity","onPress","onLongPress","label","subLabel","value","valuePlaceholder","icon","leftAlign","iconStyle","labelStyle","valueStyle","cellContainerStyle","cellRowContainerStyle","onChangeValue","onSubmit","children","editable","isSelected","separatorType","style","getStylesFromColorScheme","customActionButton","borderless","help","valueProps","showValue","undefined","isValueEditable","cellLabelStyle","styles","cellLabel","cellTextDark","cellLabelCenteredStyle","cellLabelCentered","cellLabelLeftAlignNoIconStyle","cellLabelLeftAlignNoIcon","defaultMissingIconAndValue","defaultLabelStyle","defaultSubLabelStyleText","cellSubLabelText","cellSubLabelTextDark","drawSeparator","separatorStyle","drawTopSeparator","cellContainerStyles","cellContainer","rowContainerStyles","cellRowContainer","isInteractive","onCellPress","startEditing","finishEditing","defaultSeparatorStyle","separator","separatorDark","cellSeparatorStyle","cellSeparator","cellSeparatorDark","leftMarginStyle","platformStyles","separatorMarginLeft","getValueComponent","styleRTL","I18nManager","isRTL","cellValueRTL","cellValueStyle","cellValue","finalStyle","shouldShowPlaceholder","c","getAccessibilityLabel","iconStyleBase","iconDark","resetButtonStyle","resetButton","resetButtonDark","cellHelpStyle","cellHelpLabel","cellHelpLabelIOS","containerPointerEvents","title","handler","opacity","clipToBounds","cellRowIcon","color","labelIconSeparator","check","placeholderColor"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tTouchableOpacity,\n\tText,\n\tView,\n\tTextInput,\n\tI18nManager,\n\tAccessibilityInfo,\n\tPlatform,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Icon } from '@wordpress/components';\nimport { check } from '@wordpress/icons';\nimport { Component } from '@wordpress/element';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport platformStyles from './cellStyles.scss';\nimport TouchableRipple from './ripple';\n\nconst isIOS = Platform.OS === 'ios';\nclass BottomSheetCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisEditingValue: props.autoFocus || false,\n\t\t\tisScreenReaderEnabled: false,\n\t\t};\n\n\t\tthis.handleScreenReaderToggled =\n\t\t\tthis.handleScreenReaderToggled.bind( this );\n\n\t\tthis.isCurrent = false;\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( ! prevState.isEditingValue && this.state.isEditingValue ) {\n\t\t\tthis._valueTextInput.focus();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isCurrent = true;\n\t\tthis.a11yInfoChangeSubscription = AccessibilityInfo.addEventListener(\n\t\t\t'screenReaderChanged',\n\t\t\tthis.handleScreenReaderToggled\n\t\t);\n\n\t\tAccessibilityInfo.isScreenReaderEnabled().then(\n\t\t\t( isScreenReaderEnabled ) => {\n\t\t\t\tif ( this.isCurrent && isScreenReaderEnabled ) {\n\t\t\t\t\tthis.setState( { isScreenReaderEnabled } );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isCurrent = false;\n\t\tthis.a11yInfoChangeSubscription.remove();\n\t}\n\n\thandleScreenReaderToggled( isScreenReaderEnabled ) {\n\t\tthis.setState( { isScreenReaderEnabled } );\n\t}\n\n\ttypeToKeyboardType( type, step ) {\n\t\tlet keyboardType = `default`;\n\t\tif ( type === `number` ) {\n\t\t\tif ( step && Math.abs( step ) < 1 ) {\n\t\t\t\tkeyboardType = `decimal-pad`;\n\t\t\t} else {\n\t\t\t\tkeyboardType = `number-pad`;\n\t\t\t}\n\t\t}\n\t\treturn keyboardType;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\taccessible,\n\t\t\taccessibilityLabel,\n\t\t\taccessibilityHint,\n\t\t\taccessibilityRole,\n\t\t\tdisabled = false,\n\t\t\tactiveOpacity,\n\t\t\tonPress,\n\t\t\tonLongPress,\n\t\t\tlabel,\n\t\t\tsubLabel,\n\t\t\tvalue,\n\t\t\tvaluePlaceholder = '',\n\t\t\ticon,\n\t\t\tleftAlign,\n\t\t\ticonStyle = {},\n\t\t\tlabelStyle = {},\n\t\t\tvalueStyle = {},\n\t\t\tcellContainerStyle = {},\n\t\t\tcellRowContainerStyle = {},\n\t\t\tonChangeValue,\n\t\t\tonSubmit,\n\t\t\tchildren,\n\t\t\teditable = true,\n\t\t\tisSelected = false,\n\t\t\tseparatorType,\n\t\t\tstyle = {},\n\t\t\tgetStylesFromColorScheme,\n\t\t\tcustomActionButton,\n\t\t\ttype,\n\t\t\tstep,\n\t\t\tborderless,\n\t\t\thelp,\n\t\t\t...valueProps\n\t\t} = this.props;\n\n\t\tconst showValue = value !== undefined;\n\t\tconst isValueEditable = editable && onChangeValue !== undefined;\n\t\tconst cellLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabel,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst cellLabelCenteredStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabelCentered,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst cellLabelLeftAlignNoIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabelLeftAlignNoIcon,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst defaultMissingIconAndValue = leftAlign\n\t\t\t? cellLabelLeftAlignNoIconStyle\n\t\t\t: cellLabelCenteredStyle;\n\t\tconst defaultLabelStyle =\n\t\t\tshowValue || customActionButton || icon\n\t\t\t\t? cellLabelStyle\n\t\t\t\t: defaultMissingIconAndValue;\n\n\t\tconst defaultSubLabelStyleText = getStylesFromColorScheme(\n\t\t\tstyles.cellSubLabelText,\n\t\t\tstyles.cellSubLabelTextDark\n\t\t);\n\n\t\tconst drawSeparator =\n\t\t\t( separatorType && separatorType !== 'none' ) ||\n\t\t\tseparatorStyle === undefined;\n\t\tconst drawTopSeparator =\n\t\t\tdrawSeparator && separatorType === 'topFullWidth';\n\n\t\tconst cellContainerStyles = [\n\t\t\tstyles.cellContainer,\n\t\t\tcellContainerStyle,\n\t\t];\n\t\tconst rowContainerStyles = [\n\t\t\tstyles.cellRowContainer,\n\t\t\tcellRowContainerStyle,\n\t\t];\n\n\t\tconst isInteractive =\n\t\t\tisValueEditable ||\n\t\t\tonPress !== undefined ||\n\t\t\tonLongPress !== undefined;\n\n\t\tconst onCellPress = () => {\n\t\t\tif ( isValueEditable ) {\n\t\t\t\tstartEditing();\n\t\t\t} else if ( onPress !== undefined ) {\n\t\t\t\tonPress();\n\t\t\t}\n\t\t};\n\n\t\tconst finishEditing = () => {\n\t\t\tthis.setState( { isEditingValue: false } );\n\t\t};\n\n\t\tconst startEditing = () => {\n\t\t\tif ( this.state.isEditingValue === false ) {\n\t\t\t\tthis.setState( { isEditingValue: true } );\n\t\t\t}\n\t\t};\n\n\t\tconst separatorStyle = () => {\n\t\t\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\t\tconst defaultSeparatorStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.separator,\n\t\t\t\tstyles.separatorDark\n\t\t\t);\n\t\t\tconst cellSeparatorStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.cellSeparator,\n\t\t\t\tstyles.cellSeparatorDark\n\t\t\t);\n\t\t\tconst leftMarginStyle = {\n\t\t\t\t...cellSeparatorStyle,\n\t\t\t\t...platformStyles.separatorMarginLeft,\n\t\t\t};\n\t\t\tswitch ( separatorType ) {\n\t\t\t\tcase 'leftMargin':\n\t\t\t\t\treturn leftMarginStyle;\n\t\t\t\tcase 'fullWidth':\n\t\t\t\tcase 'topFullWidth':\n\t\t\t\t\treturn defaultSeparatorStyle;\n\t\t\t\tcase 'none':\n\t\t\t\t\treturn undefined;\n\t\t\t\tcase undefined:\n\t\t\t\t\tif ( showValue && icon ) {\n\t\t\t\t\t\treturn leftMarginStyle;\n\t\t\t\t\t}\n\t\t\t\t\treturn defaultSeparatorStyle;\n\t\t\t}\n\t\t};\n\n\t\tconst getValueComponent = () => {\n\t\t\tconst styleRTL = I18nManager.isRTL && styles.cellValueRTL;\n\t\t\tconst cellValueStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.cellValue,\n\t\t\t\tstyles.cellTextDark\n\t\t\t);\n\t\t\tconst finalStyle = {\n\t\t\t\t...cellValueStyle,\n\t\t\t\t...valueStyle,\n\t\t\t\t...styleRTL,\n\t\t\t};\n\n\t\t\t// To be able to show the `middle` ellipsizeMode on editable cells\n\t\t\t// we show the TextInput just when the user wants to edit the value,\n\t\t\t// and the Text component to display it.\n\t\t\t// We also show the TextInput to display placeholder.\n\t\t\tconst shouldShowPlaceholder = isInteractive && value === '';\n\t\t\treturn this.state.isEditingValue || shouldShowPlaceholder ? (\n\t\t\t\t<TextInput\n\t\t\t\t\tref={ ( c ) => ( this._valueTextInput = c ) }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ finalStyle }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tplaceholder={ valuePlaceholder }\n\t\t\t\t\tplaceholderTextColor={ '#87a6bc' }\n\t\t\t\t\tonChangeText={ onChangeValue }\n\t\t\t\t\teditable={ isValueEditable }\n\t\t\t\t\tpointerEvents={\n\t\t\t\t\t\tthis.state.isEditingValue ? 'auto' : 'none'\n\t\t\t\t\t}\n\t\t\t\t\tonFocus={ startEditing }\n\t\t\t\t\tonBlur={ finishEditing }\n\t\t\t\t\tonSubmitEditing={ onSubmit }\n\t\t\t\t\tkeyboardType={ this.typeToKeyboardType( type, step ) }\n\t\t\t\t\t{ ...valueProps }\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Text\n\t\t\t\t\tstyle={ { ...cellValueStyle, ...valueStyle } }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tellipsizeMode={ 'middle' }\n\t\t\t\t>\n\t\t\t\t\t{ value }\n\t\t\t\t</Text>\n\t\t\t);\n\t\t};\n\n\t\tconst getAccessibilityLabel = () => {\n\t\t\tif ( accessible === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( accessibilityLabel || ! showValue ) {\n\t\t\t\treturn accessibilityLabel || label;\n\t\t\t}\n\n\t\t\tif ( ! value ) {\n\t\t\t\treturn ! help\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t/* translators: accessibility text. Empty state of a inline textinput cell. %s: The cell's title */\n\t\t\t\t\t\t\t_x( '%s. Empty', 'inline textinput cell' ),\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t  )\n\t\t\t\t\t: // Separating by ',' is necessary to make a pause on urls (non-capitalized text)\n\t\t\t\t\t  sprintf(\n\t\t\t\t\t\t\t/* translators: accessibility text. Empty state of a inline textinput cell. %1: Cell title, %2: cell help. */\n\t\t\t\t\t\t\t_x( '%1$s, %2$s. Empty', 'inline textinput cell' ),\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\thelp\n\t\t\t\t\t  );\n\t\t\t}\n\t\t\treturn ! help\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t/* translators: accessibility text. Inline textinput title and value.%1: Cell title, %2: cell value. */\n\t\t\t\t\t\t_x( '%1$s, %2$s', 'inline textinput cell' ),\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tvalue\n\t\t\t\t  ) // Separating by ',' is necessary to make a pause on urls (non-capitalized text)\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t/* translators: accessibility text. Inline textinput title, value and help text.%1: Cell title, %2: cell value, , %3: cell help. */\n\t\t\t\t\t\t_x( '%1$s, %2$s, %3$s', 'inline textinput cell' ),\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\thelp\n\t\t\t\t  );\n\t\t};\n\n\t\tconst iconStyleBase = getStylesFromColorScheme(\n\t\t\tstyles.icon,\n\t\t\tstyles.iconDark\n\t\t);\n\t\tconst resetButtonStyle = getStylesFromColorScheme(\n\t\t\tstyles.resetButton,\n\t\t\tstyles.resetButtonDark\n\t\t);\n\t\tconst cellHelpStyle = [\n\t\t\tstyles.cellHelpLabel,\n\t\t\tisIOS && styles.cellHelpLabelIOS,\n\t\t];\n\t\tconst containerPointerEvents =\n\t\t\tthis.state.isScreenReaderEnabled && accessible ? 'none' : 'auto';\n\t\tconst { title, handler } = customActionButton || {};\n\n\t\tconst opacity =\n\t\t\tactiveOpacity !== undefined\n\t\t\t\t? activeOpacity\n\t\t\t\t: platformStyles.activeOpacity?.opacity;\n\n\t\treturn (\n\t\t\t<TouchableRipple\n\t\t\t\taccessible={\n\t\t\t\t\taccessible !== undefined\n\t\t\t\t\t\t? accessible\n\t\t\t\t\t\t: ! this.state.isEditingValue\n\t\t\t\t}\n\t\t\t\taccessibilityLabel={ getAccessibilityLabel() }\n\t\t\t\taccessibilityRole={ accessibilityRole || 'button' }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\tisValueEditable\n\t\t\t\t\t\t? /* translators: accessibility text */\n\t\t\t\t\t\t  __( 'Double tap to edit this value' )\n\t\t\t\t\t\t: accessibilityHint\n\t\t\t\t}\n\t\t\t\tdisabled={ disabled || ! isInteractive }\n\t\t\t\tactiveOpacity={ opacity }\n\t\t\t\tonPress={ onCellPress }\n\t\t\t\tonLongPress={ onLongPress }\n\t\t\t\tstyle={ [ styles.clipToBounds, style ] }\n\t\t\t\tborderless={ borderless }\n\t\t\t>\n\t\t\t\t{ drawTopSeparator && <View style={ separatorStyle() } /> }\n\t\t\t\t<View\n\t\t\t\t\tstyle={ cellContainerStyles }\n\t\t\t\t\tpointerEvents={ containerPointerEvents }\n\t\t\t\t>\n\t\t\t\t\t<View style={ rowContainerStyles }>\n\t\t\t\t\t\t<View style={ styles.cellRowContainer }>\n\t\t\t\t\t\t\t{ icon && (\n\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\t\t\tstyles.cellRowContainer,\n\t\t\t\t\t\t\t\t\t\tstyles.cellRowIcon,\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\t\tsize={ 24 }\n\t\t\t\t\t\t\t\t\t\tfill={\n\t\t\t\t\t\t\t\t\t\t\ticonStyle.color ||\n\t\t\t\t\t\t\t\t\t\t\ticonStyleBase.color\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstyle={ iconStyle }\n\t\t\t\t\t\t\t\t\t\tisPressed={ false }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\t\t\tplatformStyles.labelIconSeparator\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ subLabel && label && (\n\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\t\t\t\tdefaultLabelStyle,\n\t\t\t\t\t\t\t\t\t\t\tlabelStyle,\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Text style={ defaultSubLabelStyleText }>\n\t\t\t\t\t\t\t\t\t\t{ subLabel }\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ ! subLabel && label && (\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tstyle={ [ defaultLabelStyle, labelStyle ] }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t{ customActionButton && (\n\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\tonPress={ handler }\n\t\t\t\t\t\t\t\taccessibilityRole={ 'button' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text style={ resetButtonStyle }>\n\t\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</View>\n\t\t\t\t\t{ isSelected && (\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\ticon={ check }\n\t\t\t\t\t\t\tfill={ platformStyles.isSelected.color }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ showValue && getValueComponent() }\n\t\t\t\t\t{ children }\n\t\t\t\t</View>\n\t\t\t\t{ help && (\n\t\t\t\t\t<Text style={ [ cellHelpStyle, styles.placeholderColor ] }>\n\t\t\t\t\t\t{ help }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t{ ! drawTopSeparator && <View style={ separatorStyle() } /> }\n\t\t\t</TouchableRipple>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetCell );\n"]}