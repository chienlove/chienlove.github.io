{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/keyboard-avoiding-view.native.js"],"names":["KeyboardAvoidingView","Component","constructor","arguments","_onKeyboardChange","bind","_subscriptions","state","bottom","_relativeKeyboardHeight","keyboardFrame","windowWidth","Dimensions","get","width","isFloatingKeyboard","windowHeight","height","keyboardY","screenY","props","keyboardVerticalOffset","final","Math","max","event","setState","duration","easing","endCoordinates","LayoutAnimation","configureNext","update","type","Types","componentDidMount","Platform","OS","Keyboard","addListener","componentWillUnmount","forEach","subscription","remove","render","children","enabled","style","finalStyle","bottomHeight","StyleSheet","compose","paddingBottom","defaultProps"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tKeyboard,\n\tLayoutAnimation,\n\tPlatform,\n\tStyleSheet,\n\tView,\n\tDimensions,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * This is a simplified version of Facebook's KeyboardAvoidingView.\n * It's meant to work specifically with BottomSheets.\n * This fixes an issue in the bottom padding calculation, when the\n * BottomSheet was presented on Landscape, with the keyboard already present,\n * and a TextField on Autofocus (situation present on Links UI)\n */\nclass KeyboardAvoidingView extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis._onKeyboardChange = this._onKeyboardChange.bind( this );\n\t\tthis._subscriptions = [];\n\t\tthis.state = {\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n\t_relativeKeyboardHeight( keyboardFrame ) {\n\t\tif ( ! keyboardFrame ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst windowWidth = Dimensions.get( 'window' ).width;\n\t\tconst isFloatingKeyboard = keyboardFrame.width !== windowWidth;\n\t\tif ( isFloatingKeyboard ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst windowHeight = Dimensions.get( 'window' ).height;\n\t\tconst keyboardY =\n\t\t\tkeyboardFrame.screenY - this.props.keyboardVerticalOffset;\n\n\t\tconst final = Math.max( windowHeight - keyboardY, 0 );\n\t\treturn final;\n\t}\n\n\t/**\n\t * @param {Object} event Keyboard event.\n\t */\n\t_onKeyboardChange( event ) {\n\t\tif ( event === null ) {\n\t\t\tthis.setState( { bottom: 0 } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { duration, easing, endCoordinates } = event;\n\t\tconst height = this._relativeKeyboardHeight( endCoordinates );\n\n\t\tif ( this.state.bottom === height ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( duration && easing ) {\n\t\t\tLayoutAnimation.configureNext( {\n\t\t\t\tduration,\n\t\t\t\tupdate: {\n\t\t\t\t\tduration,\n\t\t\t\t\ttype: LayoutAnimation.Types[ easing ] || 'keyboard',\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t\tthis.setState( { bottom: height } );\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( Platform.OS === 'ios' ) {\n\t\t\tthis._subscriptions = [\n\t\t\t\tKeyboard.addListener(\n\t\t\t\t\t'keyboardWillChangeFrame',\n\t\t\t\t\tthis._onKeyboardChange\n\t\t\t\t),\n\t\t\t];\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._subscriptions.forEach( ( subscription ) => {\n\t\t\tsubscription.remove();\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst { children, enabled, keyboardVerticalOffset, style, ...props } =\n\t\t\tthis.props;\n\n\t\tlet finalStyle = style;\n\t\tif ( Platform.OS === 'ios' ) {\n\t\t\tconst bottomHeight = enabled ? this.state.bottom : 0;\n\t\t\tfinalStyle = StyleSheet.compose( style, {\n\t\t\t\tpaddingBottom: bottomHeight,\n\t\t\t} );\n\t\t}\n\n\t\treturn (\n\t\t\t<View style={ finalStyle } { ...props }>\n\t\t\t\t{ children }\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nKeyboardAvoidingView.defaultProps = {\n\tenabled: true,\n\tkeyboardVerticalOffset: 0,\n};\n\nexport default KeyboardAvoidingView;\n"]}