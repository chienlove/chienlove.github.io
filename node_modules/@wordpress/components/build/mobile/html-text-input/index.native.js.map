{"version":3,"sources":["@wordpress/components/src/mobile/html-text-input/index.native.js"],"names":["HTMLTextInput","Component","constructor","arguments","edit","bind","stopEditing","getHTMLForParent","state","getDerivedStateFromProps","props","isDirty","value","componentWillUnmount","html","onChange","setState","onPersist","render","editTitle","getStylesFromColorScheme","parentHeight","style","title","titleStyle","styles","htmlViewTitle","text","color","htmlStyle","htmlView","htmlViewDark","placeholderStyle","placeholder","placeholderDark","keyboardAvoidingView","scrollView","contentTextInputRef","select","getEditedPostAttribute","getEditedPostContent","dispatch","editPost","resetEditorBlocks","content","blocks","withInstanceId","withPreferredColorScheme"],"mappings":";;;;;;;;;AAQA;;AALA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AASA;;AACA;;AAvBA;AACA;AACA;;AAGA;AACA;AACA;;AAYA;AACA;AACA;AAIO,MAAMA,aAAN,SAA4BC,kBAA5B,CAAsC;AAC5CC,EAAAA,WAAW,GAAG;AACb,UAAO,GAAGC,SAAV;AAEA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAgB,IAAhB,CAAZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAuB,IAAvB,CAAnB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA4B,IAA5B,CAAxB;AACA,0BACC,qBADD,EAEC,iBAFD,EAGC,KAAKE,gBAHN;AAMA,SAAKC,KAAL,GAAa,EAAb;AACA;;AAE8B,SAAxBC,wBAAwB,CAAEC,KAAF,EAASF,KAAT,EAAiB;AAC/C,QAAKA,KAAK,CAACG,OAAX,EAAqB;AACpB,aAAO,IAAP;AACA;;AAED,WAAO;AACNC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KADP;AAEND,MAAAA,OAAO,EAAE;AAFH,KAAP;AAIA;;AAEDE,EAAAA,oBAAoB,GAAG;AACtB,6BAAc,qBAAd,EAAqC,iBAArC,EADsB,CAEtB;;AACA,SAAKP,WAAL;AACA;;AAEDF,EAAAA,IAAI,CAAEU,IAAF,EAAS;AACZ,SAAKJ,KAAL,CAAWK,QAAX,CAAqBD,IAArB;AACA,SAAKE,QAAL,CAAe;AAAEJ,MAAAA,KAAK,EAAEE,IAAT;AAAeH,MAAAA,OAAO,EAAE;AAAxB,KAAf;AACA;;AAEDJ,EAAAA,gBAAgB,GAAG;AAClB,WAAO,KAAKC,KAAL,CAAWI,KAAlB;AACA;;AAEDN,EAAAA,WAAW,GAAG;AACb,QAAK,KAAKE,KAAL,CAAWG,OAAhB,EAA0B;AACzB,WAAKD,KAAL,CAAWO,SAAX,CAAsB,KAAKT,KAAL,CAAWI,KAAjC;AACA,WAAKI,QAAL,CAAe;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAf;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACR,UAAM;AACLC,MAAAA,SADK;AAELC,MAAAA,wBAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA,KAJK;AAKLC,MAAAA;AALK,QAMF,KAAKb,KANT;AAOA,UAAMc,UAAU,GAAG,CAClBC,eAAOC,aADW,EAElB,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,IAAP,KAAe;AAAEC,MAAAA,KAAK,EAAEN,KAAK,CAACK;AAAf,KAFG,CAAnB;AAIA,UAAME,SAAS,GAAG,CACjBT,wBAAwB,CAAEK,eAAOK,QAAT,EAAmBL,eAAOM,YAA1B,CADP,EAEjB,CAAAT,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,IAAP,KAAe;AAAEC,MAAAA,KAAK,EAAEN,KAAK,CAACK;AAAf,KAFE,CAAlB;AAIA,UAAMK,gBAAgB,GAAG,EACxB,GAAGZ,wBAAwB,CAC1BK,eAAOQ,WADmB,EAE1BR,eAAOS,eAFmB,CADH;AAKxB,UAAK,CAAAZ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,IAAP,KAAe;AAAEC,QAAAA,KAAK,EAAEN,KAAK,CAACK;AAAf,OAApB;AALwB,KAAzB;AAOA,WACC,4BAAC,6BAAD;AACC,MAAA,KAAK,EAAGF,eAAOU,oBADhB;AAEC,MAAA,YAAY,EAAGd;AAFhB,OAIC,4BAAC,uBAAD;AAAY,MAAA,KAAK,EAAGI,eAAOW;AAA3B,OACC,4BAAC,sBAAD;AACC,MAAA,WAAW,EAAG,KADf;AAEC,MAAA,kBAAkB,EAAC,iBAFpB;AAGC,MAAA,iBAAiB,EAAC,QAHnB;AAIC,MAAA,aAAa,EAAG,CAJjB;AAKC,MAAA,KAAK,EAAGZ,UALT;AAMC,MAAA,KAAK,EAAGD,KANT;AAOC,MAAA,WAAW,EAAG,cAAI,WAAJ,CAPf;AAQC,MAAA,oBAAoB,EAAGS,gBAAgB,CAACJ,KARzC;AASC,MAAA,YAAY,EAAGT;AAThB,MADD,EAYC,4BAAC,sBAAD;AACC,MAAA,GAAG,EAAG,KAAKkB,mBADZ;AAEC,MAAA,WAAW,EAAG,KAFf;AAGC,MAAA,kBAAkB,EAAC,mBAHpB;AAIC,MAAA,iBAAiB,EAAC,KAJnB;AAKC,MAAA,SAAS,MALV;AAMC,MAAA,KAAK,EAAGR,SANT;AAOC,MAAA,KAAK,EAAG,KAAKrB,KAAL,CAAWI,KAPpB;AAQC,MAAA,YAAY,EAAG,KAAKR,IARrB;AASC,MAAA,MAAM,EAAG,KAAKE,WATf;AAUC,MAAA,WAAW,EAAG,cAAI,gBAAJ,CAVf;AAWC,MAAA,oBAAoB,EAAG0B,gBAAgB,CAACJ,KAXzC;AAYC,MAAA,aAAa,EAAG,KAZjB,CAaC;AACA;AACA;AAfD;AAgBC,MAAA,0BAA0B,EAAG;AAhB9B,MAZD,CAJD,CADD;AAsCA;;AA9G2C;;;;eAiH9B,sBAAS,CACvB,sBAAcU,MAAF,IAAc;AACzB,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MACLF,MAAM,CAAE,aAAF,CADP;AAGA,SAAO;AACNf,IAAAA,KAAK,EAAEgB,sBAAsB,CAAE,OAAF,CADvB;AAEN3B,IAAAA,KAAK,EAAE4B,oBAAoB;AAFrB,GAAP;AAIA,CARD,CADuB,EAUvB,wBAAgBC,QAAF,IAAgB;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCF,QAAQ,CAAE,aAAF,CAAhD;AACA,SAAO;AACNtB,IAAAA,SAAS,CAAEI,KAAF,EAAU;AAClBmB,MAAAA,QAAQ,CAAE;AAAEnB,QAAAA;AAAF,OAAF,CAAR;AACA,KAHK;;AAINR,IAAAA,QAAQ,CAAE6B,OAAF,EAAY;AACnBF,MAAAA,QAAQ,CAAE;AAAEE,QAAAA;AAAF,OAAF,CAAR;AACA,KANK;;AAON3B,IAAAA,SAAS,CAAE2B,OAAF,EAAY;AACpB,YAAMC,MAAM,GAAG,mBAAOD,OAAP,CAAf;AACAD,MAAAA,iBAAiB,CAAEE,MAAF,CAAjB;AACA;;AAVK,GAAP;AAYA,CAdD,CAVuB,EAyBvBC,uBAzBuB,EA0BvBC,iCA1BuB,CAAT,EA2BV/C,aA3BU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { ScrollView, TextInput } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { addFilter, removeFilter } from '@wordpress/hooks';\nimport {\n\twithInstanceId,\n\tcompose,\n\twithPreferredColorScheme,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport KeyboardAvoidingView from '../keyboard-avoiding-view';\nimport styles from './style.scss';\n\nexport class HTMLTextInput extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\t\tthis.getHTMLForParent = this.getHTMLForParent.bind( this );\n\t\taddFilter(\n\t\t\t'native.persist-html',\n\t\t\t'html-text-input',\n\t\t\tthis.getHTMLForParent\n\t\t);\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tremoveFilter( 'native.persist-html', 'html-text-input' );\n\t\t// TODO: Blocking main thread.\n\t\tthis.stopEditing();\n\t}\n\n\tedit( html ) {\n\t\tthis.props.onChange( html );\n\t\tthis.setState( { value: html, isDirty: true } );\n\t}\n\n\tgetHTMLForParent() {\n\t\treturn this.state.value;\n\t}\n\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\teditTitle,\n\t\t\tgetStylesFromColorScheme,\n\t\t\tparentHeight,\n\t\t\tstyle,\n\t\t\ttitle,\n\t\t} = this.props;\n\t\tconst titleStyle = [\n\t\t\tstyles.htmlViewTitle,\n\t\t\tstyle?.text && { color: style.text },\n\t\t];\n\t\tconst htmlStyle = [\n\t\t\tgetStylesFromColorScheme( styles.htmlView, styles.htmlViewDark ),\n\t\t\tstyle?.text && { color: style.text },\n\t\t];\n\t\tconst placeholderStyle = {\n\t\t\t...getStylesFromColorScheme(\n\t\t\t\tstyles.placeholder,\n\t\t\t\tstyles.placeholderDark\n\t\t\t),\n\t\t\t...( style?.text && { color: style.text } ),\n\t\t};\n\t\treturn (\n\t\t\t<KeyboardAvoidingView\n\t\t\t\tstyle={ styles.keyboardAvoidingView }\n\t\t\t\tparentHeight={ parentHeight }\n\t\t\t>\n\t\t\t\t<ScrollView style={ styles.scrollView }>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\t\taccessibilityLabel=\"html-view-title\"\n\t\t\t\t\t\ttextAlignVertical=\"center\"\n\t\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\t\tstyle={ titleStyle }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tplaceholder={ __( 'Add title' ) }\n\t\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\t\tonChangeText={ editTitle }\n\t\t\t\t\t/>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tref={ this.contentTextInputRef }\n\t\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\t\taccessibilityLabel=\"html-view-content\"\n\t\t\t\t\t\ttextAlignVertical=\"top\"\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\tstyle={ htmlStyle }\n\t\t\t\t\t\tvalue={ this.state.value }\n\t\t\t\t\t\tonChangeText={ this.edit }\n\t\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\t\tplaceholder={ __( 'Start writingâ€¦' ) }\n\t\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\t\tscrollEnabled={ false }\n\t\t\t\t\t\t// [Only iOS] This prop prevents the text input from\n\t\t\t\t\t\t// automatically getting focused after scrolling\n\t\t\t\t\t\t// content.\n\t\t\t\t\t\trejectResponderTermination={ false }\n\t\t\t\t\t/>\n\t\t\t\t</ScrollView>\n\t\t\t</KeyboardAvoidingView>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getEditedPostContent } =\n\t\t\tselect( 'core/editor' );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tvalue: getEditedPostContent(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\tonChange( content ) {\n\t\t\t\teditPost( { content } );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tresetEditorBlocks( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithPreferredColorScheme,\n] )( HTMLTextInput );\n"]}