{"version":3,"sources":["@wordpress/components/src/item-group/styles.ts"],"names":["unstyledButton","css","COLORS","ui","theme","itemWrapper","item","bordered","CONFIG","surfaceBorderColor","separated","borderRadius","controlBorderRadius","spacedAround","rounded","baseFontHeight","fontSize","fontLineHeightBase","paddingY","controlHeight","paddingYSmall","controlHeightSmall","paddingYLarge","controlHeightLarge","itemSizes","small","controlPaddingXSmall","medium","controlPaddingX","large","controlPaddingXLarge"],"mappings":";;;;;;;AAGA;;AAKA;;;;AAEO,MAAMA,cAAc,oBAAGC,UAAH,iHAQfC,cAAOC,EAAP,CAAUC,KARK,mDAafF,cAAOC,EAAP,CAAUC,KAbK,oBAcRF,cAAOC,EAAP,CAAUC,KAdF,mnHAApB;;AAmBA,MAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAKA,MAAMC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAV;;AAQA,MAAMC,QAAQ,oBAAGN,UAAH,uBACCO,cAAOC,kBADR,klHAAd;;AAIA,MAAMC,SAAS,oBAAGT,UAAH,kDAEQO,cAAOC,kBAFf,qpHAAf;;AAUP,MAAME,YAAY,GAAGH,cAAOI,mBAA5B;AAEO,MAAMC,YAAY,oBAAGZ,UAAH,oBACNU,YADM,slHAAlB;;AAIA,MAAMG,OAAO,oBAAGb,UAAH,oBACDU,YADC,iDAISA,YAJT,+BAKUA,YALV,oDASYA,YATZ,kCAUaA,YAVb,klHAAb;;AAcP,MAAMI,cAAc,GAAI,QAAQP,cAAOQ,QAAU,MAAMR,cAAOS,kBAAoB,GAAlF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAI,SAASV,cAAOW,aAAe,MAAMJ,cAAgB,cAAvE;AACA,MAAMK,aAAa,GAAI,SAASZ,cAAOa,kBAAoB,MAAMN,cAAgB,cAAjF;AACA,MAAMO,aAAa,GAAI,SAASd,cAAOe,kBAAoB,MAAMR,cAAgB,cAAjF;AAEO,MAAMS,SAAS,GAAG;AACxBC,EAAAA,KAAK,mBAAExB,UAAF,cACQmB,aADR,OAC2BZ,cAAOkB,oBADlC,2kHADmB;AAIxBC,EAAAA,MAAM,mBAAE1B,UAAF,cACOiB,QADP,OACqBV,cAAOoB,eAD5B,4kHAJkB;AAOxBC,EAAAA,KAAK,mBAAE5B,UAAF,cACQqB,aADR,OAC2Bd,cAAOsB,oBADlC;AAPmB,CAAlB","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { CONFIG, COLORS } from '../utils';\n\nexport const unstyledButton = css`\n\tappearance: none;\n\tborder: 1px solid transparent;\n\tcursor: pointer;\n\tbackground: none;\n\ttext-align: start;\n\n\t&:hover {\n\t\tcolor: ${ COLORS.ui.theme };\n\t}\n\n\t&:focus {\n\t\tbackground-color: transparent;\n\t\tcolor: ${ COLORS.ui.theme };\n\t\tborder-color: ${ COLORS.ui.theme };\n\t\toutline: 3px solid transparent;\n\t}\n`;\n\nexport const itemWrapper = css`\n\twidth: 100%;\n\tdisplay: block;\n`;\n\nexport const item = css`\n\tbox-sizing: border-box;\n\twidth: 100%;\n\tdisplay: block;\n\tmargin: 0;\n\tcolor: inherit;\n`;\n\nexport const bordered = css`\n\tborder: 1px solid ${ CONFIG.surfaceBorderColor };\n`;\n\nexport const separated = css`\n\t> *:not( marquee ) > * {\n\t\tborder-bottom: 1px solid ${ CONFIG.surfaceBorderColor };\n\t}\n\n\t> *:last-of-type > *:not( :focus ) {\n\t\tborder-bottom-color: transparent;\n\t}\n`;\n\nconst borderRadius = CONFIG.controlBorderRadius;\n\nexport const spacedAround = css`\n\tborder-radius: ${ borderRadius };\n`;\n\nexport const rounded = css`\n\tborder-radius: ${ borderRadius };\n\n\t> *:first-of-type > * {\n\t\tborder-top-left-radius: ${ borderRadius };\n\t\tborder-top-right-radius: ${ borderRadius };\n\t}\n\n\t> *:last-of-type > * {\n\t\tborder-bottom-left-radius: ${ borderRadius };\n\t\tborder-bottom-right-radius: ${ borderRadius };\n\t}\n`;\n\nconst baseFontHeight = `calc(${ CONFIG.fontSize } * ${ CONFIG.fontLineHeightBase })`;\n\n/*\n * Math:\n * - Use the desired height as the base value\n * - Subtract the computed height of (default) text\n * - Subtract the effects of border\n * - Divide the calculated number by 2, in order to get an individual top/bottom padding\n */\nconst paddingY = `calc((${ CONFIG.controlHeight } - ${ baseFontHeight } - 2px) / 2)`;\nconst paddingYSmall = `calc((${ CONFIG.controlHeightSmall } - ${ baseFontHeight } - 2px) / 2)`;\nconst paddingYLarge = `calc((${ CONFIG.controlHeightLarge } - ${ baseFontHeight } - 2px) / 2)`;\n\nexport const itemSizes = {\n\tsmall: css`\n\t\tpadding: ${ paddingYSmall } ${ CONFIG.controlPaddingXSmall };\n\t`,\n\tmedium: css`\n\t\tpadding: ${ paddingY } ${ CONFIG.controlPaddingX };\n\t`,\n\tlarge: css`\n\t\tpadding: ${ paddingYLarge } ${ CONFIG.controlPaddingXLarge };\n\t`,\n};\n"]}