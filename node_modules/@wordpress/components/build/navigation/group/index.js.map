{"version":3,"sources":["@wordpress/components/src/navigation/group/index.tsx"],"names":["uniqueId","NavigationGroup","children","className","title","groupId","navigationTree","items","context","group","Object","values","some","item","_isVisible","groupTitleId","classes"],"mappings":";;;;;;;;;;AAQA;;AALA;;AAUA;;AACA;;AACA;;AAfA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAOA,IAAIA,QAAQ,GAAG,CAAf;;AAEO,SAASC,eAAT,OAImB;AAAA,MAJO;AAChCC,IAAAA,QADgC;AAEhCC,IAAAA,SAFgC;AAGhCC,IAAAA;AAHgC,GAIP;AACzB,QAAM,CAAEC,OAAF,IAAc,uBAAW,SAAS,EAAEL,QAAU,EAAhC,CAApB;AACA,QAAM;AACLM,IAAAA,cAAc,EAAE;AAAEC,MAAAA;AAAF;AADX,MAEF,qCAFJ;AAIA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAhB,CANyB,CAQzB;;AACA,MACC,CAAEK,MAAM,CAACC,MAAP,CAAeJ,KAAf,EAAuBK,IAAvB,CACCC,IAAF,IAAYA,IAAI,CAACJ,KAAL,KAAeJ,OAAf,IAA0BQ,IAAI,CAACC,UAD1C,CADH,EAIE;AACD,WACC,4BAAC,+BAAD,CAAwB,QAAxB;AAAiC,MAAA,KAAK,EAAGN;AAAzC,OACGN,QADH,CADD;AAKA;;AAED,QAAMa,YAAY,GAAI,sCAAsCV,OAAS,EAArE;AACA,QAAMW,OAAO,GAAG,yBAAY,8BAAZ,EAA4Cb,SAA5C,CAAhB;AAEA,SACC,4BAAC,+BAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAGK;AAAzC,KACC;AAAI,IAAA,SAAS,EAAGQ;AAAhB,KACGZ,KAAK,IACN,4BAAC,8BAAD;AACC,IAAA,SAAS,EAAC,oCADX;AAEC,IAAA,EAAE,EAAGW,YAFN;AAGC,IAAA,KAAK,EAAG;AAHT,KAKGX,KALH,CAFF,EAUC;AAAI,uBAAkBW,YAAtB;AAAqC,IAAA,IAAI,EAAC;AAA1C,KACGb,QADH,CAVD,CADD,CADD;AAkBA;;eAEcD,e","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { NavigationGroupContext } from './context';\nimport { GroupTitleUI } from '../styles/navigation-styles';\nimport { useNavigationContext } from '../context';\n\nimport type { NavigationGroupProps } from '../types';\n\nlet uniqueId = 0;\n\nexport function NavigationGroup( {\n\tchildren,\n\tclassName,\n\ttitle,\n}: NavigationGroupProps ) {\n\tconst [ groupId ] = useState( `group-${ ++uniqueId }` );\n\tconst {\n\t\tnavigationTree: { items },\n\t} = useNavigationContext();\n\n\tconst context = { group: groupId };\n\n\t// Keep the children rendered to make sure invisible items are included in the navigation tree.\n\tif (\n\t\t! Object.values( items ).some(\n\t\t\t( item ) => item.group === groupId && item._isVisible\n\t\t)\n\t) {\n\t\treturn (\n\t\t\t<NavigationGroupContext.Provider value={ context }>\n\t\t\t\t{ children }\n\t\t\t</NavigationGroupContext.Provider>\n\t\t);\n\t}\n\n\tconst groupTitleId = `components-navigation__group-title-${ groupId }`;\n\tconst classes = classnames( 'components-navigation__group', className );\n\n\treturn (\n\t\t<NavigationGroupContext.Provider value={ context }>\n\t\t\t<li className={ classes }>\n\t\t\t\t{ title && (\n\t\t\t\t\t<GroupTitleUI\n\t\t\t\t\t\tclassName=\"components-navigation__group-title\"\n\t\t\t\t\t\tid={ groupTitleId }\n\t\t\t\t\t\tlevel={ 3 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</GroupTitleUI>\n\t\t\t\t) }\n\t\t\t\t<ul aria-labelledby={ groupTitleId } role=\"group\">\n\t\t\t\t\t{ children }\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</NavigationGroupContext.Provider>\n\t);\n}\n\nexport default NavigationGroup;\n"]}