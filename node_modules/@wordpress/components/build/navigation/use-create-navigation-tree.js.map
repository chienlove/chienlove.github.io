{"version":3,"sources":["@wordpress/components/src/navigation/use-create-navigation-tree.tsx"],"names":["useCreateNavigationTree","nodes","items","getNode","getItem","addNode","addItem","removeNode","removeItem","menus","getMenu","addMenu","removeMenu","childMenu","setChildMenu","getChildMenu","menu","traverseMenu","startMenu","callback","visited","queue","current","length","shift","includes","push","isMenuEmpty","menuToCheck","isEmpty","undefined","key","value","state","newState","parentMenu"],"mappings":";;;;;;;AAGA;;AAKA;;AARA;AACA;AACA;;AAGA;AACA;AACA;AAKO,MAAMA,uBAAuB,GAAG,MAAM;AAC5C,QAAM;AACLC,IAAAA,KAAK,EAAEC,KADF;AAELC,IAAAA,OAAO,EAAEC,OAFJ;AAGLC,IAAAA,OAAO,EAAEC,OAHJ;AAILC,IAAAA,UAAU,EAAEC;AAJP,MAKF,qDALJ;AAOA,QAAM;AACLP,IAAAA,KAAK,EAAEQ,KADF;AAELN,IAAAA,OAAO,EAAEO,OAFJ;AAGLL,IAAAA,OAAO,EAAEM,OAHJ;AAILJ,IAAAA,UAAU,EAAEK;AAJP,MAKF,qDALJ;AAOA;AACD;AACA;AACA;AACA;AACA;AACA;;AACC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8B,uBACnC,EADmC,CAApC;;AAGA,QAAMC,YAAY,GAAKC,IAAF,IAAoBH,SAAS,CAAEG,IAAF,CAAT,IAAqB,EAA9D;;AAEA,QAAMC,YAAqE,GAC1E,CAAEC,SAAF,EAAaC,QAAb,KAA2B;AAC1B,UAAMC,OAAiB,GAAG,EAA1B;AACA,QAAIC,KAAK,GAAG,CAAEH,SAAF,CAAZ;AACA,QAAII,OAAJ;;AAEA,WAAQD,KAAK,CAACE,MAAN,GAAe,CAAvB,EAA2B;AAC1B;AACAD,MAAAA,OAAO,GAAGZ,OAAO,CAAEW,KAAK,CAACG,KAAN,EAAF,CAAjB;;AAEA,UAAK,CAAEF,OAAF,IAAaF,OAAO,CAACK,QAAR,CAAkBH,OAAO,CAACN,IAA1B,CAAlB,EAAqD;AACpD;AACA;;AAEDI,MAAAA,OAAO,CAACM,IAAR,CAAcJ,OAAO,CAACN,IAAtB;AACAK,MAAAA,KAAK,GAAG,CAAE,GAAGA,KAAL,EAAY,GAAGN,YAAY,CAAEO,OAAO,CAACN,IAAV,CAA3B,CAAR;;AAEA,UAAKG,QAAQ,CAAEG,OAAF,CAAR,KAAwB,KAA7B,EAAqC;AACpC;AACA;AACD;AACD,GArBF;;AAuBA,QAAMK,WAAW,GAAKC,WAAF,IAA2B;AAC9C,QAAIC,OAAO,GAAG,IAAd;AAEAZ,IAAAA,YAAY,CAAEW,WAAF,EAAiBN,OAAF,IAAqB;AAC/C,UAAK,CAAEA,OAAO,CAACO,OAAf,EAAyB;AACxBA,QAAAA,OAAO,GAAG,KAAV;AACA,eAAO,KAAP;AACA;;AAED,aAAOC,SAAP;AACA,KAPW,CAAZ;AASA,WAAOD,OAAP;AACA,GAbD;;AAeA,SAAO;AACN3B,IAAAA,KADM;AAENE,IAAAA,OAFM;AAGNE,IAAAA,OAHM;AAINE,IAAAA,UAJM;AAMNC,IAAAA,KANM;AAONC,IAAAA,OAPM;AAQNC,IAAAA,OAAO,EAAE,CAAEoB,GAAF,EAAeC,KAAf,KAAgC;AACxClB,MAAAA,YAAY,CAAImB,KAAF,IAAa;AAC1B,cAAMC,QAAQ,GAAG,EAAE,GAAGD;AAAL,SAAjB;;AAEA,YAAK,CAAED,KAAK,CAACG,UAAb,EAA0B;AACzB,iBAAOD,QAAP;AACA;;AAED,YAAK,CAAEA,QAAQ,CAAEF,KAAK,CAACG,UAAR,CAAf,EAAsC;AACrCD,UAAAA,QAAQ,CAAEF,KAAK,CAACG,UAAR,CAAR,GAA+B,EAA/B;AACA;;AAEDD,QAAAA,QAAQ,CAAEF,KAAK,CAACG,UAAR,CAAR,CAA6BT,IAA7B,CAAmCK,GAAnC;AAEA,eAAOG,QAAP;AACA,OAdW,CAAZ;AAgBAvB,MAAAA,OAAO,CAAEoB,GAAF,EAAOC,KAAP,CAAP;AACA,KA1BK;AA2BNpB,IAAAA,UA3BM;AA4BNC,IAAAA,SA5BM;AA6BNI,IAAAA,YA7BM;AA8BNU,IAAAA;AA9BM,GAAP;AAgCA,CAjGM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useNavigationTreeNodes } from './use-navigation-tree-nodes';\n\nimport type { NavigationContext, Item, Menu } from './types';\n\nexport const useCreateNavigationTree = () => {\n\tconst {\n\t\tnodes: items,\n\t\tgetNode: getItem,\n\t\taddNode: addItem,\n\t\tremoveNode: removeItem,\n\t} = useNavigationTreeNodes< Item >();\n\n\tconst {\n\t\tnodes: menus,\n\t\tgetNode: getMenu,\n\t\taddNode: addMenu,\n\t\tremoveNode: removeMenu,\n\t} = useNavigationTreeNodes< Menu >();\n\n\t/**\n\t * Stores direct nested menus of menus\n\t * This makes it easy to traverse menu tree\n\t *\n\t * Key is the menu prop of the menu\n\t * Value is an array of menu keys\n\t */\n\tconst [ childMenu, setChildMenu ] = useState< Record< string, string[] > >(\n\t\t{}\n\t);\n\tconst getChildMenu = ( menu: string ) => childMenu[ menu ] || [];\n\n\tconst traverseMenu: NavigationContext[ 'navigationTree' ][ 'traverseMenu' ] =\n\t\t( startMenu, callback ) => {\n\t\t\tconst visited: string[] = [];\n\t\t\tlet queue = [ startMenu ];\n\t\t\tlet current: Menu;\n\n\t\t\twhile ( queue.length > 0 ) {\n\t\t\t\t// Type cast to string is safe because of the `length > 0` check above.\n\t\t\t\tcurrent = getMenu( queue.shift() as string );\n\n\t\t\t\tif ( ! current || visited.includes( current.menu ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvisited.push( current.menu );\n\t\t\t\tqueue = [ ...queue, ...getChildMenu( current.menu ) ];\n\n\t\t\t\tif ( callback( current ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\tconst isMenuEmpty = ( menuToCheck: string ) => {\n\t\tlet isEmpty = true;\n\n\t\ttraverseMenu( menuToCheck, ( current: Menu ) => {\n\t\t\tif ( ! current.isEmpty ) {\n\t\t\t\tisEmpty = false;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t} );\n\n\t\treturn isEmpty;\n\t};\n\n\treturn {\n\t\titems,\n\t\tgetItem,\n\t\taddItem,\n\t\tremoveItem,\n\n\t\tmenus,\n\t\tgetMenu,\n\t\taddMenu: ( key: string, value: Menu ) => {\n\t\t\tsetChildMenu( ( state ) => {\n\t\t\t\tconst newState = { ...state };\n\n\t\t\t\tif ( ! value.parentMenu ) {\n\t\t\t\t\treturn newState;\n\t\t\t\t}\n\n\t\t\t\tif ( ! newState[ value.parentMenu ] ) {\n\t\t\t\t\tnewState[ value.parentMenu ] = [];\n\t\t\t\t}\n\n\t\t\t\tnewState[ value.parentMenu ].push( key );\n\n\t\t\t\treturn newState;\n\t\t\t} );\n\n\t\t\taddMenu( key, value );\n\t\t},\n\t\tremoveMenu,\n\t\tchildMenu,\n\t\ttraverseMenu,\n\t\tisMenuEmpty,\n\t};\n};\n"]}