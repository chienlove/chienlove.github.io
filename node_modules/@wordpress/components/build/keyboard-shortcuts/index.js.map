{"version":3,"sources":["@wordpress/components/src/keyboard-shortcuts/index.tsx"],"names":["KeyboardShortcut","target","callback","shortcut","bindGlobal","eventName","KeyboardShortcuts","children","shortcuts","element","Object","entries","map","Children","count"],"mappings":";;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;AASA,SAASA,gBAAT,OAM2B;AAAA,MANA;AAC1BC,IAAAA,MAD0B;AAE1BC,IAAAA,QAF0B;AAG1BC,IAAAA,QAH0B;AAI1BC,IAAAA,UAJ0B;AAK1BC,IAAAA;AAL0B,GAMA;AAC1B,oCAAqBF,QAArB,EAA+BD,QAA/B,EAAyC;AACxCE,IAAAA,UADwC;AAExCH,IAAAA,MAFwC;AAGxCI,IAAAA;AAHwC,GAAzC;AAMA,SAAO,IAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,iBAAT,QAK4B;AAAA,MALA;AAC3BC,IAAAA,QAD2B;AAE3BC,IAAAA,SAF2B;AAG3BJ,IAAAA,UAH2B;AAI3BC,IAAAA;AAJ2B,GAKA;AAC3B,QAAMJ,MAAM,GAAG,qBAAQ,IAAR,CAAf;AAEA,QAAMQ,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAgBH,SAAhB,aAAgBA,SAAhB,cAAgBA,SAAhB,GAA6B,EAA7B,EAAkCI,GAAlC,CACf;AAAA,QAAE,CAAET,QAAF,EAAYD,QAAZ,CAAF;AAAA,WACC,4BAAC,gBAAD;AACC,MAAA,GAAG,EAAGC,QADP;AAEC,MAAA,QAAQ,EAAGA,QAFZ;AAGC,MAAA,QAAQ,EAAGD,QAHZ;AAIC,MAAA,UAAU,EAAGE,UAJd;AAKC,MAAA,SAAS,EAAGC,SALb;AAMC,MAAA,MAAM,EAAGJ;AANV,MADD;AAAA,GADe,CAAhB,CAH2B,CAgB3B;AACA;;AACA,MAAK,CAAEY,kBAASC,KAAT,CAAgBP,QAAhB,CAAP,EAAoC;AACnC,WAAO,qDAAIE,OAAJ,CAAP;AACA;;AAED,SACC;AAAK,IAAA,GAAG,EAAGR;AAAX,KACGQ,OADH,EAEGF,QAFH,CADD;AAMA;;eAEcD,iB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, Children } from '@wordpress/element';\nimport { useKeyboardShortcut } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport type { KeyboardShortcutProps, KeyboardShortcutsProps } from './types';\n\nfunction KeyboardShortcut( {\n\ttarget,\n\tcallback,\n\tshortcut,\n\tbindGlobal,\n\teventName,\n}: KeyboardShortcutProps ) {\n\tuseKeyboardShortcut( shortcut, callback, {\n\t\tbindGlobal,\n\t\ttarget,\n\t\teventName,\n\t} );\n\n\treturn null;\n}\n\n/**\n * `KeyboardShortcuts` is a component which handles keyboard sequences during the lifetime of the rendering element.\n *\n * When passed children, it will capture key events which occur on or within the children. If no children are passed, events are captured on the document.\n *\n * It uses the [Mousetrap](https://craig.is/killing/mice) library to implement keyboard sequence bindings.\n *\n * ```jsx\n * import { KeyboardShortcuts } from '@wordpress/components';\n * import { useState } from '@wordpress/element';\n *\n * const MyKeyboardShortcuts = () => {\n * \tconst [ isAllSelected, setIsAllSelected ] = useState( false );\n * \tconst selectAll = () => {\n * \t\tsetIsAllSelected( true );\n * \t};\n *\n * \treturn (\n * \t\t<div>\n * \t\t\t<KeyboardShortcuts\n * \t\t\t\tshortcuts={ {\n * \t\t\t\t\t'mod+a': selectAll,\n * \t\t\t\t} }\n * \t\t\t/>\n * \t\t\t[cmd/ctrl + A] Combination pressed? { isAllSelected ? 'Yes' : 'No' }\n * \t\t</div>\n * \t);\n * };\n * ```\n */\nfunction KeyboardShortcuts( {\n\tchildren,\n\tshortcuts,\n\tbindGlobal,\n\teventName,\n}: KeyboardShortcutsProps ) {\n\tconst target = useRef( null );\n\n\tconst element = Object.entries( shortcuts ?? {} ).map(\n\t\t( [ shortcut, callback ] ) => (\n\t\t\t<KeyboardShortcut\n\t\t\t\tkey={ shortcut }\n\t\t\t\tshortcut={ shortcut }\n\t\t\t\tcallback={ callback }\n\t\t\t\tbindGlobal={ bindGlobal }\n\t\t\t\teventName={ eventName }\n\t\t\t\ttarget={ target }\n\t\t\t/>\n\t\t)\n\t);\n\n\t// Render as non-visual if there are no children pressed. Keyboard\n\t// events will be bound to the document instead.\n\tif ( ! Children.count( children ) ) {\n\t\treturn <>{ element }</>;\n\t}\n\n\treturn (\n\t\t<div ref={ target }>\n\t\t\t{ element }\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default KeyboardShortcuts;\n"]}