{"version":3,"sources":["@wordpress/components/src/grid/hook.ts"],"names":["useGrid","props","align","alignment","className","columnGap","columns","gap","isInline","justify","rowGap","rows","templateColumns","templateRows","otherProps","columnsAsArray","Array","isArray","column","rowsAsArray","row","gridTemplateColumns","gridTemplateRows","cx","classes","alignmentProps","gridClasses","alignItems","display","CONFIG","gridBase","undefined","gridRowGap","gridColumnGap","justifyContent","verticalAlign"],"mappings":";;;;;;;;;AAGA;;AAKA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAjBA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAQe,SAASA,OAAT,CACdC,KADc,EAEb;AACD,QAAM;AACLC,IAAAA,KADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,SAJK;AAKLC,IAAAA,OAAO,GAAG,CALL;AAMLC,IAAAA,GAAG,GAAG,CAND;AAOLC,IAAAA,QAAQ,GAAG,KAPN;AAQLC,IAAAA,OARK;AASLC,IAAAA,MATK;AAULC,IAAAA,IAVK;AAWLC,IAAAA,eAXK;AAYLC,IAAAA,YAZK;AAaL,OAAGC;AAbE,MAcF,+BAAkBb,KAAlB,EAAyB,MAAzB,CAdJ;AAgBA,QAAMc,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAeX,OAAf,IAA2BA,OAA3B,GAAqC,CAAEA,OAAF,CAA5D;AACA,QAAMY,MAAM,GAAG,4CAAoBH,cAApB,CAAf;AACA,QAAMI,WAAW,GAAGH,KAAK,CAACC,OAAN,CAAeN,IAAf,IAAwBA,IAAxB,GAA+B,CAAEA,IAAF,CAAnD;AACA,QAAMS,GAAG,GAAG,4CAAoBD,WAApB,CAAZ;AAEA,QAAME,mBAAmB,GACxBT,eAAe,IAAM,CAAC,CAAEN,OAAH,IAAe,WAAWY,MAAQ,SADxD;AAEA,QAAMI,gBAAgB,GACrBT,YAAY,IAAM,CAAC,CAAEF,IAAH,IAAY,WAAWS,GAAK,SAD/C;AAGA,QAAMG,EAAE,GAAG,mBAAX;AAEA,QAAMC,OAAO,GAAG,sBAAS,MAAM;AAC9B,UAAMC,cAAc,GAAG,8BAAmBtB,SAAnB,CAAvB;AAEA,UAAMuB,WAAW,gBAAG,gBAAK;AACxBC,MAAAA,UAAU,EAAEzB,KADY;AAExB0B,MAAAA,OAAO,EAAEpB,QAAQ,GAAG,aAAH,GAAmB,MAFZ;AAGxBD,MAAAA,GAAG,EAAG,SAASsB,sBAAOC,QAAU,MAAMvB,GAAK,IAHnB;AAIxBc,MAAAA,mBAAmB,EAAEA,mBAAmB,IAAIU,SAJpB;AAKxBT,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAIS,SALd;AAMxBC,MAAAA,UAAU,EAAEtB,MANY;AAOxBuB,MAAAA,aAAa,EAAE5B,SAPS;AAQxB6B,MAAAA,cAAc,EAAEzB,OARQ;AASxB0B,MAAAA,aAAa,EAAE3B,QAAQ,GAAG,QAAH,GAAcuB,SATb;AAUxB,SAAGN;AAVqB,KAAL,yxGAApB;AAaA,WAAOF,EAAE,CAAEG,WAAF,EAAetB,SAAf,CAAT;AACA,GAjBe,EAiBb,CACFF,KADE,EAEFC,SAFE,EAGFC,SAHE,EAIFC,SAJE,EAKFkB,EALE,EAMFhB,GANE,EAOFc,mBAPE,EAQFC,gBARE,EASFd,QATE,EAUFC,OAVE,EAWFC,MAXE,CAjBa,CAAhB;AA+BA,SAAO,EAAE,GAAGI,UAAL;AAAiBV,IAAAA,SAAS,EAAEoB;AAA5B,GAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useContextSystem, WordPressComponentProps } from '../ui/context';\nimport { getAlignmentProps } from './utils';\nimport { useResponsiveValue } from '../ui/utils/use-responsive-value';\nimport CONFIG from '../utils/config-values';\nimport { useCx } from '../utils/hooks/use-cx';\nimport type { GridProps } from './types';\n\nexport default function useGrid(\n\tprops: WordPressComponentProps< GridProps, 'div' >\n) {\n\tconst {\n\t\talign,\n\t\talignment,\n\t\tclassName,\n\t\tcolumnGap,\n\t\tcolumns = 2,\n\t\tgap = 3,\n\t\tisInline = false,\n\t\tjustify,\n\t\trowGap,\n\t\trows,\n\t\ttemplateColumns,\n\t\ttemplateRows,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Grid' );\n\n\tconst columnsAsArray = Array.isArray( columns ) ? columns : [ columns ];\n\tconst column = useResponsiveValue( columnsAsArray );\n\tconst rowsAsArray = Array.isArray( rows ) ? rows : [ rows ];\n\tconst row = useResponsiveValue( rowsAsArray );\n\n\tconst gridTemplateColumns =\n\t\ttemplateColumns || ( !! columns && `repeat( ${ column }, 1fr )` );\n\tconst gridTemplateRows =\n\t\ttemplateRows || ( !! rows && `repeat( ${ row }, 1fr )` );\n\n\tconst cx = useCx();\n\n\tconst classes = useMemo( () => {\n\t\tconst alignmentProps = getAlignmentProps( alignment );\n\n\t\tconst gridClasses = css( {\n\t\t\talignItems: align,\n\t\t\tdisplay: isInline ? 'inline-grid' : 'grid',\n\t\t\tgap: `calc( ${ CONFIG.gridBase } * ${ gap } )`,\n\t\t\tgridTemplateColumns: gridTemplateColumns || undefined,\n\t\t\tgridTemplateRows: gridTemplateRows || undefined,\n\t\t\tgridRowGap: rowGap,\n\t\t\tgridColumnGap: columnGap,\n\t\t\tjustifyContent: justify,\n\t\t\tverticalAlign: isInline ? 'middle' : undefined,\n\t\t\t...alignmentProps,\n\t\t} );\n\n\t\treturn cx( gridClasses, className );\n\t}, [\n\t\talign,\n\t\talignment,\n\t\tclassName,\n\t\tcolumnGap,\n\t\tcx,\n\t\tgap,\n\t\tgridTemplateColumns,\n\t\tgridTemplateRows,\n\t\tisInline,\n\t\tjustify,\n\t\trowGap,\n\t] );\n\n\treturn { ...otherProps, className: classes };\n}\n"]}