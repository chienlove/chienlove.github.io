{"version":3,"sources":["@wordpress/components/src/elevation/hook.ts"],"names":["getBoxShadow","value","boxShadowColor","boxShadow","useElevation","props","active","borderRadius","className","focus","hover","isInteractive","offset","otherProps","cx","classes","hoverValue","activeValue","undefined","transition","CONFIG","transitionDuration","transitionTimingFunction","sx","Base","bottom","opacity","elevationIntensity","left","right","top","css","styles","Elevation"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { css, SerializedStyles } from '@emotion/react';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useContextSystem, WordPressComponentProps } from '../ui/context';\nimport * as styles from './styles';\nimport { CONFIG, reduceMotion } from '../utils';\nimport { useCx } from '../utils/hooks/use-cx';\nimport { isValueDefined } from '../utils/values';\nimport type { ElevationProps } from './types';\n\nexport function getBoxShadow( value: number ) {\n\tconst boxShadowColor = `rgba(0, 0, 0, ${ value / 20 })`;\n\tconst boxShadow = `0 ${ value }px ${ value * 2 }px 0\n\t${ boxShadowColor }`;\n\n\treturn boxShadow;\n}\n\nexport function useElevation(\n\tprops: WordPressComponentProps< ElevationProps, 'div' >\n) {\n\tconst {\n\t\tactive,\n\t\tborderRadius = 'inherit',\n\t\tclassName,\n\t\tfocus,\n\t\thover,\n\t\tisInteractive = false,\n\t\toffset = 0,\n\t\tvalue = 0,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Elevation' );\n\n\tconst cx = useCx();\n\n\tconst classes = useMemo( () => {\n\t\tlet hoverValue: number | undefined = isValueDefined( hover )\n\t\t\t? hover\n\t\t\t: value * 2;\n\t\tlet activeValue: number | undefined = isValueDefined( active )\n\t\t\t? active\n\t\t\t: value / 2;\n\n\t\tif ( ! isInteractive ) {\n\t\t\thoverValue = isValueDefined( hover ) ? hover : undefined;\n\t\t\tactiveValue = isValueDefined( active ) ? active : undefined;\n\t\t}\n\n\t\tconst transition = `box-shadow ${ CONFIG.transitionDuration } ${ CONFIG.transitionTimingFunction }`;\n\n\t\tconst sx: {\n\t\t\tBase?: SerializedStyles;\n\t\t\thover?: SerializedStyles;\n\t\t\tactive?: SerializedStyles;\n\t\t\tfocus?: SerializedStyles;\n\t\t} = {};\n\n\t\tsx.Base = css(\n\t\t\t{\n\t\t\t\tborderRadius,\n\t\t\t\tbottom: offset,\n\t\t\t\tboxShadow: getBoxShadow( value ),\n\t\t\t\topacity: CONFIG.elevationIntensity,\n\t\t\t\tleft: offset,\n\t\t\t\tright: offset,\n\t\t\t\ttop: offset,\n\t\t\t\ttransition,\n\t\t\t},\n\t\t\treduceMotion( 'transition' )\n\t\t);\n\n\t\tif ( isValueDefined( hoverValue ) ) {\n\t\t\tsx.hover = css`\n\t\t\t\t*:hover > & {\n\t\t\t\t\tbox-shadow: ${ getBoxShadow( hoverValue ) };\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\n\t\tif ( isValueDefined( activeValue ) ) {\n\t\t\tsx.active = css`\n\t\t\t\t*:active > & {\n\t\t\t\t\tbox-shadow: ${ getBoxShadow( activeValue ) };\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\n\t\tif ( isValueDefined( focus ) ) {\n\t\t\tsx.focus = css`\n\t\t\t\t*:focus > & {\n\t\t\t\t\tbox-shadow: ${ getBoxShadow( focus ) };\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\n\t\treturn cx(\n\t\t\tstyles.Elevation,\n\t\t\tsx.Base,\n\t\t\tsx.hover,\n\t\t\tsx.focus,\n\t\t\tsx.active,\n\t\t\tclassName\n\t\t);\n\t}, [\n\t\tactive,\n\t\tborderRadius,\n\t\tclassName,\n\t\tcx,\n\t\tfocus,\n\t\thover,\n\t\tisInteractive,\n\t\toffset,\n\t\tvalue,\n\t] );\n\n\treturn { ...otherProps, className: classes, 'aria-hidden': true };\n}\n"]}