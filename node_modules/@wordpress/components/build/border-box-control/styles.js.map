{"version":3,"sources":["@wordpress/components/src/border-box-control/styles.ts"],"names":["borderBoxControl","css","linkedBorderControl","marginRight","wrapper","borderBoxControlLinkedButton","size","right","borderBoxStyleWithFallback","border","color","COLORS","gray","style","width","CONFIG","borderWidth","clampedWidth","hasVisibleBorder","borderStyle","borderBoxControlVisualizer","borders","top","bottom","borderLeft","left","borderRight","borderBoxControlSplitControls","undefined","centeredBorderControl","rightBorderControl","marginLeft"],"mappings":";;;;;;;AAGA;;AAKA;;;;AAKO,MAAMA,gBAAgB,oBAAGC,UAAH,sgHAAtB;;;AAEA,MAAMC,mBAAmB,GAAG,uBAAMD,UAAN,aAE/B,gBAAK;AAAEE,EAAAA,WAAW,EAAE;AAAf,CAAL,GAF+B,ihHAA5B;;;AAKA,MAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;;AAIA,MAAMC,4BAA4B,GACxCC,IAD2C,IAEvC;AACJ,0BAAOL,UAAP,4BAESK,IAAI,KAAK,kBAAT,GAA8B,KAA9B,GAAsC,KAF/C,OAGI,gBAAK;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAL,GAHJ;AAMA,CATM;;;;AAWP,MAAMC,0BAA0B,GAAKC,MAAF,IAAuB;AACzD,QAAM;AACLC,IAAAA,KAAK,GAAGC,cAAOC,IAAP,CAAa,GAAb,CADH;AAELC,IAAAA,KAAK,GAAG,OAFH;AAGLC,IAAAA,KAAK,GAAGC,cAAOC;AAHV,MAIFP,MAAM,IAAI,EAJd;AAMA,QAAMQ,YAAY,GACjBH,KAAK,KAAKC,cAAOC,WAAjB,GAAgC,cAAcF,KAAO,SAArD,GAAgEA,KADjE;AAEA,QAAMI,gBAAgB,GAAK,CAAC,CAAEJ,KAAH,IAAYA,KAAK,KAAK,GAAxB,IAAiC,CAAC,CAAEJ,KAA7D;AACA,QAAMS,WAAW,GAAGD,gBAAgB,GAAGL,KAAK,IAAI,OAAZ,GAAsBA,KAA1D;AAEA,SAAQ,GAAGH,KAAO,IAAIS,WAAa,IAAIF,YAAc,EAArD;AACA,CAbD;;AAeO,MAAMG,0BAA0B,GAAG,CACzCC,OADyC,EAEzCf,IAFyC,KAGrC;AACJ,0BAAOL,UAAP,4BAESK,IAAI,KAAK,kBAAT,GAA8B,MAA9B,GAAuC,MAFhD,aAGWA,IAAI,KAAK,kBAAT,GAA8B,MAA9B,GAAuC,MAHlD,cAIYA,IAAI,KAAK,kBAAT,GAA8B,MAA9B,GAAuC,MAJnD,YAKUA,IAAI,KAAK,kBAAT,GAA8B,MAA9B,GAAuC,MALjD,kBAMgBE,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEC,GAAX,CAN1C,qBAOmBd,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,MAAX,CAP7C,OAQI,gBAAK;AACPC,IAAAA,UAAU,EAAEhB,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,IAAX;AAD/B,GAAL,GARJ,OAWI,gBAAK;AACPC,IAAAA,WAAW,EAAElB,0BAA0B,CAAEa,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEd,KAAX;AADhC,GAAL,GAXJ;AAeA,CAnBM;;;;AAqBA,MAAMoB,6BAA6B,GACzCrB,IAD4C,qBAExCL,UAFwC,qCAKlCK,IAAI,KAAK,kBAAT,GAA8BsB,SAA9B,GAA0C,KALR,2hHAAtC;;;AAQA,MAAMC,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;;AAKA,MAAMC,kBAAkB,GAAG,uBAAM7B,UAAN,EAC9B,gBAAK;AAAE8B,EAAAA,UAAU,EAAE;AAAd,CAAL,GAD8B,ohHAA3B","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG, rtl } from '../utils';\n\nimport type { Border } from '../border-control/types';\nimport type { Borders } from './types';\n\nexport const borderBoxControl = css``;\n\nexport const linkedBorderControl = () => css`\n\tflex: 1;\n\t${ rtl( { marginRight: '24px' } )() }\n`;\n\nexport const wrapper = css`\n\tposition: relative;\n`;\n\nexport const borderBoxControlLinkedButton = (\n\tsize?: 'default' | '__unstable-large'\n) => {\n\treturn css`\n\t\tposition: absolute;\n\t\ttop: ${ size === '__unstable-large' ? '8px' : '3px' };\n\t\t${ rtl( { right: 0 } )() }\n\t\tline-height: 0;\n\t`;\n};\n\nconst borderBoxStyleWithFallback = ( border?: Border ) => {\n\tconst {\n\t\tcolor = COLORS.gray[ 200 ],\n\t\tstyle = 'solid',\n\t\twidth = CONFIG.borderWidth,\n\t} = border || {};\n\n\tconst clampedWidth =\n\t\twidth !== CONFIG.borderWidth ? `clamp(1px, ${ width }, 10px)` : width;\n\tconst hasVisibleBorder = ( !! width && width !== '0' ) || !! color;\n\tconst borderStyle = hasVisibleBorder ? style || 'solid' : style;\n\n\treturn `${ color } ${ borderStyle } ${ clampedWidth }`;\n};\n\nexport const borderBoxControlVisualizer = (\n\tborders?: Borders,\n\tsize?: 'default' | '__unstable-large'\n) => {\n\treturn css`\n\t\tposition: absolute;\n\t\ttop: ${ size === '__unstable-large' ? '20px' : '15px' };\n\t\tright: ${ size === '__unstable-large' ? '39px' : '29px' };\n\t\tbottom: ${ size === '__unstable-large' ? '20px' : '15px' };\n\t\tleft: ${ size === '__unstable-large' ? '39px' : '29px' };\n\t\tborder-top: ${ borderBoxStyleWithFallback( borders?.top ) };\n\t\tborder-bottom: ${ borderBoxStyleWithFallback( borders?.bottom ) };\n\t\t${ rtl( {\n\t\t\tborderLeft: borderBoxStyleWithFallback( borders?.left ),\n\t\t} )() }\n\t\t${ rtl( {\n\t\t\tborderRight: borderBoxStyleWithFallback( borders?.right ),\n\t\t} )() }\n\t`;\n};\n\nexport const borderBoxControlSplitControls = (\n\tsize?: 'default' | '__unstable-large'\n) => css`\n\tposition: relative;\n\tflex: 1;\n\twidth: ${ size === '__unstable-large' ? undefined : '80%' };\n`;\n\nexport const centeredBorderControl = css`\n\tgrid-column: span 2;\n\tmargin: 0 auto;\n`;\n\nexport const rightBorderControl = () => css`\n\t${ rtl( { marginLeft: 'auto' } )() }\n`;\n"]}