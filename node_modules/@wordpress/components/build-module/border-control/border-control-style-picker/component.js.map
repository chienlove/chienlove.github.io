{"version":3,"sources":["@wordpress/components/src/border-control/border-control-style-picker/component.tsx"],"names":["lineDashed","lineDotted","lineSolid","__","Button","StyledLabel","View","Flex","VisuallyHidden","contextConnect","useBorderControlStylePicker","BORDER_STYLES","label","icon","value","Label","props","hideLabelFromVision","BorderControlStylePicker","forwardedRef","buttonClassName","onChange","otherProps","map","borderStyle","undefined","ConnectedBorderControlStylePicker"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,kBAAlD;AACA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,+CAA5B;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAAwD,kBAAxD;AACA,SAASC,2BAAT,QAA4C,QAA5C;AAIA,MAAMC,aAAa,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAET,EAAE,CAAE,OAAF,CAAX;AAAwBU,EAAAA,IAAI,EAAEX,SAA9B;AAAyCY,EAAAA,KAAK,EAAE;AAAhD,CADqB,EAErB;AAAEF,EAAAA,KAAK,EAAET,EAAE,CAAE,QAAF,CAAX;AAAyBU,EAAAA,IAAI,EAAEb,UAA/B;AAA2Cc,EAAAA,KAAK,EAAE;AAAlD,CAFqB,EAGrB;AAAEF,EAAAA,KAAK,EAAET,EAAE,CAAE,QAAF,CAAX;AAAyBU,EAAAA,IAAI,EAAEZ,UAA/B;AAA2Ca,EAAAA,KAAK,EAAE;AAAlD,CAHqB,CAAtB;;AAMA,MAAMC,KAAK,GAAKC,KAAF,IAAyB;AACtC,QAAM;AAAEJ,IAAAA,KAAF;AAASK,IAAAA;AAAT,MAAiCD,KAAvC;;AAEA,MAAK,CAAEJ,KAAP,EAAe;AACd,WAAO,IAAP;AACA;;AAED,SAAOK,mBAAmB,GACzB,cAAC,cAAD;AAAgB,IAAA,EAAE,EAAC;AAAnB,KAA6BL,KAA7B,CADyB,GAGzB,cAAC,WAAD,QAAeA,KAAf,CAHD;AAKA,CAZD;;AAcA,MAAMM,wBAAwB,GAAG,CAChCF,KADgC,EAEhCG,YAFgC,KAG5B;AACJ,QAAM;AACLC,IAAAA,eADK;AAELH,IAAAA,mBAFK;AAGLL,IAAAA,KAHK;AAILS,IAAAA,QAJK;AAKLP,IAAAA,KALK;AAML,OAAGQ;AANE,MAOFZ,2BAA2B,CAAEM,KAAF,CAP/B;AASA,SACC,cAAC,IAAD,eAAWM,UAAX;AAAwB,IAAA,GAAG,EAAGH;AAA9B,MACC,cAAC,KAAD;AACC,IAAA,KAAK,EAAGP,KADT;AAEC,IAAA,mBAAmB,EAAGK;AAFvB,IADD,EAKC,cAAC,IAAD;AAAM,IAAA,OAAO,EAAC,YAAd;AAA2B,IAAA,GAAG,EAAG;AAAjC,KACGN,aAAa,CAACY,GAAd,CAAqBC,WAAF,IACpB,cAAC,MAAD;AACC,IAAA,GAAG,EAAGA,WAAW,CAACV,KADnB;AAEC,IAAA,SAAS,EAAGM,eAFb;AAGC,IAAA,IAAI,EAAGI,WAAW,CAACX,IAHpB;AAIC,IAAA,OAAO,MAJR;AAKC,IAAA,SAAS,EAAGW,WAAW,CAACV,KAAZ,KAAsBA,KALnC;AAMC,IAAA,OAAO,EAAG,MACTO,QAAQ,CACPG,WAAW,CAACV,KAAZ,KAAsBA,KAAtB,GACGW,SADH,GAEGD,WAAW,CAACV,KAHR,CAPV;AAaC,kBAAaU,WAAW,CAACZ,KAb1B;AAcC,IAAA,KAAK,EAAGY,WAAW,CAACZ,KAdrB;AAeC,IAAA,WAAW,EAAG;AAff,IADC,CADH,CALD,CADD;AA6BA,CA1CD;;AA4CA,MAAMc,iCAAiC,GAAGjB,cAAc,CACvDS,wBADuD,EAEvD,0BAFuD,CAAxD;AAKA,eAAeQ,iCAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { lineDashed, lineDotted, lineSolid } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Button from '../../button';\nimport { StyledLabel } from '../../base-control/styles/base-control-styles';\nimport { View } from '../../view';\nimport { Flex } from '../../flex';\nimport { VisuallyHidden } from '../../visually-hidden';\nimport { contextConnect, WordPressComponentProps } from '../../ui/context';\nimport { useBorderControlStylePicker } from './hook';\n\nimport type { LabelProps, StylePickerProps } from '../types';\n\nconst BORDER_STYLES = [\n\t{ label: __( 'Solid' ), icon: lineSolid, value: 'solid' },\n\t{ label: __( 'Dashed' ), icon: lineDashed, value: 'dashed' },\n\t{ label: __( 'Dotted' ), icon: lineDotted, value: 'dotted' },\n];\n\nconst Label = ( props: LabelProps ) => {\n\tconst { label, hideLabelFromVision } = props;\n\n\tif ( ! label ) {\n\t\treturn null;\n\t}\n\n\treturn hideLabelFromVision ? (\n\t\t<VisuallyHidden as=\"label\">{ label }</VisuallyHidden>\n\t) : (\n\t\t<StyledLabel>{ label }</StyledLabel>\n\t);\n};\n\nconst BorderControlStylePicker = (\n\tprops: WordPressComponentProps< StylePickerProps, 'div' >,\n\tforwardedRef: React.ForwardedRef< any >\n) => {\n\tconst {\n\t\tbuttonClassName,\n\t\thideLabelFromVision,\n\t\tlabel,\n\t\tonChange,\n\t\tvalue,\n\t\t...otherProps\n\t} = useBorderControlStylePicker( props );\n\n\treturn (\n\t\t<View { ...otherProps } ref={ forwardedRef }>\n\t\t\t<Label\n\t\t\t\tlabel={ label }\n\t\t\t\thideLabelFromVision={ hideLabelFromVision }\n\t\t\t/>\n\t\t\t<Flex justify=\"flex-start\" gap={ 1 }>\n\t\t\t\t{ BORDER_STYLES.map( ( borderStyle ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ borderStyle.value }\n\t\t\t\t\t\tclassName={ buttonClassName }\n\t\t\t\t\t\ticon={ borderStyle.icon }\n\t\t\t\t\t\tisSmall\n\t\t\t\t\t\tisPressed={ borderStyle.value === value }\n\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\t\tborderStyle.value === value\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: borderStyle.value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-label={ borderStyle.label }\n\t\t\t\t\t\tlabel={ borderStyle.label }\n\t\t\t\t\t\tshowTooltip={ true }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</Flex>\n\t\t</View>\n\t);\n};\n\nconst ConnectedBorderControlStylePicker = contextConnect(\n\tBorderControlStylePicker,\n\t'BorderControlStylePicker'\n);\n\nexport default ConnectedBorderControlStylePicker;\n"]}