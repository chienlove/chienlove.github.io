import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";
// @ts-nocheck

/**
 * WordPress dependencies
 */
import { useContext } from '@wordpress/element';
/**
 * Internal dependencies
 */

import DropdownMenu from '../../dropdown-menu';
import ToolbarContext from '../toolbar-context';
import ToolbarItem from '../toolbar-item';

function ToolbarGroupCollapsed(_ref) {
  let {
    controls = [],
    toggleProps,
    ...props
  } = _ref;
  // It'll contain state if `ToolbarGroup` is being used within
  // `<Toolbar label="label" />`
  const accessibleToolbarState = useContext(ToolbarContext);

  const renderDropdownMenu = internalToggleProps => createElement(DropdownMenu, _extends({
    controls: controls,
    toggleProps: { ...internalToggleProps,
      'data-toolbar-item': true
    }
  }, props));

  if (accessibleToolbarState) {
    return createElement(ToolbarItem, toggleProps, renderDropdownMenu);
  }

  return renderDropdownMenu(toggleProps);
}

export default ToolbarGroupCollapsed;
//# sourceMappingURL=toolbar-group-collapsed.js.map