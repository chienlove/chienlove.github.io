{"version":3,"sources":["@wordpress/components/src/alignment-matrix-control/styles/alignment-matrix-control-icon-styles.ts"],"names":["css","rootBase","pointBase","Cell","CellBase","rootSize","padding","size","gridTemplateRows","maxHeight","maxWidth","rootPointerEvents","disablePointerEvents","pointerEvents","undefined","Wrapper","Root","pointActive","isActive","boxShadow","Point"],"mappings":";;;;AAAA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,gBAApB;AAEA;AACA;AACA;;AACA,SACCC,QADD,EAECC,SAFD,EAGCC,IAAI,IAAIC,QAHT,QAIO,mCAJP;;AAUA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAG,GAAhB;AACA,QAAMC,IAAI,GAAG,EAAb;AAEA,sBAAOP,GAAG,CAAE;AACXQ,IAAAA,gBAAgB,EAAG,oBAAoBD,IAAI,GAAGD,OAAO,GAAG,CAAG,UADhD;AAEXA,IAAAA,OAFW;AAGXG,IAAAA,SAAS,EAAEF,IAHA;AAIXG,IAAAA,QAAQ,EAAEH;AAJC,GAAF,0iFAAV;AAMA,CAVD;;AAYA,MAAMI,iBAAiB,GAAG,QAE8C;AAAA,MAF5C;AAC3BC,IAAAA;AAD2B,GAE4C;AACvE,sBAAOZ,GAAG,CAAE;AACXa,IAAAA,aAAa,EAAED,oBAAoB,GAAG,MAAH,GAAYE;AADpC,GAAF,mjFAAV;AAGA,CAND;;AAQA,OAAO,MAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAb;AAKP,OAAO,MAAMC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,wDAKbf,QALa,OAMbI,QANa,OAObM,iBAPa,q/EAAV;;AAUP,MAAMM,WAAW,GAAG,SAEwC;AAAA,MAFtC;AACrBC,IAAAA;AADqB,GAEsC;AAC3D,QAAMC,SAAS,GAAGD,QAAQ,GAAI,wBAAJ,GAA8B,IAAxD;AAEA,sBAAOlB,GAAP,gBACgBmB,SADhB;AAQA,CAbD;;AAeA,OAAO,MAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGdlB,SAHc,OAIde,WAJc,q/EAAX;AAOP,OAAO,MAAMd,IAAI,GAAGC,QAAb","sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport {\n\trootBase,\n\tpointBase,\n\tCell as CellBase,\n} from './alignment-matrix-control-styles';\nimport type {\n\tAlignmentMatrixControlIconProps,\n\tAlignmentMatrixControlCellProps,\n} from '../types';\n\nconst rootSize = () => {\n\tconst padding = 1.5;\n\tconst size = 24;\n\n\treturn css( {\n\t\tgridTemplateRows: `repeat( 3, calc( ${ size - padding * 2 }px / 3))`,\n\t\tpadding,\n\t\tmaxHeight: size,\n\t\tmaxWidth: size,\n\t} );\n};\n\nconst rootPointerEvents = ( {\n\tdisablePointerEvents,\n}: Pick< AlignmentMatrixControlIconProps, 'disablePointerEvents' > ) => {\n\treturn css( {\n\t\tpointerEvents: disablePointerEvents ? 'none' : undefined,\n\t} );\n};\n\nexport const Wrapper = styled.div`\n\tbox-sizing: border-box;\n\tpadding: 2px;\n`;\n\nexport const Root = styled.div`\n\ttransform-origin: top left;\n\theight: 100%;\n\twidth: 100%;\n\n\t${ rootBase };\n\t${ rootSize };\n\t${ rootPointerEvents };\n`;\n\nconst pointActive = ( {\n\tisActive,\n}: Pick< AlignmentMatrixControlCellProps, 'isActive' > ) => {\n\tconst boxShadow = isActive ? `0 0 0 1px currentColor` : null;\n\n\treturn css`\n\t\tbox-shadow: ${ boxShadow };\n\t\tcolor: currentColor;\n\n\t\t*:hover > & {\n\t\t\tcolor: currentColor;\n\t\t}\n\t`;\n};\n\nexport const Point = styled.span`\n\theight: 2px;\n\twidth: 2px;\n\t${ pointBase };\n\t${ pointActive };\n`;\n\nexport const Cell = CellBase;\n"]}