{"version":3,"sources":["@wordpress/components/src/alignment-matrix-control/index.tsx"],"names":["classnames","__","isRTL","useInstanceId","useState","useEffect","Cell","Composite","CompositeGroup","useCompositeState","Root","Row","AlignmentMatrixControlIcon","GRID","getItemId","noop","useBaseId","id","instanceId","AlignmentMatrixControl","className","label","defaultValue","value","onChange","width","props","immutableDefaultValue","baseId","initialCurrentId","composite","currentId","rtl","handleOnChange","nextValue","setCurrentId","classes","map","cells","index","cell","cellId","isActive","Icon"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport { Composite, CompositeGroup, useCompositeState } from '../composite';\nimport { Root, Row } from './styles/alignment-matrix-control-styles';\nimport AlignmentMatrixControlIcon from './icon';\nimport { GRID, getItemId } from './utils';\nimport type { WordPressComponentProps } from '../ui/context';\nimport type {\n\tAlignmentMatrixControlProps,\n\tAlignmentMatrixControlValue,\n} from './types';\n\nconst noop = () => {};\n\nfunction useBaseId( id?: string ) {\n\tconst instanceId = useInstanceId(\n\t\tAlignmentMatrixControl,\n\t\t'alignment-matrix-control'\n\t);\n\n\treturn id || instanceId;\n}\n\n/**\n *\n * AlignmentMatrixControl components enable adjustments to horizontal and vertical alignments for UI.\n *\n * ```jsx\n * import { __experimentalAlignmentMatrixControl as AlignmentMatrixControl } from '@wordpress/components';\n * import { useState } from '@wordpress/element';\n *\n * const Example = () => {\n * \tconst [ alignment, setAlignment ] = useState( 'center center' );\n *\n * \treturn (\n * \t\t<AlignmentMatrixControl\n * \t\t\tvalue={ alignment }\n * \t\t\tonChange={ setAlignment }\n * \t\t/>\n * \t);\n * };\n * ```\n */\nexport function AlignmentMatrixControl( {\n\tclassName,\n\tid,\n\tlabel = __( 'Alignment Matrix Control' ),\n\tdefaultValue = 'center center',\n\tvalue,\n\tonChange = noop,\n\twidth = 92,\n\t...props\n}: WordPressComponentProps< AlignmentMatrixControlProps, 'div', false > ) {\n\tconst [ immutableDefaultValue ] = useState( value ?? defaultValue );\n\tconst baseId = useBaseId( id );\n\tconst initialCurrentId = getItemId( baseId, immutableDefaultValue );\n\n\tconst composite = useCompositeState( {\n\t\tbaseId,\n\t\tcurrentId: initialCurrentId,\n\t\trtl: isRTL(),\n\t} );\n\n\tconst handleOnChange = ( nextValue: AlignmentMatrixControlValue ) => {\n\t\tonChange( nextValue );\n\t};\n\n\tconst { setCurrentId } = composite;\n\n\tuseEffect( () => {\n\t\tif ( typeof value !== 'undefined' ) {\n\t\t\tsetCurrentId( getItemId( baseId, value ) );\n\t\t}\n\t}, [ value, setCurrentId, baseId ] );\n\n\tconst classes = classnames(\n\t\t'component-alignment-matrix-control',\n\t\tclassName\n\t);\n\n\treturn (\n\t\t<Composite\n\t\t\t{ ...props }\n\t\t\t{ ...composite }\n\t\t\taria-label={ label }\n\t\t\tas={ Root }\n\t\t\tclassName={ classes }\n\t\t\trole=\"grid\"\n\t\t\tsize={ width }\n\t\t>\n\t\t\t{ GRID.map( ( cells, index ) => (\n\t\t\t\t<CompositeGroup\n\t\t\t\t\t{ ...composite }\n\t\t\t\t\tas={ Row }\n\t\t\t\t\trole=\"row\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t>\n\t\t\t\t\t{ cells.map( ( cell ) => {\n\t\t\t\t\t\tconst cellId = getItemId( baseId, cell );\n\t\t\t\t\t\tconst isActive = composite.currentId === cellId;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t{ ...composite }\n\t\t\t\t\t\t\t\tid={ cellId }\n\t\t\t\t\t\t\t\tisActive={ isActive }\n\t\t\t\t\t\t\t\tkey={ cell }\n\t\t\t\t\t\t\t\tvalue={ cell }\n\t\t\t\t\t\t\t\tonFocus={ () => handleOnChange( cell ) }\n\t\t\t\t\t\t\t\ttabIndex={ isActive ? 0 : -1 }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</CompositeGroup>\n\t\t\t) ) }\n\t\t</Composite>\n\t);\n}\n\nAlignmentMatrixControl.Icon = AlignmentMatrixControlIcon;\n\nexport default AlignmentMatrixControl;\n"]}