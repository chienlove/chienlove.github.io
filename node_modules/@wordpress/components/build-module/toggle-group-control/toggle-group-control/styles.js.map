{"version":3,"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/styles.ts"],"names":["css","CONFIG","COLORS","reduceMotion","ToggleGroupControl","isBlock","isDeselectable","size","ui","background","controlBorderRadius","transitionDurationFastest","toggleGroupControlSize","enclosingBorders","enclosingBorder","border","borderHover","borderFocus","controlBoxShadowFocus","heights","default","block","BackdropView","gray","transitionDurationFast","VisualLabelWrapper"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,gBAApB;;AAGA;AACA;AACA;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,YAAzB,QAA6C,aAA7C;AAGA,OAAO,MAAMC,kBAAkB,GAAG;AAAA,MAAE;AACnCC,IAAAA,OADmC;AAEnCC,IAAAA,cAFmC;AAGnCC,IAAAA;AAHmC,GAAF;AAAA,sBAM3BP,GAN2B,gBAOlBE,MAAM,CAACM,EAAP,CAAUC,UAPQ,kDASfR,MAAM,CAACS,mBATQ,0FAcRT,MAAM,CAACU,yBAdC,cAe9BR,YAAY,CAAE,YAAF,CAfkB,OAiB9BS,sBAAsB,CAAEL,IAAF,CAjBQ,OAkB9B,CAAED,cAAF,IAAoBO,gBAAgB,CAAER,OAAF,CAlBN;AAAA,CAA3B;;AAqBP,MAAMQ,gBAAgB,GAAKR,OAAF,IAAqD;AAC7E,QAAMS,eAAe,gBAAGd,GAAH,kBACHE,MAAM,CAACM,EAAP,CAAUO,MADP,q3GAArB;AAIA,sBAAOf,GAAP,CACIK,OAAO,IAAIS,eADf,4BAImBZ,MAAM,CAACM,EAAP,CAAUQ,WAJ7B,oCAQmBd,MAAM,CAACM,EAAP,CAAUS,WAR7B,kBASiBhB,MAAM,CAACiB,qBATxB;AAcA,CAnBD;;AAqBA,OAAO,MAAMN,sBAAsB,GAClCL,IADqC,IAEjC;AACJ,QAAMY,OAAO,GAAG;AACfC,IAAAA,OAAO,EAAE,MADM;AAEf,wBAAoB;AAFL,GAAhB;AAKA,sBAAOpB,GAAP,gBACgBmB,OAAO,CAAEZ,IAAF,CADvB;AAGA,CAXM;AAaP,OAAO,MAAMc,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAX;AAKP,OAAO,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,kBACTpB,MAAM,CAACqB,IAAP,CAAa,GAAb,CADS,qBAENtB,MAAM,CAACS,mBAFD,wEAOCT,MAAM,CAACuB,sBAPR,YAQrBrB,YAAY,CAAE,YAAF,CARS,uzGAAlB;AAYP,OAAO,MAAMsB,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\n/**\n * Internal dependencies\n */\nimport { CONFIG, COLORS, reduceMotion } from '../../utils';\nimport type { ToggleGroupControlProps } from '../types';\n\nexport const ToggleGroupControl = ( {\n\tisBlock,\n\tisDeselectable,\n\tsize,\n}: Pick< ToggleGroupControlProps, 'isBlock' | 'isDeselectable' > & {\n\tsize: NonNullable< ToggleGroupControlProps[ 'size' ] >;\n} ) => css`\n\tbackground: ${ COLORS.ui.background };\n\tborder: 1px solid transparent;\n\tborder-radius: ${ CONFIG.controlBorderRadius };\n\tdisplay: inline-flex;\n\tmin-width: 0;\n\tpadding: 2px;\n\tposition: relative;\n\ttransition: transform ${ CONFIG.transitionDurationFastest } linear;\n\t${ reduceMotion( 'transition' ) }\n\n\t${ toggleGroupControlSize( size ) }\n\t${ ! isDeselectable && enclosingBorders( isBlock ) }\n`;\n\nconst enclosingBorders = ( isBlock: ToggleGroupControlProps[ 'isBlock' ] ) => {\n\tconst enclosingBorder = css`\n\t\tborder-color: ${ COLORS.ui.border };\n\t`;\n\n\treturn css`\n\t\t${ isBlock && enclosingBorder }\n\n\t\t&:hover {\n\t\t\tborder-color: ${ COLORS.ui.borderHover };\n\t\t}\n\n\t\t&:focus-within {\n\t\t\tborder-color: ${ COLORS.ui.borderFocus };\n\t\t\tbox-shadow: ${ CONFIG.controlBoxShadowFocus };\n\t\t\toutline: none;\n\t\t\tz-index: 1;\n\t\t}\n\t`;\n};\n\nexport const toggleGroupControlSize = (\n\tsize: NonNullable< ToggleGroupControlProps[ 'size' ] >\n) => {\n\tconst heights = {\n\t\tdefault: '36px',\n\t\t'__unstable-large': '40px',\n\t};\n\n\treturn css`\n\t\tmin-height: ${ heights[ size ] };\n\t`;\n};\n\nexport const block = css`\n\tdisplay: flex;\n\twidth: 100%;\n`;\n\nexport const BackdropView = styled.div`\n\tbackground: ${ COLORS.gray[ 900 ] };\n\tborder-radius: ${ CONFIG.controlBorderRadius };\n\tleft: 0;\n\tposition: absolute;\n\ttop: 2px;\n\tbottom: 2px;\n\ttransition: transform ${ CONFIG.transitionDurationFast } ease;\n\t${ reduceMotion( 'transition' ) }\n\tz-index: 1;\n`;\n\nexport const VisualLabelWrapper = styled.div`\n\t// Makes the inline label be the correct height, equivalent to setting line-height: 0\n\tdisplay: flex;\n`;\n"]}