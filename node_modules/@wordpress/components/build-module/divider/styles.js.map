{"version":3,"sources":["@wordpress/components/src/divider/styles.ts"],"names":["css","space","rtl","MARGIN_DIRECTIONS","vertical","start","end","horizontal","renderMargin","orientation","margin","marginStart","marginEnd","renderDisplay","undefined","renderBorder","renderSize","height","width","DividerView"],"mappings":";;;;AAAA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,gBAApB;AAEA;AACA;AACA;;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,GAAT,QAAoB,UAApB;AAGA,MAAMC,iBAGL,GAAG;AACHC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE,YADE;AAETC,IAAAA,GAAG,EAAE;AAFI,GADP;AAKHC,EAAAA,UAAU,EAAE;AACXF,IAAAA,KAAK,EAAE,WADI;AAEXC,IAAAA,GAAG,EAAE;AAFM;AALT,CAHJ,C,CAcA;AACA;AACA;;AACA,MAAME,YAAY,GAAG;AAAA,MAAE;AACtB,wBAAoBC,WAAW,GAAG,YADZ;AAEtBC,IAAAA,MAFsB;AAGtBC,IAAAA,WAHsB;AAItBC,IAAAA;AAJsB,GAAF;AAAA,sBAMpBZ,GAAG,CACFE,GAAG,CAAE;AACJ,KAAEC,iBAAiB,CAAEM,WAAF,CAAjB,CAAiCJ,KAAnC,GAA4CJ,KAAK,CAChDU,WADgD,aAChDA,WADgD,cAChDA,WADgD,GACjCD,MADiC,CAD7C;AAIJ,KAAEP,iBAAiB,CAAEM,WAAF,CAAjB,CAAiCH,GAAnC,GAA0CL,KAAK,CAC9CW,SAD8C,aAC9CA,SAD8C,cAC9CA,SAD8C,GACjCF,MADiC;AAJ3C,GAAF,CAAH,EADE,0/FANiB;AAAA,CAArB;;;;;;;;;;;;AAiBA,MAAMG,aAAa,GAAG,SAED;AAAA,MAFG;AACvB,wBAAoBJ,WAAW,GAAG;AADX,GAEH;AACpB,SAAOA,WAAW,KAAK,UAAhB,UAEJK,SAFH;AAGA,CAND;;AAQA,MAAMC,YAAY,GAAG,SAEA;AAAA,MAFE;AACtB,wBAAoBN,WAAW,GAAG;AADZ,GAEF;AACpB,sBAAOT,GAAG,CAAE;AACX,KAAES,WAAW,KAAK,UAAhB,GAA6B,aAA7B,GAA6C,cAA/C,GACC;AAFU,GAAF,0/FAAV;AAIA,CAPD;;AASA,MAAMO,UAAU,GAAG;AAAA,MAAE;AACpB,wBAAoBP,WAAW,GAAG;AADd,GAAF;AAAA,sBAGlBT,GAAG,CAAE;AACJiB,IAAAA,MAAM,EAAER,WAAW,KAAK,UAAhB,GAA6B,MAA7B,GAAsC,CAD1C;AAEJS,IAAAA,KAAK,EAAET,WAAW,KAAK,UAAhB,GAA6B,CAA7B,GAAiC;AAFpC,GAAF,w/FAHe;AAAA,CAAnB;;AAQA,OAAO,MAAMU,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,yBAIpBN,aAJoB,OAKpBE,YALoB,OAMpBC,UANoB,OAOpBR,YAPoB,67FAAjB","sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { space } from '../ui/utils/space';\nimport { rtl } from '../utils';\nimport type { DividerProps } from './types';\n\nconst MARGIN_DIRECTIONS: Record<\n\tNonNullable< DividerProps[ 'orientation' ] >,\n\tRecord< 'start' | 'end', string >\n> = {\n\tvertical: {\n\t\tstart: 'marginLeft',\n\t\tend: 'marginRight',\n\t},\n\thorizontal: {\n\t\tstart: 'marginTop',\n\t\tend: 'marginBottom',\n\t},\n};\n\n// Renders the correct margins given the Divider's `orientation` and the writing direction.\n// When both the generic `margin` and the specific `marginStart|marginEnd` props are defined,\n// the latter will take priority.\nconst renderMargin = ( {\n\t'aria-orientation': orientation = 'horizontal',\n\tmargin,\n\tmarginStart,\n\tmarginEnd,\n}: DividerProps ) =>\n\tcss(\n\t\trtl( {\n\t\t\t[ MARGIN_DIRECTIONS[ orientation ].start ]: space(\n\t\t\t\tmarginStart ?? margin\n\t\t\t),\n\t\t\t[ MARGIN_DIRECTIONS[ orientation ].end ]: space(\n\t\t\t\tmarginEnd ?? margin\n\t\t\t),\n\t\t} )()\n\t);\n\nconst renderDisplay = ( {\n\t'aria-orientation': orientation = 'horizontal',\n}: DividerProps ) => {\n\treturn orientation === 'vertical'\n\t\t? css( { display: 'inline' } )\n\t\t: undefined;\n};\n\nconst renderBorder = ( {\n\t'aria-orientation': orientation = 'horizontal',\n}: DividerProps ) => {\n\treturn css( {\n\t\t[ orientation === 'vertical' ? 'borderRight' : 'borderBottom' ]:\n\t\t\t'1px solid currentColor',\n\t} );\n};\n\nconst renderSize = ( {\n\t'aria-orientation': orientation = 'horizontal',\n}: DividerProps ) =>\n\tcss( {\n\t\theight: orientation === 'vertical' ? 'auto' : 0,\n\t\twidth: orientation === 'vertical' ? 0 : 'auto',\n\t} );\n\nexport const DividerView = styled.hr< DividerProps >`\n\tborder: 0;\n\tmargin: 0;\n\n\t${ renderDisplay }\n\t${ renderBorder }\n\t${ renderSize }\n\t${ renderMargin }\n`;\n"]}