{"version":3,"sources":["@wordpress/components/src/ui/control-label/hook.js"],"names":["useContextSystem","useFormGroupContextId","useText","styles","useCx","useControlLabel","props","htmlFor","htmlForProp","isBlock","size","truncate","otherProps","className","textProps","cx","classes","ControlLabel","block","inline"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,eAAtC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAkC;AACxC,QAAM;AACLC,IAAAA,OAAO,EAAEC,WADJ;AAELC,IAAAA,OAAO,GAAG,KAFL;AAGLC,IAAAA,IAAI,GAAG,QAHF;AAILC,IAAAA,QAAQ,GAAG,IAJN;AAKL,OAAGC;AALE,MAMFZ,gBAAgB,CAAEM,KAAF,EAAS,cAAT,CANpB;AAQA,QAAM;AAAEO,IAAAA,SAAF;AAAa,OAAGC;AAAhB,MAA8BZ,OAAO,CAAE,EAC5C,GAAGU,UADyC;AAE5CH,IAAAA,OAF4C;AAG5CE,IAAAA;AAH4C,GAAF,CAA3C;AAMA,QAAMI,EAAE,GAAGX,KAAK,EAAhB;AAEA,QAAMG,OAAO,GAAGN,qBAAqB,CAAEO,WAAF,CAArC;AACA,QAAMQ,OAAO,GAAGD,EAAE,CACjBZ,MAAM,CAACc,YADU,EAEjBd,MAAM;AAAE;AAA8CO,EAAAA,IAAhD,CAFW,EAGjBG,SAHiB,EAIjBJ,OAAO,GAAGN,MAAM,CAACe,KAAV,GAAkBf,MAAM,CAACgB,MAJf,CAAlB;AAOA,SAAO,EACN,GAAGL,SADG;AAEND,IAAAA,SAAS,EAAEG,OAFL;AAGNT,IAAAA;AAHM,GAAP;AAKA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { useContextSystem } from '../context';\nimport { useFormGroupContextId } from '../form-group';\nimport { useText } from '../../text';\nimport * as styles from './styles';\nimport { useCx } from '../../utils/hooks/use-cx';\n\n/**\n * @param {import('../context').WordPressComponentProps<import('./types').Props, 'label', false>} props\n */\nexport function useControlLabel( props ) {\n\tconst {\n\t\thtmlFor: htmlForProp,\n\t\tisBlock = false,\n\t\tsize = 'medium',\n\t\ttruncate = true,\n\t\t...otherProps\n\t} = useContextSystem( props, 'ControlLabel' );\n\n\tconst { className, ...textProps } = useText( {\n\t\t...otherProps,\n\t\tisBlock,\n\t\ttruncate,\n\t} );\n\n\tconst cx = useCx();\n\n\tconst htmlFor = useFormGroupContextId( htmlForProp );\n\tconst classes = cx(\n\t\tstyles.ControlLabel,\n\t\tstyles[ /** @type {'small' | 'medium' | 'large'} */ ( size ) ],\n\t\tclassName,\n\t\tisBlock ? styles.block : styles.inline\n\t);\n\n\treturn {\n\t\t...textProps,\n\t\tclassName: classes,\n\t\thtmlFor,\n\t};\n}\n"]}