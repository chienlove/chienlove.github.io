{"version":3,"sources":["@wordpress/components/src/focal-point-picker/tooltip/index.native.js"],"names":["Animated","Easing","PanResponder","Text","View","createContext","useEffect","useRef","useState","useContext","styles","TooltipContext","Tooltip","children","onPress","style","visible","panResponder","create","onStartShouldSetPanResponderCapture","current","panHandlers","Label","align","text","xOffset","yOffset","animationValue","Value","dimensions","setDimensions","Error","startAnimation","timing","toValue","duration","useNativeDriver","delay","easing","out","quad","start","tooltipTransforms","translateX","width","translateY","height","tooltipStyles","tooltip","shadowColor","tooltipShadow","color","shadowOffset","shadowOpacity","shadowRadius","elevation","transform","tooltipLeftAlign","arrowStyles","arrow","arrowLeftAlign","opacity","interpolate","inputRange","outputRange","nativeEvent","layout","defaultProps"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Animated, Easing, PanResponder, Text, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tuseContext,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nconst TooltipContext = createContext();\n\nfunction Tooltip( { children, onPress, style, visible } ) {\n\tconst panResponder = useRef(\n\t\tPanResponder.create( {\n\t\t\t/**\n\t\t\t * To allow dimissing the tooltip on press while also avoiding blocking\n\t\t\t * interactivity within the child context, we place this `onPress` side\n\t\t\t * effect within the `onStartShouldSetPanResponderCapture` callback.\n\t\t\t *\n\t\t\t * This is a bit unorthodox, but may be the simplest approach to achieving\n\t\t\t * this outcome. This is effectively a gesture responder that never\n\t\t\t * becomes the controlling responder. https://bit.ly/2J3ugKF\n\t\t\t */\n\t\t\tonStartShouldSetPanResponderCapture: () => {\n\t\t\t\tif ( onPress ) {\n\t\t\t\t\tonPress();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t} )\n\t).current;\n\n\treturn (\n\t\t<TooltipContext.Provider value={ visible }>\n\t\t\t<View\n\t\t\t\t{ ...( visible ? panResponder.panHandlers : {} ) }\n\t\t\t\tstyle={ style }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</View>\n\t\t</TooltipContext.Provider>\n\t);\n}\n\nfunction Label( { align, text, xOffset, yOffset } ) {\n\tconst animationValue = useRef( new Animated.Value( 0 ) ).current;\n\tconst [ dimensions, setDimensions ] = useState( null );\n\tconst visible = useContext( TooltipContext );\n\n\tif ( typeof visible === 'undefined' ) {\n\t\tthrow new Error(\n\t\t\t'Tooltip.Label cannot be rendered outside of the Tooltip component'\n\t\t);\n\t}\n\n\tuseEffect( () => {\n\t\tconst startAnimation = () => {\n\t\t\tAnimated.timing( animationValue, {\n\t\t\t\ttoValue: visible ? 1 : 0,\n\t\t\t\tduration: visible ? 300 : 150,\n\t\t\t\tuseNativeDriver: true,\n\t\t\t\tdelay: visible ? 500 : 0,\n\t\t\t\teasing: Easing.out( Easing.quad ),\n\t\t\t} ).start();\n\t\t};\n\t\tstartAnimation();\n\t}, [ animationValue, visible ] );\n\n\t// Transforms rely upon onLayout to enable custom offsets additions.\n\tlet tooltipTransforms;\n\tif ( dimensions ) {\n\t\ttooltipTransforms = [\n\t\t\t{\n\t\t\t\ttranslateX:\n\t\t\t\t\t( align === 'center' ? -dimensions.width / 2 : 0 ) +\n\t\t\t\t\txOffset,\n\t\t\t},\n\t\t\t{ translateY: -dimensions.height + yOffset },\n\t\t];\n\t}\n\n\tconst tooltipStyles = [\n\t\tstyles.tooltip,\n\t\t{\n\t\t\tshadowColor: styles.tooltipShadow?.color,\n\t\t\tshadowOffset: {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 2,\n\t\t\t},\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 2,\n\t\t\televation: 2,\n\t\t\ttransform: tooltipTransforms,\n\t\t},\n\t\talign === 'left' && styles.tooltipLeftAlign,\n\t];\n\tconst arrowStyles = [\n\t\tstyles.arrow,\n\t\talign === 'left' && styles.arrowLeftAlign,\n\t];\n\n\treturn (\n\t\t<Animated.View\n\t\t\tstyle={ {\n\t\t\t\topacity: animationValue,\n\t\t\t\ttransform: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttranslateY: animationValue.interpolate( {\n\t\t\t\t\t\t\tinputRange: [ 0, 1 ],\n\t\t\t\t\t\t\toutputRange: [ visible ? 4 : -8, -8 ],\n\t\t\t\t\t\t} ),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t} }\n\t\t>\n\t\t\t<View\n\t\t\t\tonLayout={ ( { nativeEvent } ) => {\n\t\t\t\t\tconst { height, width } = nativeEvent.layout;\n\t\t\t\t\tsetDimensions( { height, width } );\n\t\t\t\t} }\n\t\t\t\tstyle={ tooltipStyles }\n\t\t\t>\n\t\t\t\t<Text style={ styles.text }>{ text }</Text>\n\t\t\t\t<View style={ arrowStyles } />\n\t\t\t</View>\n\t\t</Animated.View>\n\t);\n}\n\nLabel.defaultProps = {\n\talign: 'center',\n\txOffset: 0,\n\tyOffset: 0,\n};\n\nTooltip.Label = Label;\n\nexport default Tooltip;\n"]}