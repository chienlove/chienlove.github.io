{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot.js"],"names":["useRef","useLayoutEffect","useContext","forwardRef","useMergeRefs","SlotFillContext","Slot","forwardedRef","name","fillProps","as","Component","props","registerSlot","unregisterSlot","registry","ref","updateSlot"],"mappings":";;AAAA;;AACA;AACA;AACA;AACA,SACCA,MADD,EAECC,eAFD,EAGCC,UAHD,EAICC,UAJD,QAKO,oBALP;AAMA,SAASC,YAAT,QAA6B,oBAA7B;AAEA;AACA;AACA;;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,SAASC,IAAT,OAECC,YAFD,EAGE;AAAA,MAFD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAS,GAAG,EAApB;AAAwBC,IAAAA,EAAE,EAAEC,SAAS,GAAG,KAAxC;AAA+C,OAAGC;AAAlD,GAEC;AACD,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,cAAhB;AAAgC,OAAGC;AAAnC,MACLb,UAAU,CAAEG,eAAF,CADX;AAEA,QAAMW,GAAG,GAAGhB,MAAM,EAAlB;AAEAC,EAAAA,eAAe,CAAE,MAAM;AACtBY,IAAAA,YAAY,CAAEL,IAAF,EAAQQ,GAAR,EAAaP,SAAb,CAAZ;AACA,WAAO,MAAM;AACZK,MAAAA,cAAc,CAAEN,IAAF,EAAQQ,GAAR,CAAd;AACA,KAFD,CAFsB,CAKtB;AACA;AACA;AACA;AACA;AACA,GAVc,EAUZ,CAAEH,YAAF,EAAgBC,cAAhB,EAAgCN,IAAhC,CAVY,CAAf,CALC,CAgBD;AACA;;AACAP,EAAAA,eAAe,CAAE,MAAM;AACtBc,IAAAA,QAAQ,CAACE,UAAT,CAAqBT,IAArB,EAA2BC,SAA3B;AACA,GAFc,CAAf;AAIA,SACC,cAAC,SAAD;AAAW,IAAA,GAAG,EAAGL,YAAY,CAAE,CAAEG,YAAF,EAAgBS,GAAhB,CAAF;AAA7B,KAA8DJ,KAA9D,EADD;AAGA;;AAED,eAAeT,UAAU,CAAEG,IAAF,CAAzB","sourcesContent":["// @ts-nocheck\n/**\n * WordPress dependencies\n */\nimport {\n\tuseRef,\n\tuseLayoutEffect,\n\tuseContext,\n\tforwardRef,\n} from '@wordpress/element';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction Slot(\n\t{ name, fillProps = {}, as: Component = 'div', ...props },\n\tforwardedRef\n) {\n\tconst { registerSlot, unregisterSlot, ...registry } =\n\t\tuseContext( SlotFillContext );\n\tconst ref = useRef();\n\n\tuseLayoutEffect( () => {\n\t\tregisterSlot( name, ref, fillProps );\n\t\treturn () => {\n\t\t\tunregisterSlot( name, ref );\n\t\t};\n\t\t// Ignore reason: We don't want to unregister and register the slot whenever\n\t\t// `fillProps` change, which would cause the fill to be re-mounted. Instead,\n\t\t// we can just update the slot (see hook below).\n\t\t// For more context, see https://github.com/WordPress/gutenberg/pull/44403#discussion_r994415973\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ registerSlot, unregisterSlot, name ] );\n\t// fillProps may be an update that interacts with the layout, so we\n\t// useLayoutEffect.\n\tuseLayoutEffect( () => {\n\t\tregistry.updateSlot( name, fillProps );\n\t} );\n\n\treturn (\n\t\t<Component ref={ useMergeRefs( [ forwardedRef, ref ] ) } { ...props } />\n\t);\n}\n\nexport default forwardRef( Slot );\n"]}