{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot-fill-provider.js"],"names":["ref","valRef","proxyMap","useMemo","useCallback","useRef","isShallowEqual","SlotFillContext","useSlotRegistry","slots","fills","registerSlot","name","fillProps","slot","current","get","set","unregisterSlot","delete","updateSlot","slotFills","map","fill","rerender","registerFill","unregisterFill","filter","fillRef","registry","SlotFillProvider","children"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/**\n * External dependencies\n */\nimport { ref as valRef } from 'valtio';\nimport { proxyMap } from 'valtio/utils';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useRef } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction useSlotRegistry() {\n\tconst slots = useRef( proxyMap() );\n\tconst fills = useRef( proxyMap() );\n\n\tconst registerSlot = useCallback( ( name, ref, fillProps ) => {\n\t\tconst slot = slots.current.get( name ) || {};\n\t\tslots.current.set(\n\t\t\tname,\n\t\t\tvalRef( {\n\t\t\t\t...slot,\n\t\t\t\tref: ref || slot.ref,\n\t\t\t\tfillProps: fillProps || slot.fillProps || {},\n\t\t\t} )\n\t\t);\n\t}, [] );\n\n\tconst unregisterSlot = useCallback( ( name, ref ) => {\n\t\t// Make sure we're not unregistering a slot registered by another element\n\t\t// See https://github.com/WordPress/gutenberg/pull/19242#issuecomment-590295412\n\t\tif ( slots.current.get( name )?.ref === ref ) {\n\t\t\tslots.current.delete( name );\n\t\t}\n\t}, [] );\n\n\tconst updateSlot = useCallback( ( name, fillProps ) => {\n\t\tconst slot = slots.current.get( name );\n\t\tif ( ! slot ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isShallowEqual( slot.fillProps, fillProps ) ) {\n\t\t\tslot.fillProps = fillProps;\n\t\t\tconst slotFills = fills.current.get( name );\n\t\t\tif ( slotFills ) {\n\t\t\t\t// Force update fills.\n\t\t\t\tslotFills.map( ( fill ) => fill.current.rerender() );\n\t\t\t}\n\t\t}\n\t}, [] );\n\n\tconst registerFill = useCallback( ( name, ref ) => {\n\t\tfills.current.set(\n\t\t\tname,\n\t\t\tvalRef( [ ...( fills.current.get( name ) || [] ), ref ] )\n\t\t);\n\t}, [] );\n\n\tconst unregisterFill = useCallback( ( name, ref ) => {\n\t\tif ( fills.current.get( name ) ) {\n\t\t\tfills.current.set(\n\t\t\t\tname,\n\t\t\t\tvalRef(\n\t\t\t\t\tfills.current\n\t\t\t\t\t\t.get( name )\n\t\t\t\t\t\t.filter( ( fillRef ) => fillRef !== ref )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}, [] );\n\n\t// Memoizing the return value so it can be directly passed to Provider value\n\tconst registry = useMemo(\n\t\t() => ( {\n\t\t\tslots: slots.current,\n\t\t\tfills: fills.current,\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t} ),\n\t\t[\n\t\t\tregisterSlot,\n\t\t\tupdateSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t]\n\t);\n\n\treturn registry;\n}\n\nexport default function SlotFillProvider( { children } ) {\n\tconst registry = useSlotRegistry();\n\treturn (\n\t\t<SlotFillContext.Provider value={ registry }>\n\t\t\t{ children }\n\t\t</SlotFillContext.Provider>\n\t);\n}\n"]}