{"version":3,"sources":["@wordpress/components/src/number-control/index.tsx"],"names":["classNames","useRef","forwardRef","isRTL","__","plus","plusIcon","reset","resetIcon","useMergeRefs","deprecated","Input","SpinButton","inputControlActionTypes","add","subtract","roundClamp","ensureNumber","isValueEmpty","HStack","Spacer","noop","UnforwardedNumberControl","forwardedRef","__unstableStateReducer","stateReducerProp","className","dragDirection","hideHTMLArrows","spinControls","isDragEnabled","isShiftStepEnabled","label","max","Infinity","min","required","shiftStep","step","type","typeProp","value","valueProp","size","suffix","onChange","props","alternative","since","version","inputRef","mergedRef","isStepAny","baseStep","baseValue","constrainValue","stepOverride","Math","autoComplete","undefined","classes","spinValue","direction","event","preventDefault","shift","shiftKey","delta","nextValue","numberControlStateReducer","state","action","nextState","payload","currentValue","PRESS_UP","PRESS_DOWN","DRAG","x","y","enableShift","modifier","directionModifier","ceil","abs","sign","distance","PRESS_ENTER","COMMIT","applyEmptyValue","buildSpinButtonClickHandler","String","target","current","baseState","NumberControl"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classNames from 'classnames';\nimport type { ForwardedRef, KeyboardEvent, MouseEvent } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, forwardRef } from '@wordpress/element';\nimport { isRTL, __ } from '@wordpress/i18n';\nimport { plus as plusIcon, reset as resetIcon } from '@wordpress/icons';\nimport { useMergeRefs } from '@wordpress/compose';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { Input, SpinButton } from './styles/number-control-styles';\nimport * as inputControlActionTypes from '../input-control/reducer/actions';\nimport { add, subtract, roundClamp } from '../utils/math';\nimport { ensureNumber, isValueEmpty } from '../utils/values';\nimport type { WordPressComponentProps } from '../ui/context/wordpress-component';\nimport type { NumberControlProps } from './types';\nimport { HStack } from '../h-stack';\nimport { Spacer } from '../spacer';\n\nconst noop = () => {};\n\nfunction UnforwardedNumberControl(\n\t{\n\t\t__unstableStateReducer: stateReducerProp,\n\t\tclassName,\n\t\tdragDirection = 'n',\n\t\thideHTMLArrows = false,\n\t\tspinControls = 'native',\n\t\tisDragEnabled = true,\n\t\tisShiftStepEnabled = true,\n\t\tlabel,\n\t\tmax = Infinity,\n\t\tmin = -Infinity,\n\t\trequired = false,\n\t\tshiftStep = 10,\n\t\tstep = 1,\n\t\ttype: typeProp = 'number',\n\t\tvalue: valueProp,\n\t\tsize = 'default',\n\t\tsuffix,\n\t\tonChange = noop,\n\t\t...props\n\t}: WordPressComponentProps< NumberControlProps, 'input', false >,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tif ( hideHTMLArrows ) {\n\t\tdeprecated( 'wp.components.NumberControl hideHTMLArrows prop ', {\n\t\t\talternative: 'spinControls=\"none\"',\n\t\t\tsince: '6.2',\n\t\t\tversion: '6.3',\n\t\t} );\n\t\tspinControls = 'none';\n\t}\n\n\tconst inputRef = useRef< HTMLInputElement >();\n\tconst mergedRef = useMergeRefs( [ inputRef, forwardedRef ] );\n\n\tconst isStepAny = step === 'any';\n\tconst baseStep = isStepAny ? 1 : ensureNumber( step );\n\tconst baseValue = roundClamp( 0, min, max, baseStep );\n\tconst constrainValue = (\n\t\tvalue: number | string,\n\t\tstepOverride?: number\n\t) => {\n\t\t// When step is \"any\" clamp the value, otherwise round and clamp it.\n\t\treturn isStepAny\n\t\t\t? Math.min( max, Math.max( min, ensureNumber( value ) ) )\n\t\t\t: roundClamp( value, min, max, stepOverride ?? baseStep );\n\t};\n\n\tconst autoComplete = typeProp === 'number' ? 'off' : undefined;\n\tconst classes = classNames( 'components-number-control', className );\n\n\tconst spinValue = (\n\t\tvalue: string | number | undefined,\n\t\tdirection: 'up' | 'down',\n\t\tevent: KeyboardEvent | MouseEvent | undefined\n\t) => {\n\t\tevent?.preventDefault();\n\t\tconst shift = event?.shiftKey && isShiftStepEnabled;\n\t\tconst delta = shift ? ensureNumber( shiftStep ) * baseStep : baseStep;\n\t\tlet nextValue = isValueEmpty( value ) ? baseValue : value;\n\t\tif ( direction === 'up' ) {\n\t\t\tnextValue = add( nextValue, delta );\n\t\t} else if ( direction === 'down' ) {\n\t\t\tnextValue = subtract( nextValue, delta );\n\t\t}\n\t\treturn constrainValue( nextValue, shift ? delta : undefined );\n\t};\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @return The updated state to apply to InputControl\n\t */\n\tconst numberControlStateReducer: NumberControlProps[ '__unstableStateReducer' ] =\n\t\t( state, action ) => {\n\t\t\tconst nextState = { ...state };\n\n\t\t\tconst { type, payload } = action;\n\t\t\tconst event = payload.event;\n\t\t\tconst currentValue = nextState.value;\n\n\t\t\t/**\n\t\t\t * Handles custom UP and DOWN Keyboard events\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_UP ||\n\t\t\t\ttype === inputControlActionTypes.PRESS_DOWN\n\t\t\t) {\n\t\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\t\tnextState.value = spinValue(\n\t\t\t\t\tcurrentValue,\n\t\t\t\t\ttype === inputControlActionTypes.PRESS_UP ? 'up' : 'down',\n\t\t\t\t\tevent as KeyboardEvent | undefined\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles drag to update events\n\t\t\t */\n\t\t\tif ( type === inputControlActionTypes.DRAG && isDragEnabled ) {\n\t\t\t\tconst [ x, y ] = payload.delta;\n\t\t\t\tconst enableShift = payload.shiftKey && isShiftStepEnabled;\n\t\t\t\tconst modifier = enableShift\n\t\t\t\t\t? ensureNumber( shiftStep ) * baseStep\n\t\t\t\t\t: baseStep;\n\n\t\t\t\tlet directionModifier;\n\t\t\t\tlet delta;\n\n\t\t\t\tswitch ( dragDirection ) {\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = -1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? -1 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'w':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? 1 : -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( delta !== 0 ) {\n\t\t\t\t\tdelta = Math.ceil( Math.abs( delta ) ) * Math.sign( delta );\n\t\t\t\t\tconst distance = delta * modifier * directionModifier;\n\n\t\t\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\t\t\tnextState.value = constrainValue(\n\t\t\t\t\t\t// @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t\tadd( currentValue, distance ),\n\t\t\t\t\t\tenableShift ? modifier : undefined\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles commit (ENTER key press or blur)\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_ENTER ||\n\t\t\t\ttype === inputControlActionTypes.COMMIT\n\t\t\t) {\n\t\t\t\tconst applyEmptyValue =\n\t\t\t\t\trequired === false && currentValue === '';\n\n\t\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\t\tnextState.value = applyEmptyValue\n\t\t\t\t\t? currentValue\n\t\t\t\t\t: // @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t  constrainValue( currentValue );\n\t\t\t}\n\n\t\t\treturn nextState;\n\t\t};\n\n\tconst buildSpinButtonClickHandler =\n\t\t( direction: 'up' | 'down' ) =>\n\t\t( event: MouseEvent< HTMLButtonElement > ) =>\n\t\t\tonChange( String( spinValue( valueProp, direction, event ) ), {\n\t\t\t\t// Set event.target to the <input> so that consumers can use\n\t\t\t\t// e.g. event.target.validity.\n\t\t\t\tevent: {\n\t\t\t\t\t...event,\n\t\t\t\t\ttarget: inputRef.current!,\n\t\t\t\t},\n\t\t\t} );\n\n\treturn (\n\t\t<Input\n\t\t\tautoComplete={ autoComplete }\n\t\t\tinputMode=\"numeric\"\n\t\t\t{ ...props }\n\t\t\tclassName={ classes }\n\t\t\tdragDirection={ dragDirection }\n\t\t\thideHTMLArrows={ spinControls !== 'native' }\n\t\t\tisDragEnabled={ isDragEnabled }\n\t\t\tlabel={ label }\n\t\t\tmax={ max }\n\t\t\tmin={ min }\n\t\t\tref={ mergedRef }\n\t\t\trequired={ required }\n\t\t\tstep={ step }\n\t\t\ttype={ typeProp }\n\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\tvalue={ valueProp }\n\t\t\t__unstableStateReducer={ ( state, action ) => {\n\t\t\t\tconst baseState = numberControlStateReducer( state, action );\n\t\t\t\treturn stateReducerProp?.( baseState, action ) ?? baseState;\n\t\t\t} }\n\t\t\tsize={ size }\n\t\t\tsuffix={\n\t\t\t\tspinControls === 'custom' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ suffix }\n\t\t\t\t\t\t<Spacer marginBottom={ 0 } marginRight={ 2 }>\n\t\t\t\t\t\t\t<HStack spacing={ 1 }>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\ticon={ plusIcon }\n\t\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t\taria-label={ __( 'Increment' ) }\n\t\t\t\t\t\t\t\t\ttabIndex={ -1 }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'up'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\ticon={ resetIcon }\n\t\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t\taria-label={ __( 'Decrement' ) }\n\t\t\t\t\t\t\t\t\ttabIndex={ -1 }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'down'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</Spacer>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\tsuffix\n\t\t\t\t)\n\t\t\t}\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\nexport const NumberControl = forwardRef( UnforwardedNumberControl );\n\nexport default NumberControl;\n"]}