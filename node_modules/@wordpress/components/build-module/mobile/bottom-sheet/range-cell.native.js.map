{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/range-cell.native.js"],"names":["Platform","AccessibilityInfo","View","Slider","__","sprintf","Component","withPreferredColorScheme","Cell","styles","RangeTextInput","toFixed","isIOS","OS","BottomSheetRangeCell","constructor","props","onSliderChange","bind","onCompleteSliderChange","onTextInputChange","a11yIncrementValue","a11yDecrementValue","a11yUpdateValue","value","defaultValue","minimumValue","initialValue","Number","state","inputValue","sliderValue","componentWillUnmount","clearTimeout","timeoutAnnounceValue","decimalNum","onChange","setState","nextValue","onComplete","step","maximumValue","newValue","undefined","announceValue","label","unitLabel","setTimeout","announceForAccessibility","render","disabled","preferredColorScheme","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","preview","cellContainerStyle","shouldDisplayTextInput","settingLabel","openUnitPicker","children","cellProps","getAccessibilityHint","getAccessibilityLabel","containerStyle","container","containerIOS","containerAndroid","name","event","nativeEvent","actionName","cellContainerStyles","valueStyle","slider","sliderRef","sliderIOS","sliderAndroid"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Platform, AccessibilityInfo, View } from 'react-native';\nimport Slider from '@react-native-community/slider';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport styles from './range-cell.scss';\nimport RangeTextInput from './range-text-input';\nimport { toFixed } from '../utils';\n\nconst isIOS = Platform.OS === 'ios';\n\nclass BottomSheetRangeCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onSliderChange = this.onSliderChange.bind( this );\n\t\tthis.onCompleteSliderChange = this.onCompleteSliderChange.bind( this );\n\t\tthis.onTextInputChange = this.onTextInputChange.bind( this );\n\t\tthis.a11yIncrementValue = this.a11yIncrementValue.bind( this );\n\t\tthis.a11yDecrementValue = this.a11yDecrementValue.bind( this );\n\t\tthis.a11yUpdateValue = this.a11yUpdateValue.bind( this );\n\n\t\tconst { value, defaultValue, minimumValue } = props;\n\t\tconst initialValue = Number( value || defaultValue || minimumValue );\n\n\t\tthis.state = {\n\t\t\tinputValue: initialValue,\n\t\t\tsliderValue: initialValue,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.timeoutAnnounceValue );\n\t}\n\n\tonSliderChange( initialValue ) {\n\t\tconst { decimalNum, onChange } = this.props;\n\t\tinitialValue = toFixed( initialValue, decimalNum );\n\t\tthis.setState( { inputValue: initialValue } );\n\t\tonChange( initialValue );\n\t}\n\n\tonTextInputChange( nextValue ) {\n\t\tconst { onChange, onComplete } = this.props;\n\t\tthis.setState( {\n\t\t\tsliderValue: nextValue,\n\t\t} );\n\t\tonChange( nextValue );\n\t\tif ( onComplete ) {\n\t\t\tonComplete( nextValue );\n\t\t}\n\t}\n\n\tonCompleteSliderChange( nextValue ) {\n\t\tconst { decimalNum, onComplete } = this.props;\n\t\tnextValue = toFixed( nextValue, decimalNum );\n\t\tif ( onComplete ) {\n\t\t\tonComplete( nextValue );\n\t\t}\n\t}\n\n\t/*\n\t * Only used with screenreaders like VoiceOver and TalkBack. Increments the\n\t * value of this setting programmatically.\n\t */\n\ta11yIncrementValue() {\n\t\tconst { step = 5, maximumValue, decimalNum } = this.props;\n\t\tconst { inputValue } = this.state;\n\n\t\tconst newValue = toFixed( inputValue + step, decimalNum );\n\n\t\tif ( newValue <= maximumValue || maximumValue === undefined ) {\n\t\t\tthis.a11yUpdateValue( newValue );\n\t\t}\n\t}\n\n\t/*\n\t * Only used with screenreaders like VoiceOver and TalkBack. Decrements the\n\t * value of this setting programmatically.\n\t */\n\ta11yDecrementValue() {\n\t\tconst { step = 5, minimumValue, decimalNum } = this.props;\n\t\tconst { sliderValue } = this.state;\n\n\t\tconst newValue = toFixed( sliderValue - step, decimalNum );\n\n\t\tif ( newValue >= minimumValue ) {\n\t\t\tthis.a11yUpdateValue( newValue );\n\t\t}\n\t}\n\n\ta11yUpdateValue( newValue ) {\n\t\tconst { onChange, onComplete } = this.props;\n\t\tthis.setState( {\n\t\t\tsliderValue: newValue,\n\t\t\tinputValue: newValue,\n\t\t} );\n\t\tonChange( newValue );\n\t\tif ( onComplete ) {\n\t\t\tonComplete( newValue );\n\t\t}\n\t\tthis.announceValue( newValue );\n\t}\n\n\t/*\n\t * Only used with screenreaders like VoiceOver and TalkBack.\n\t */\n\tannounceValue( value ) {\n\t\tconst { label, unitLabel = '' } = this.props;\n\n\t\tif ( isIOS ) {\n\t\t\t// On Android it triggers the accessibilityLabel with the value change, but\n\t\t\t// on iOS we need to do this manually.\n\t\t\tclearTimeout( this.timeoutAnnounceValue );\n\t\t\tthis.timeoutAnnounceValue = setTimeout( () => {\n\t\t\t\tAccessibilityInfo.announceForAccessibility(\n\t\t\t\t\t`${ value } ${ unitLabel },  ${ label }`\n\t\t\t\t);\n\t\t\t}, 300 );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tminimumValue = 0,\n\t\t\tmaximumValue = 10,\n\t\t\tdisabled,\n\t\t\tstep = 1,\n\t\t\tpreferredColorScheme,\n\t\t\tminimumTrackTintColor = preferredColorScheme === 'light'\n\t\t\t\t? '#00669b'\n\t\t\t\t: '#5198d9',\n\t\t\tmaximumTrackTintColor = isIOS ? '#e9eff3' : '#909090',\n\t\t\tthumbTintColor = ! isIOS && '#00669b',\n\t\t\tpreview,\n\t\t\tcellContainerStyle,\n\t\t\tshouldDisplayTextInput = true,\n\t\t\tunitLabel = '',\n\t\t\tsettingLabel = 'Value',\n\t\t\topenUnitPicker,\n\t\t\tchildren,\n\t\t\tdecimalNum,\n\t\t\t...cellProps\n\t\t} = this.props;\n\n\t\tconst { inputValue, sliderValue } = this.state;\n\n\t\tconst getAccessibilityHint = () => {\n\t\t\treturn openUnitPicker ? __( 'double-tap to change unit' ) : '';\n\t\t};\n\n\t\tconst getAccessibilityLabel = () => {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: accessibility text. Inform about current value. %1$s: Control label %2$s: setting label (example: width), %3$s: Current value. %4$s: value measurement unit (example: pixels) */\n\t\t\t\t__( '%1$s. %2$s is %3$s %4$s.' ),\n\t\t\t\tcellProps.label,\n\t\t\t\tsettingLabel,\n\t\t\t\ttoFixed( value, decimalNum ),\n\t\t\t\tunitLabel\n\t\t\t);\n\t\t};\n\n\t\tconst containerStyle = [\n\t\t\tstyles.container,\n\t\t\tisIOS ? styles.containerIOS : styles.containerAndroid,\n\t\t];\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\taccessible={ true }\n\t\t\t\taccessibilityRole=\"adjustable\"\n\t\t\t\taccessibilityActions={ [\n\t\t\t\t\t{ name: 'increment' },\n\t\t\t\t\t{ name: 'decrement' },\n\t\t\t\t\t{ name: 'activate' },\n\t\t\t\t] }\n\t\t\t\tonAccessibilityAction={ ( event ) => {\n\t\t\t\t\tswitch ( event.nativeEvent.actionName ) {\n\t\t\t\t\t\tcase 'increment':\n\t\t\t\t\t\t\tthis.a11yIncrementValue();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'decrement':\n\t\t\t\t\t\t\tthis.a11yDecrementValue();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'activate':\n\t\t\t\t\t\t\tif ( openUnitPicker ) {\n\t\t\t\t\t\t\t\topenUnitPicker();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\taccessibilityLabel={ getAccessibilityLabel() }\n\t\t\t\taccessibilityHint={ getAccessibilityHint() }\n\t\t\t>\n\t\t\t\t<View importantForAccessibility=\"no-hide-descendants\">\n\t\t\t\t\t<Cell\n\t\t\t\t\t\t{ ...cellProps }\n\t\t\t\t\t\tcellContainerStyle={ [\n\t\t\t\t\t\t\tstyles.cellContainerStyles,\n\t\t\t\t\t\t\tcellContainerStyle,\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tcellRowContainerStyle={ containerStyle }\n\t\t\t\t\t\tleftAlign\n\t\t\t\t\t\teditable={ false }\n\t\t\t\t\t\tactiveOpacity={ 1 }\n\t\t\t\t\t\taccessible={ false }\n\t\t\t\t\t\tvalueStyle={ styles.valueStyle }\n\t\t\t\t\t>\n\t\t\t\t\t\t<View style={ containerStyle }>\n\t\t\t\t\t\t\t{ preview }\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\ttestID={ `Slider ${ cellProps.label }` }\n\t\t\t\t\t\t\t\tvalue={ sliderValue }\n\t\t\t\t\t\t\t\tdefaultValue={ defaultValue }\n\t\t\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\t\t\tminimumValue={ minimumValue }\n\t\t\t\t\t\t\t\tmaximumValue={ maximumValue }\n\t\t\t\t\t\t\t\tminimumTrackTintColor={ minimumTrackTintColor }\n\t\t\t\t\t\t\t\tmaximumTrackTintColor={ maximumTrackTintColor }\n\t\t\t\t\t\t\t\tthumbTintColor={ thumbTintColor }\n\t\t\t\t\t\t\t\tonValueChange={ this.onSliderChange }\n\t\t\t\t\t\t\t\tonSlidingComplete={\n\t\t\t\t\t\t\t\t\tthis.onCompleteSliderChange\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tref={ ( slider ) => {\n\t\t\t\t\t\t\t\t\tthis.sliderRef = slider;\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tisIOS\n\t\t\t\t\t\t\t\t\t\t? styles.sliderIOS\n\t\t\t\t\t\t\t\t\t\t: styles.sliderAndroid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ shouldDisplayTextInput && (\n\t\t\t\t\t\t\t\t<RangeTextInput\n\t\t\t\t\t\t\t\t\tlabel={ cellProps.label }\n\t\t\t\t\t\t\t\t\tonChange={ this.onTextInputChange }\n\t\t\t\t\t\t\t\t\tdefaultValue={ `${ inputValue }` }\n\t\t\t\t\t\t\t\t\tvalue={ inputValue }\n\t\t\t\t\t\t\t\t\tmin={ minimumValue }\n\t\t\t\t\t\t\t\t\tmax={ maximumValue }\n\t\t\t\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\t\t\t\tdecimalNum={ decimalNum }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t\t\t</RangeTextInput>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</Cell>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetRangeCell );\n"]}