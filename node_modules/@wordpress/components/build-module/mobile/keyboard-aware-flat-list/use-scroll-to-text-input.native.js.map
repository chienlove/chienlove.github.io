{"version":3,"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/use-scroll-to-text-input.native.js"],"names":["useSafeAreaInsets","useCallback","DEFAULT_FONT_SIZE","useScrollToTextInput","extraScrollHeight","keyboardOffset","scrollEnabled","scrollViewMeasurements","scrollViewRef","scrollViewYOffset","top","bottom","insets","scrollToTextInputOffset","caret","textInputOffset","caretHeight","current","currentScrollViewYOffset","Math","max","value","scrollTo","y","animated","availableScreenSpace","abs","floor","height","maxOffset","isAtTheTop"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,oBAAT,CACdC,iBADc,EAEdC,cAFc,EAGdC,aAHc,EAIdC,sBAJc,EAKdC,aALc,EAMdC,iBANc,EAOb;AACD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBX,iBAAiB,EAAzC;AACA,QAAMY,MAAM,GAAGF,GAAG,GAAGC,MAArB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,QAAME,uBAAuB,GAAGZ,WAAW,CAC1C,CAAEa,KAAF,EAASC,eAAT,KAA8B;AAC7B,UAAM;AAAEC,MAAAA,WAAW,GAAGd;AAAhB,QAAsCY,KAAtC,aAAsCA,KAAtC,cAAsCA,KAAtC,GAA+C,EAArD;;AAEA,QACC,CAAEN,aAAa,CAACS,OAAhB,IACA,CAAEX,aADF,IAEA,CAAEC,sBAAsB,CAACU,OAH1B,EAIE;AACD;AACA;;AACD,UAAMC,wBAAwB,GAAGC,IAAI,CAACC,GAAL,CAChC,CADgC,EAEhCX,iBAAiB,CAACY,KAFc,CAAjC,CAV6B,CAe7B;;AACA,QAAKN,eAAe,GAAGG,wBAAvB,EAAkD;AACjDV,MAAAA,aAAa,CAACS,OAAd,CAAsBK,QAAtB,CAAgC;AAC/BC,QAAAA,CAAC,EAAER,eAD4B;AAE/BS,QAAAA,QAAQ,EAAE;AAFqB,OAAhC;AAIA;AACA;;AAED,UAAMC,oBAAoB,GAAGN,IAAI,CAACO,GAAL,CAC5BP,IAAI,CAACQ,KAAL,CACCpB,sBAAsB,CAACU,OAAvB,CAA+BW,MAA/B,IACGvB,cAAc,GAAGD,iBAAjB,GAAqCY,WADxC,CADD,CAD4B,CAA7B;AAMA,UAAMa,SAAS,GAAGV,IAAI,CAACQ,KAAL,CACjBT,wBAAwB,GAAGO,oBADV,CAAlB;AAIA,UAAMK,UAAU,GACff,eAAe,GAAGR,sBAAsB,CAACU,OAAvB,CAA+BM,CAA/B,GAAmCX,MADtD,CAlC6B,CAqC7B;;AACA,QAAKG,eAAe,GAAGc,SAAlB,IAA+B,CAAEC,UAAtC,EAAmD;AAClDtB,MAAAA,aAAa,CAACS,OAAd,CAAsBK,QAAtB,CAAgC;AAC/BC,QAAAA,CAAC,EAAER,eAAe,GAAGU,oBADU;AAE/BD,QAAAA,QAAQ,EAAE;AAFqB,OAAhC;AAIA;AACD,GA7CyC,EA8C1C,CACCpB,iBADD,EAECQ,MAFD,EAGCP,cAHD,EAICC,aAJD,EAKCC,sBALD,EAMCC,aAND,EAOCC,iBAPD,CA9C0C,CAA3C;AAyDA,SAAO,CAAEI,uBAAF,CAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\n\nconst DEFAULT_FONT_SIZE = 16;\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n/** @typedef {import('react-native-reanimated').SharedValue} SharedValue */\n/**\n * Hook to scroll to the currently focused TextInput\n * depending on where the caret is placed taking into\n * account the Keyboard and the Header.\n *\n * @param {number}      extraScrollHeight      Extra space to not overlap the content.\n * @param {number}      keyboardOffset         Keyboard space offset.\n * @param {boolean}     scrollEnabled          Whether the scroll is enabled or not.\n * @param {RefObject}   scrollViewMeasurements ScrollView Layout measurements.\n * @param {RefObject}   scrollViewRef          ScrollView reference.\n * @param {SharedValue} scrollViewYOffset      Current offset position of the ScrollView.\n * @return {Function[]} Function to scroll to the current TextInput's offset.\n */\nexport default function useScrollToTextInput(\n\textraScrollHeight,\n\tkeyboardOffset,\n\tscrollEnabled,\n\tscrollViewMeasurements,\n\tscrollViewRef,\n\tscrollViewYOffset\n) {\n\tconst { top, bottom } = useSafeAreaInsets();\n\tconst insets = top + bottom;\n\n\t/**\n\t * Function to scroll to the current TextInput's offset.\n\t *\n\t * @param {Object} caret             The caret position data of the currently focused TextInput.\n\t * @param {number} caret.caretHeight The height of the caret.\n\t * @param {number} textInputOffset   The offset calculated with the caret's Y coordinate + the\n\t *                                   TextInput's Y coord or height value.\n\t */\n\tconst scrollToTextInputOffset = useCallback(\n\t\t( caret, textInputOffset ) => {\n\t\t\tconst { caretHeight = DEFAULT_FONT_SIZE } = caret ?? {};\n\n\t\t\tif (\n\t\t\t\t! scrollViewRef.current ||\n\t\t\t\t! scrollEnabled ||\n\t\t\t\t! scrollViewMeasurements.current\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst currentScrollViewYOffset = Math.max(\n\t\t\t\t0,\n\t\t\t\tscrollViewYOffset.value\n\t\t\t);\n\n\t\t\t// Scroll up.\n\t\t\tif ( textInputOffset < currentScrollViewYOffset ) {\n\t\t\t\tscrollViewRef.current.scrollTo( {\n\t\t\t\t\ty: textInputOffset,\n\t\t\t\t\tanimated: true,\n\t\t\t\t} );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst availableScreenSpace = Math.abs(\n\t\t\t\tMath.floor(\n\t\t\t\t\tscrollViewMeasurements.current.height -\n\t\t\t\t\t\t( keyboardOffset + extraScrollHeight + caretHeight )\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst maxOffset = Math.floor(\n\t\t\t\tcurrentScrollViewYOffset + availableScreenSpace\n\t\t\t);\n\n\t\t\tconst isAtTheTop =\n\t\t\t\ttextInputOffset < scrollViewMeasurements.current.y + insets;\n\n\t\t\t// Scroll down.\n\t\t\tif ( textInputOffset > maxOffset && ! isAtTheTop ) {\n\t\t\t\tscrollViewRef.current.scrollTo( {\n\t\t\t\t\ty: textInputOffset - availableScreenSpace,\n\t\t\t\t\tanimated: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\textraScrollHeight,\n\t\t\tinsets,\n\t\t\tkeyboardOffset,\n\t\t\tscrollEnabled,\n\t\t\tscrollViewMeasurements,\n\t\t\tscrollViewRef,\n\t\t\tscrollViewYOffset,\n\t\t]\n\t);\n\n\treturn [ scrollToTextInputOffset ];\n}\n"]}