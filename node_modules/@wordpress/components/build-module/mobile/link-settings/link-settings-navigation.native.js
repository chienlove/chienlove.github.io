import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { memo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import BottomSheet from '../bottom-sheet';
import LinkSettingsScreen from './link-settings-screen';
import LinkPickerScreen from '../link-picker/link-picker-screen';
const linkSettingsScreens = {
  settings: 'LinkSettingsScreen',
  linkPicker: 'linkPicker'
};

function LinkSettingsNavigation(props) {
  if (!props.withBottomSheet) {
    return createElement(LinkSettingsScreen, props);
  }

  return createElement(BottomSheet, {
    isVisible: props.isVisible,
    onClose: props.onClose,
    onDismiss: props.onDismiss,
    testID: props.testID,
    hideHeader: true,
    hasNavigation: true
  }, createElement(BottomSheet.NavigationContainer, {
    animate: true,
    main: true
  }, createElement(BottomSheet.NavigationScreen, {
    name: linkSettingsScreens.settings
  }, createElement(LinkSettingsScreen, _extends({}, props, {
    withBottomSheet: true
  }))), createElement(BottomSheet.NavigationScreen, {
    name: linkSettingsScreens.linkPicker,
    isScrollable: true,
    fullScreen: true
  }, createElement(LinkPickerScreen, {
    returnScreenName: linkSettingsScreens.settings
  }))));
}

export default memo(LinkSettingsNavigation);
//# sourceMappingURL=link-settings-navigation.native.js.map