{"version":3,"sources":["@wordpress/components/src/mobile/utils/use-unit-converter-to-mobile.native.js"],"names":["Dimensions","useContext","useEffect","useState","useMemo","useCallback","GlobalStylesContext","getValueAndUnit","value","unit","regex","splitValue","match","filter","v","valueToConvert","valueUnit","undefined","convertUnitToMobile","containerSize","globalStyles","width","height","fontSize","Number","vw","Math","round","vh","useConvertUnitToMobile","styles","windowSizes","setWindowSizes","get","dimensionsChangeSubscription","addEventListener","onDimensionsChange","remove","window"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseContext,\n\tuseEffect,\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport GlobalStylesContext from '../global-styles-context';\n\nconst getValueAndUnit = ( value, unit ) => {\n\tconst regex = /(\\d+\\.?\\d*)(.*)/;\n\n\tconst splitValue = `${ value }`\n\t\t?.match( regex )\n\t\t?.filter( ( v ) => v !== '' );\n\n\tif ( splitValue ) {\n\t\treturn {\n\t\t\tvalueToConvert: splitValue[ 1 ],\n\t\t\tvalueUnit: unit || splitValue[ 2 ],\n\t\t};\n\t}\n\treturn undefined;\n};\n\nconst convertUnitToMobile = ( containerSize, globalStyles, value, unit ) => {\n\tconst { width, height } = containerSize;\n\tconst { valueToConvert, valueUnit } = getValueAndUnit( value, unit ) || {};\n\tconst { fontSize = 16 } = globalStyles || {};\n\n\tif ( valueToConvert === undefined ) {\n\t\treturn undefined;\n\t}\n\n\tswitch ( valueUnit ) {\n\t\tcase 'rem':\n\t\tcase 'em':\n\t\t\treturn valueToConvert * fontSize;\n\t\tcase '%':\n\t\t\treturn Number( valueToConvert / 100 ) * width;\n\t\tcase 'px':\n\t\t\treturn Number( valueToConvert );\n\t\tcase 'vw':\n\t\t\tconst vw = width / 100;\n\t\t\treturn Math.round( valueToConvert * vw );\n\t\tcase 'vh':\n\t\t\tconst vh = height / 100;\n\t\t\treturn Math.round( valueToConvert * vh );\n\t\tdefault:\n\t\t\treturn Number( valueToConvert / 100 ) * width;\n\t}\n};\n\nconst useConvertUnitToMobile = ( value, unit ) => {\n\tconst { globalStyles: styles } = useContext( GlobalStylesContext );\n\tconst [ windowSizes, setWindowSizes ] = useState(\n\t\tDimensions.get( 'window' )\n\t);\n\n\tuseEffect( () => {\n\t\tconst dimensionsChangeSubscription = Dimensions.addEventListener(\n\t\t\t'change',\n\t\t\tonDimensionsChange\n\t\t);\n\n\t\treturn () => {\n\t\t\tdimensionsChangeSubscription.remove();\n\t\t};\n\t\t// Disable reason: deferring this refactor to the native team.\n\t\t// see https://github.com/WordPress/gutenberg/pull/41166\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [] );\n\n\tconst onDimensionsChange = useCallback( ( { window } ) => {\n\t\tsetWindowSizes( window );\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tconst { valueToConvert, valueUnit } =\n\t\t\tgetValueAndUnit( value, unit ) || {};\n\n\t\treturn convertUnitToMobile(\n\t\t\twindowSizes,\n\t\t\tstyles,\n\t\t\tvalueToConvert,\n\t\t\tvalueUnit\n\t\t);\n\t\t// Disable reason: deferring this refactor to the native team.\n\t\t// see https://github.com/WordPress/gutenberg/pull/41166\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ windowSizes, value, unit ] );\n};\n\nexport { convertUnitToMobile, useConvertUnitToMobile, getValueAndUnit };\n"]}