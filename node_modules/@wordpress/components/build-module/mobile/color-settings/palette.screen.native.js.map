{"version":3,"sources":["@wordpress/components/src/mobile/color-settings/palette.screen.native.js"],"names":["View","Text","TouchableWithoutFeedback","__","useState","useContext","usePreferredColorSchemeStyle","ColorControl","PanelBody","BottomSheetContext","useMobileGlobalStylesColors","useRoute","useNavigation","ColorPalette","ColorIndicator","NavBar","SegmentedControls","colorsUtils","styles","HIT_SLOP","top","bottom","left","right","THEME_PALETTE_NAME","PaletteScreen","route","navigation","shouldEnableBottomSheetScroll","label","onColorChange","onGradientChange","onColorCleared","colorValue","defaultSettings","hideNavigation","params","segments","isGradient","currentValue","setCurrentValue","isGradientColor","selectedSegmentIndex","allAvailableColors","currentSegment","setCurrentSegment","isGradientSegment","currentSegmentColors","colors","gradients","horizontalSeparatorStyle","horizontalSeparator","horizontalSeparatorDark","clearButtonStyle","clearButton","clearButtonDark","selectedColorTextStyle","colorText","colorTextDark","isSolidSegment","isCustomGadientShown","setColor","color","onClear","undefined","onCustomPress","navigate","screens","picker","gradientPicker","getClearButton","clearButtonContainer","getFooter","indexOf","colorIndicator","footer","flex","toUpperCase","selectColorText","goBack","colorPalettes","map","palette","paletteKey","paletteSettings","allColors","enableCustomColor","name"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useContext } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport {\n\tColorControl,\n\tPanelBody,\n\tBottomSheetContext,\n\tuseMobileGlobalStylesColors,\n} from '@wordpress/components';\nimport { useRoute, useNavigation } from '@react-navigation/native';\n\n/**\n * Internal dependencies\n */\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport NavBar from '../bottom-sheet/nav-bar';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\n\nimport styles from './style.scss';\n\nconst HIT_SLOP = { top: 8, bottom: 8, left: 8, right: 8 };\nconst THEME_PALETTE_NAME = 'Theme';\n\nconst PaletteScreen = () => {\n\tconst route = useRoute();\n\tconst navigation = useNavigation();\n\tconst { shouldEnableBottomSheetScroll } = useContext( BottomSheetContext );\n\tconst {\n\t\tlabel,\n\t\tonColorChange,\n\t\tonGradientChange,\n\t\tonColorCleared,\n\t\tcolorValue,\n\t\tdefaultSettings,\n\t\thideNavigation = false,\n\t} = route.params || {};\n\tconst { segments, isGradient } = colorsUtils;\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\tconst allAvailableColors = useMobileGlobalStylesColors();\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\tconst isGradientSegment = currentSegment === colorsUtils.segments[ 1 ];\n\tconst currentSegmentColors = ! isGradientSegment\n\t\t? defaultSettings.colors\n\t\t: defaultSettings.gradients;\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\tconst clearButtonStyle = usePreferredColorSchemeStyle(\n\t\tstyles.clearButton,\n\t\tstyles.clearButtonDark\n\t);\n\tconst selectedColorTextStyle = usePreferredColorSchemeStyle(\n\t\tstyles.colorText,\n\t\tstyles.colorTextDark\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst setColor = ( color ) => {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t}\n\t};\n\n\tfunction onClear() {\n\t\tsetCurrentValue( undefined );\n\n\t\tif ( onColorCleared ) {\n\t\t\tonColorCleared();\n\t\t}\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tnavigation.navigate( colorsUtils.screens.picker, {\n\t\t\t\tcurrentValue,\n\t\t\t\tsetColor,\n\t\t\t} );\n\t\t} else {\n\t\t\tnavigation.navigate( colorsUtils.screens.gradientPicker, {\n\t\t\t\tsetColor,\n\t\t\t\tisGradientColor,\n\t\t\t\tcurrentValue,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction getClearButton() {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={ onClear } hitSlop={ HIT_SLOP }>\n\t\t\t\t<View style={ styles.clearButtonContainer }>\n\t\t\t\t\t<Text style={ clearButtonStyle }>{ __( 'Reset' ) }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taddonRight={ currentValue && getClearButton() }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t{ currentValue ? (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ selectedColorTextStyle }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t\tselectable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ currentValue.toUpperCase() }\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Select a color above' ) }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && getClearButton() }\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\treturn (\n\t\t<View>\n\t\t\t{ ! hideNavigation && (\n\t\t\t\t<NavBar>\n\t\t\t\t\t<NavBar.BackButton onPress={ navigation.goBack } />\n\t\t\t\t\t<NavBar.Heading>{ label } </NavBar.Heading>\n\t\t\t\t</NavBar>\n\t\t\t) }\n\n\t\t\t<View style={ styles.colorPalettes }>\n\t\t\t\t{ currentSegmentColors.map( ( palette, paletteKey ) => {\n\t\t\t\t\tconst paletteSettings = {\n\t\t\t\t\t\tcolors: palette.colors,\n\t\t\t\t\t\tgradients: palette.gradients,\n\t\t\t\t\t\tallColors: allAvailableColors,\n\t\t\t\t\t};\n\t\t\t\t\tconst enableCustomColor =\n\t\t\t\t\t\t! isGradientSegment &&\n\t\t\t\t\t\tpalette.name === THEME_PALETTE_NAME;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tenableCustomColor={ enableCustomColor }\n\t\t\t\t\t\t\tlabel={ palette.name }\n\t\t\t\t\t\t\tkey={ paletteKey }\n\t\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\t\tactiveColor={ currentValue }\n\t\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\t\t\t\tshouldEnableBottomSheetScroll={\n\t\t\t\t\t\t\t\tshouldEnableBottomSheetScroll\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefaultSettings={ paletteSettings }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</View>\n\n\t\t\t{ isCustomGadientShown && (\n\t\t\t\t<>\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\tonPress={ onCustomPress }\n\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t{ getFooter() }\n\t\t</View>\n\t);\n};\n\nexport default PaletteScreen;\n"]}