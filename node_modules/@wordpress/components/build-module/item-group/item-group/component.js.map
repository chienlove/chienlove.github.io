{"version":3,"sources":["@wordpress/components/src/item-group/item-group/component.tsx"],"names":["contextConnect","useItemGroup","ItemGroupContext","useItemGroupContext","View","UnconnectedItemGroup","props","forwardedRef","isBordered","isSeparated","size","sizeProp","otherProps","contextSize","spacedAround","contextValue","ItemGroup"],"mappings":";;;AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA,SAASA,cAAT,QAAwD,kBAAxD;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,YAAtD;AACA,SAASC,IAAT,QAAqB,YAArB;;AAGA,SAASC,oBAAT,CACCC,KADD,EAECC,YAFD,EAGE;AACD,QAAM;AACLC,IAAAA,UADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA,IAAI,EAAEC,QAHD;AAIL,OAAGC;AAJE,MAKFX,YAAY,CAAEK,KAAF,CALhB;AAOA,QAAM;AAAEI,IAAAA,IAAI,EAAEG;AAAR,MAAwBV,mBAAmB,EAAjD;AAEA,QAAMW,YAAY,GAAG,CAAEN,UAAF,IAAgB,CAAEC,WAAvC;AACA,QAAMC,IAAI,GAAGC,QAAQ,IAAIE,WAAzB;AAEA,QAAME,YAAY,GAAG;AACpBD,IAAAA,YADoB;AAEpBJ,IAAAA;AAFoB,GAArB;AAKA,SACC,cAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAGK;AAAnC,KACC,cAAC,IAAD,eAAWH,UAAX;AAAwB,IAAA,GAAG,EAAGL;AAA9B,KADD,CADD;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMS,SAAS,GAAGhB,cAAc,CAAEK,oBAAF,EAAwB,WAAxB,CAAhC;AAEP,eAAeW,SAAf","sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\n\n/**\n * Internal dependencies\n */\nimport { contextConnect, WordPressComponentProps } from '../../ui/context';\nimport { useItemGroup } from './hook';\nimport { ItemGroupContext, useItemGroupContext } from '../context';\nimport { View } from '../../view';\nimport type { ItemGroupProps } from '../types';\n\nfunction UnconnectedItemGroup(\n\tprops: WordPressComponentProps< ItemGroupProps, 'div' >,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tconst {\n\t\tisBordered,\n\t\tisSeparated,\n\t\tsize: sizeProp,\n\t\t...otherProps\n\t} = useItemGroup( props );\n\n\tconst { size: contextSize } = useItemGroupContext();\n\n\tconst spacedAround = ! isBordered && ! isSeparated;\n\tconst size = sizeProp || contextSize;\n\n\tconst contextValue = {\n\t\tspacedAround,\n\t\tsize,\n\t};\n\n\treturn (\n\t\t<ItemGroupContext.Provider value={ contextValue }>\n\t\t\t<View { ...otherProps } ref={ forwardedRef } />\n\t\t</ItemGroupContext.Provider>\n\t);\n}\n\n/**\n * `ItemGroup` displays a list of `Item`s grouped and styled together.\n *\n * @example\n * ```jsx\n * import {\n *   __experimentalItemGroup as ItemGroup,\n *   __experimentalItem as Item,\n * } from '@wordpress/components';\n *\n * function Example() {\n *   return (\n *     <ItemGroup>\n *       <Item>Code</Item>\n *       <Item>is</Item>\n *       <Item>Poetry</Item>\n *     </ItemGroup>\n *   );\n * }\n * ```\n */\nexport const ItemGroup = contextConnect( UnconnectedItemGroup, 'ItemGroup' );\n\nexport default ItemGroup;\n"]}