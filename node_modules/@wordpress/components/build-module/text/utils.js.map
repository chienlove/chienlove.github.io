{"version":3,"sources":["@wordpress/components/src/text/utils.js"],"names":["memoize","findAll","createElement","lowercaseProps","object","mapped","key","toLowerCase","memoizedLowercaseProps","createHighlighterText","activeClassName","activeIndex","activeStyle","autoEscape","caseSensitive","children","findChunks","highlightClassName","highlightStyle","highlightTag","sanitize","searchWords","unhighlightClassName","unhighlightStyle","textToHighlight","chunks","HighlightTag","highlightIndex","highlightClassNames","highlightStyles","textContent","map","chunk","index","text","substr","start","end","highlight","highlightClass","isActive","Object","assign","props","className","style"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport { findAll } from 'highlight-words-core';\n\n/**\n * WordPress dependencies\n */\nimport { createElement } from '@wordpress/element';\n\n/**\n * Source:\n * https://github.com/bvaughn/react-highlight-words/blob/HEAD/src/Highlighter.js\n */\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * @typedef Options\n * @property {string}                                                     [activeClassName='']      Classname for active highlighted areas.\n * @property {number}                                                     [activeIndex=-1]          The index of the active highlighted area.\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [activeStyle]             Styles to apply to the active highlighted area.\n * @property {boolean}                                                    [autoEscape]              Whether to automatically escape text.\n * @property {boolean}                                                    [caseSensitive=false]     Whether to highlight in a case-sensitive manner.\n * @property {string}                                                     children                  Children to highlight.\n * @property {import('highlight-words-core').FindAllArgs['findChunks']}   [findChunks]              Custom `findChunks` function to pass to `highlight-words-core`.\n * @property {string | Record<string, unknown>}                           [highlightClassName='']   Classname to apply to highlighted text or a Record of classnames to apply to given text (which should be the key).\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [highlightStyle={}]       Styles to apply to highlighted text.\n * @property {keyof JSX.IntrinsicElements}                                [highlightTag='mark']     Tag to use for the highlighted text.\n * @property {import('highlight-words-core').FindAllArgs['sanitize']}     [sanitize]                Custom `santize` function to pass to `highlight-words-core`.\n * @property {string[]}                                                   [searchWords=[]]          Words to search for and highlight.\n * @property {string}                                                     [unhighlightClassName=''] Classname to apply to unhighlighted text.\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [unhighlightStyle]        Style to apply to unhighlighted text.\n */\n\n/**\n * Maps props to lowercase names.\n *\n * @template {Record<string, unknown>} T\n * @param {T} object Props to map.\n * @return {{[K in keyof T as Lowercase<string & K>]: T[K]}} The mapped props.\n */\n/* eslint-enable jsdoc/valid-types */\nconst lowercaseProps = ( object ) => {\n\t/** @type {any} */\n\tconst mapped = {};\n\tfor ( const key in object ) {\n\t\tmapped[ key.toLowerCase() ] = object[ key ];\n\t}\n\treturn mapped;\n};\n\nconst memoizedLowercaseProps = memoize( lowercaseProps );\n\n/**\n *\n * @param {Options} options\n */\nexport function createHighlighterText( {\n\tactiveClassName = '',\n\tactiveIndex = -1,\n\tactiveStyle,\n\tautoEscape,\n\tcaseSensitive = false,\n\tchildren,\n\tfindChunks,\n\thighlightClassName = '',\n\thighlightStyle = {},\n\thighlightTag = 'mark',\n\tsanitize,\n\tsearchWords = [],\n\tunhighlightClassName = '',\n\tunhighlightStyle,\n} ) {\n\tif ( ! children ) return null;\n\tif ( typeof children !== 'string' ) return children;\n\n\tconst textToHighlight = children;\n\n\tconst chunks = findAll( {\n\t\tautoEscape,\n\t\tcaseSensitive,\n\t\tfindChunks,\n\t\tsanitize,\n\t\tsearchWords,\n\t\ttextToHighlight,\n\t} );\n\tconst HighlightTag = highlightTag;\n\tlet highlightIndex = -1;\n\tlet highlightClassNames = '';\n\tlet highlightStyles;\n\n\tconst textContent = chunks.map( ( chunk, index ) => {\n\t\tconst text = textToHighlight.substr(\n\t\t\tchunk.start,\n\t\t\tchunk.end - chunk.start\n\t\t);\n\n\t\tif ( chunk.highlight ) {\n\t\t\thighlightIndex++;\n\n\t\t\tlet highlightClass;\n\t\t\tif ( typeof highlightClassName === 'object' ) {\n\t\t\t\tif ( ! caseSensitive ) {\n\t\t\t\t\thighlightClassName =\n\t\t\t\t\t\tmemoizedLowercaseProps( highlightClassName );\n\t\t\t\t\thighlightClass = highlightClassName[ text.toLowerCase() ];\n\t\t\t\t} else {\n\t\t\t\t\thighlightClass = highlightClassName[ text ];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thighlightClass = highlightClassName;\n\t\t\t}\n\n\t\t\tconst isActive = highlightIndex === +activeIndex;\n\n\t\t\thighlightClassNames = `${ highlightClass } ${\n\t\t\t\tisActive ? activeClassName : ''\n\t\t\t}`;\n\t\t\thighlightStyles =\n\t\t\t\tisActive === true && activeStyle !== null\n\t\t\t\t\t? Object.assign( {}, highlightStyle, activeStyle )\n\t\t\t\t\t: highlightStyle;\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst props = {\n\t\t\t\tchildren: text,\n\t\t\t\tclassName: highlightClassNames,\n\t\t\t\tkey: index,\n\t\t\t\tstyle: highlightStyles,\n\t\t\t};\n\n\t\t\t// Don't attach arbitrary props to DOM elements; this triggers React DEV warnings (https://fb.me/react-unknown-prop)\n\t\t\t// Only pass through the highlightIndex attribute for custom components.\n\t\t\tif ( typeof HighlightTag !== 'string' ) {\n\t\t\t\tprops.highlightIndex = highlightIndex;\n\t\t\t}\n\n\t\t\treturn createElement( HighlightTag, props );\n\t\t}\n\t\treturn createElement( 'span', {\n\t\t\tchildren: text,\n\t\t\tclassName: unhighlightClassName,\n\t\t\tkey: index,\n\t\t\tstyle: unhighlightStyle,\n\t\t} );\n\t} );\n\n\treturn textContent;\n}\n"]}