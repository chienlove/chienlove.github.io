{"version":3,"sources":["@wordpress/components/src/text/hook.js"],"names":["css","useMemo","Children","cloneElement","hasConnectNamespace","useContextSystem","useTruncate","getOptimalTextShade","styles","createHighlighterText","getFontSize","CONFIG","COLORS","getLineHeight","useCx","useText","props","adjustLineHeightForInnerControls","align","children","className","color","ellipsizeMode","isDestructive","display","highlightEscape","highlightCaseSensitive","highlightWords","highlightSanitize","isBlock","letterSpacing","lineHeight","lineHeightProp","optimizeReadabilityFor","size","truncate","upperCase","variant","weight","fontWeight","otherProps","content","isHighlighter","Array","isArray","isCaption","TypeError","autoEscape","caseSensitive","searchWords","sanitize","cx","classes","sx","Base","fontSize","textAlign","optimalTextColor","isOptimalTextColorDark","gray","white","Text","destructive","highlighterText","block","muted","finalEllipsizeMode","finalComponentProps","truncateProps","map","child","isLink"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, Children, cloneElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { hasConnectNamespace, useContextSystem } from '../ui/context';\nimport { useTruncate } from '../truncate';\nimport { getOptimalTextShade } from '../ui/utils';\nimport * as styles from './styles';\nimport { createHighlighterText } from './utils';\nimport { getFontSize } from '../ui/utils/font-size';\nimport { CONFIG, COLORS } from '../utils';\nimport { getLineHeight } from './get-line-height';\nimport { useCx } from '../utils/hooks/use-cx';\n\n/**\n * @param {import('../ui/context').WordPressComponentProps<import('./types').Props, 'span'>} props\n */\nexport default function useText( props ) {\n\tconst {\n\t\tadjustLineHeightForInnerControls,\n\t\talign,\n\t\tchildren,\n\t\tclassName,\n\t\tcolor,\n\t\tellipsizeMode,\n\t\tisDestructive = false,\n\t\tdisplay,\n\t\thighlightEscape = false,\n\t\thighlightCaseSensitive = false,\n\t\thighlightWords,\n\t\thighlightSanitize,\n\t\tisBlock = false,\n\t\tletterSpacing,\n\t\tlineHeight: lineHeightProp,\n\t\toptimizeReadabilityFor,\n\t\tsize,\n\t\ttruncate = false,\n\t\tupperCase = false,\n\t\tvariant,\n\t\tweight = CONFIG.fontWeight,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Text' );\n\n\t/** @type {import('react').ReactNode} */\n\tlet content = children;\n\tconst isHighlighter = Array.isArray( highlightWords );\n\tconst isCaption = size === 'caption';\n\n\tif ( isHighlighter ) {\n\t\tif ( typeof children !== 'string' ) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'`children` of `Text` must only be `string` types when `highlightWords` is defined'\n\t\t\t);\n\t\t}\n\n\t\tcontent = createHighlighterText( {\n\t\t\tautoEscape: highlightEscape,\n\t\t\t// Disable reason: We need to disable this otherwise it erases the cast\n\t\t\t// eslint-disable-next-line object-shorthand\n\t\t\tchildren: /** @type {string} */ ( children ),\n\t\t\tcaseSensitive: highlightCaseSensitive,\n\t\t\tsearchWords: highlightWords,\n\t\t\tsanitize: highlightSanitize,\n\t\t} );\n\t}\n\n\tconst cx = useCx();\n\n\tconst classes = useMemo( () => {\n\t\tconst sx = {};\n\n\t\tconst lineHeight = getLineHeight(\n\t\t\tadjustLineHeightForInnerControls,\n\t\t\tlineHeightProp\n\t\t);\n\n\t\tsx.Base = css( {\n\t\t\tcolor,\n\t\t\tdisplay,\n\t\t\tfontSize: getFontSize( size ),\n\t\t\t/* eslint-disable jsdoc/valid-types */\n\t\t\tfontWeight:\n\t\t\t\t/** @type {import('react').CSSProperties['fontWeight']} */ (\n\t\t\t\t\tweight\n\t\t\t\t),\n\t\t\t/* eslint-enable jsdoc/valid-types */\n\t\t\tlineHeight,\n\t\t\tletterSpacing,\n\t\t\ttextAlign: align,\n\t\t} );\n\n\t\tsx.upperCase = css( { textTransform: 'uppercase' } );\n\n\t\tsx.optimalTextColor = null;\n\n\t\tif ( optimizeReadabilityFor ) {\n\t\t\tconst isOptimalTextColorDark =\n\t\t\t\tgetOptimalTextShade( optimizeReadabilityFor ) === 'dark';\n\n\t\t\tsx.optimalTextColor = isOptimalTextColorDark\n\t\t\t\t? css( { color: COLORS.gray[ 900 ] } )\n\t\t\t\t: css( { color: COLORS.white } );\n\t\t}\n\n\t\treturn cx(\n\t\t\tstyles.Text,\n\t\t\tsx.Base,\n\t\t\tsx.optimalTextColor,\n\t\t\tisDestructive && styles.destructive,\n\t\t\t!! isHighlighter && styles.highlighterText,\n\t\t\tisBlock && styles.block,\n\t\t\tisCaption && styles.muted,\n\t\t\tvariant && styles[ variant ],\n\t\t\tupperCase && sx.upperCase,\n\t\t\tclassName\n\t\t);\n\t}, [\n\t\tadjustLineHeightForInnerControls,\n\t\talign,\n\t\tclassName,\n\t\tcolor,\n\t\tcx,\n\t\tdisplay,\n\t\tisBlock,\n\t\tisCaption,\n\t\tisDestructive,\n\t\tisHighlighter,\n\t\tletterSpacing,\n\t\tlineHeightProp,\n\t\toptimizeReadabilityFor,\n\t\tsize,\n\t\tupperCase,\n\t\tvariant,\n\t\tweight,\n\t] );\n\n\t/** @type {undefined | 'auto' | 'none'} */\n\tlet finalEllipsizeMode;\n\tif ( truncate === true ) {\n\t\tfinalEllipsizeMode = 'auto';\n\t}\n\tif ( truncate === false ) {\n\t\tfinalEllipsizeMode = 'none';\n\t}\n\n\tconst finalComponentProps = {\n\t\t...otherProps,\n\t\tclassName: classes,\n\t\tchildren,\n\t\tellipsizeMode: ellipsizeMode || finalEllipsizeMode,\n\t};\n\n\tconst truncateProps = useTruncate( finalComponentProps );\n\n\t/**\n\t * Enhance child `<Link />` components to inherit font size.\n\t */\n\tif ( ! truncate && Array.isArray( children ) ) {\n\t\tcontent = Children.map( children, ( child ) => {\n\t\t\tif (\n\t\t\t\ttypeof child !== 'object' ||\n\t\t\t\tchild === null ||\n\t\t\t\t! ( 'props' in child )\n\t\t\t) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\tconst isLink = hasConnectNamespace( child, [ 'Link' ] );\n\t\t\tif ( isLink ) {\n\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\tsize: child.props.size || 'inherit',\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn child;\n\t\t} );\n\t}\n\n\treturn {\n\t\t...truncateProps,\n\t\tchildren: truncate ? truncateProps.children : content,\n\t};\n}\n"]}